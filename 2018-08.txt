From taleinat at gmail.com  Wed Aug  1 01:59:05 2018
From: taleinat at gmail.com (Tal Einat)
Date: Wed, 1 Aug 2018 08:59:05 +0300
Subject: [python-committers] Results of Pablo's promotion votes: Pablo
 is promoted as a core dev!
In-Reply-To: <CA+3bQGFCbYTcYnNZ4qUzbav-++f9RkFfAGekPKPz6DoHk+z52w@mail.gmail.com>
References: <CA+3bQGHyYTzZQVOUpXGQgR71Gr=LTVeRk0hxUoGRk5SFnUn0gw@mail.gmail.com>
 <CA+3bQGFCbYTcYnNZ4qUzbav-++f9RkFfAGekPKPz6DoHk+z52w@mail.gmail.com>
Message-ID: <CALWZvp7dh5X=Wcs9yoGjWVOLL6Dn8XBKT+CxFkRRpVgLf4W-pw@mail.gmail.com>

On Tue, Jul 31, 2018 at 1:27 PM, Victor Stinner <vstinner at redhat.com> wrote:
> Sadly, I was less available than I expected to review his work, and so
> I don't feel comfortable yet to stop mentoring.
>
> I asked Pablo and he is fine if I extend the mentoring to the end of
> September. I expect that one extra month should be enough, but I will
> be in holiday most of August ;-)

+1

I've been reviewing some of Pablo's PRs in the past few weeks. What
I've seen is a lot of great work and quick and positive reaction to
reviews and feedback. I'm excited to have him join the core-dev team!

I too think he would benefit from additional mentoring, including
specifically reviewing of his PRs. This is since I still often see
various small issues in his PRs, usually minor things such as
whitespace or out-of-date comments/docs/NEWS. This reminds me of
myself in my early days of contributing to Python; KBK had to be
patient with me until I learned to review my patches once more before
submitting them, and reach a more consistently high quality.

- Tal Einat

From mariatta.wijaya at gmail.com  Wed Aug  1 15:41:51 2018
From: mariatta.wijaya at gmail.com (Mariatta Wijaya)
Date: Wed, 1 Aug 2018 12:41:51 -0700
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
Message-ID: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>

Since this is like a CFP I figured we should clarify what's expected the
proposal, and I also wanted to be more detailed in the timeline.

*Oct 1 00:00:00 UTC:* Deadline of coming up with proposals of governance
model.

To be included in the proposal:
- explanation and reasoning of the governance model
- expected roles and responsibilities
- candidate for the role need not be included at this time, since we're
only choosing the governance model. Depending on the governance model
chosen, we might have different people to be nominated. There will be a
separate process for nominating the candidate.
- the term of governance: is it for life? 5 years? 10 years?

Who can submit the proposal?
Python core developers. Individual core devs can submit a proposal, or
co-author the proposal with another core dev.

How to submit the proposal?
Proposal should be in a form of a PEP, and merged into peps repo before Oct
1 00:00:00 UTC. Proposals not merged after Oct 1 00:00:00 UTC will not be
considered.

*Oct 1 - Nov 15: Review period.*
All core developers will review the PEPs, and ask any questions to the PEP
author. This timeline allows for enough time for all core devs to carefully
review each PEPs, and for authors to respond.

There will be two parts of this:

*Review phase 1: Oct 1- Nov 1:* Allow changes and tweaks to the proposed
PEPs.
I figured people will have questions and will need to clarify the PEPs
during this period. But if we want the PEP to be final by Oct 1, that's
fine by me. maybe allow typo fixes still.

*Review phase 2: Nov 1 00:00:00 UTC*: No more changes to the above PEPs.
No more tweaks to these PEPs. PRs to these PEPs should be rejected.
This is the final chance to carefully review all governance PEPs, and
formulate your decisions.

*Nov 15 00:00:00 UTC: Voting for new governance model starts, and will go
for 2 weeks*
Send reminders for folks to vote.

Who can vote:
Only core developers can vote.

*Vote will be anonymous.*
*We will use the system used to elect PSF board members.*


*Dec 1 00:00:00 UTC: Voting ended*.
The most voted proposal will be accepted.
Depending on the chosen governance model, we'll begin nominating candidates
to fill the role(s).

*Dec 10 00:00:00 UTC Deadline for nominating candidates to fill the role*
Maybe just one PEP to list all the nominations, instead of separate PEPs of
each candidates.

Who can nominate: Python core developers
Who can be nominated: Python core developers

*Dec 15 00:00:00 UTC Voting for new successor starts*
(Depends on the governance model chosen on Dec 1)

*Who can vote:*
*Only core developers can vote.*

*Vote will be anonymous.*
*We will use the system used to elect PSF board members.*

*Jan 1 00:00:00 UTC Voting for new successor ends.* Most voted candidate(s)
is chosen.

The PSF's Code of Conduct applies to all interactions with core devs
regarding this process, including interactions in any mailing lists, zulip,
IRC, twitter, GitHub, backchannels.

Questions
1. For the purpose of eligibility (for voting or writing the PEP), who are
considered as "core developers"? Anyone in python-committers? Anyone on
Python Core GitHub team? Anyone with commit bit? What about core developers
of alternate implementation (PyPy, IronPython, etc)

2. Are people ok UTC timezone?

3. Should this be a PEP?

Mariatta
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180801/30680205/attachment.html>

From thomas at python.org  Wed Aug  1 16:36:40 2018
From: thomas at python.org (Thomas Wouters)
Date: Wed, 1 Aug 2018 13:36:40 -0700
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
Message-ID: <CAPdQG2pigcwKr1Dd=Yk16a7+n4Lout6dAHD-OkAxz5rw=vVZ5A@mail.gmail.com>

On Wed, Aug 1, 2018 at 12:42 PM Mariatta Wijaya <mariatta.wijaya at gmail.com>
wrote:

> 2. Are people ok UTC timezone?
>

FYI, for the PSF elections and similar deadlines, we use the AoE timezone:
https://www.timeanddate.com/time/zones/aoe -- it makes it harder for people
to miss the deadline for timezone reasons.

-- 
Thomas Wouters <thomas at python.org>

Hi! I'm an email virus! Think twice before sending your email to help me
spread!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180801/8e8062f4/attachment.html>

From mariatta.wijaya at gmail.com  Wed Aug  1 16:41:27 2018
From: mariatta.wijaya at gmail.com (Mariatta Wijaya)
Date: Wed, 1 Aug 2018 13:41:27 -0700
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <CAPdQG2pigcwKr1Dd=Yk16a7+n4Lout6dAHD-OkAxz5rw=vVZ5A@mail.gmail.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <CAPdQG2pigcwKr1Dd=Yk16a7+n4Lout6dAHD-OkAxz5rw=vVZ5A@mail.gmail.com>
Message-ID: <CAGbohnZztBVHHPYz8absx2oSrdafh733r2g2EdpZYo5EMB=G0w@mail.gmail.com>

Thanks! AoE timezone works for me.
In that case, let's use AoE instead of UTC.

Mariatta


On Wed, Aug 1, 2018 at 1:36 PM Thomas Wouters <thomas at python.org> wrote:

>
>
> On Wed, Aug 1, 2018 at 12:42 PM Mariatta Wijaya <mariatta.wijaya at gmail.com>
> wrote:
>
>> 2. Are people ok UTC timezone?
>>
>
> FYI, for the PSF elections and similar deadlines, we use the AoE timezone:
> https://www.timeanddate.com/time/zones/aoe -- it makes it harder for
> people to miss the deadline for timezone reasons.
>
> --
> Thomas Wouters <thomas at python.org>
>
> Hi! I'm an email virus! Think twice before sending your email to help me
> spread!
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180801/f611483b/attachment.html>

From mal at egenix.com  Wed Aug  1 17:10:17 2018
From: mal at egenix.com (M.-A. Lemburg)
Date: Wed, 1 Aug 2018 23:10:17 +0200
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
Message-ID: <8fa6d286-13a7-d79f-45c1-257af3a4f323@egenix.com>

Thanks for your action plan, Mariatta, but I'm -1 on having
strict timelines for these processes.

We need to gradually approach a new model as we've done in the
past decades and not push for any possibly borked model right from
the start. The processes for this need to stay flexible, easy
to adapt and include the possibility for failure.

There is no rush for any such model. There is no need to select
anyone for life or longer periods: e.g. we may want to change the
whole model after 2 years - what are we then going to do with
those persons ?

We may very well end up not having any kind of governance body
initially and use a simple democratic voting scheme for any
issues which may arise.


FWIW, I don't see anyone in the core development team with the
necessary language design skills, vision or intuition to provide
an overarching scheme for the future of Python and I don't expect
that we'll find such people any time soon.

What we do have is a good number of smart people with expert
domain knowledge. We should build on those for the time being
until we have grown a vision for the future to provide more
direction.

So let's ponder some more about ideas we could use to
get there and perhaps watch some Monty Python movies for
inspiration ;-)


Cheers,
-- 
Marc-Andre Lemburg


On 01.08.2018 21:41, Mariatta Wijaya wrote:
> Since this is like a CFP I figured we should clarify what's expected the
> proposal, and I also wanted to be more detailed in the timeline.
> 
> *Oct 1 00:00:00 UTC:* Deadline of coming up with proposals of governance
> model.
> 
> To be included in the proposal:
> - explanation and reasoning of the governance model
> - expected roles and responsibilities
> - candidate for the role need not be included at this time, since we're
> only choosing the governance model. Depending on the governance model
> chosen, we might have different people to be nominated. There will be a
> separate process for nominating the candidate.
> - the term of governance: is it for life? 5 years? 10 years?
> 
> Who can submit the proposal?
> Python core developers. Individual core devs can submit a proposal, or
> co-author the proposal with another core dev.
> 
> How to submit the proposal?
> Proposal should be in a form of a PEP, and merged into peps repo before Oct
> 1 00:00:00 UTC. Proposals not merged after Oct 1 00:00:00 UTC will not be
> considered.
> 
> *Oct 1 - Nov 15: Review period.*
> All core developers will review the PEPs, and ask any questions to the PEP
> author. This timeline allows for enough time for all core devs to carefully
> review each PEPs, and for authors to respond.
> 
> There will be two parts of this:
> 
> *Review phase 1: Oct 1- Nov 1:* Allow changes and tweaks to the proposed
> PEPs.
> I figured people will have questions and will need to clarify the PEPs
> during this period. But if we want the PEP to be final by Oct 1, that's
> fine by me. maybe allow typo fixes still.
> 
> *Review phase 2: Nov 1 00:00:00 UTC*: No more changes to the above PEPs.
> No more tweaks to these PEPs. PRs to these PEPs should be rejected.
> This is the final chance to carefully review all governance PEPs, and
> formulate your decisions.
> 
> *Nov 15 00:00:00 UTC: Voting for new governance model starts, and will go
> for 2 weeks*
> Send reminders for folks to vote.
> 
> Who can vote:
> Only core developers can vote.
> 
> *Vote will be anonymous.*
> *We will use the system used to elect PSF board members.*
> 
> 
> *Dec 1 00:00:00 UTC: Voting ended*.
> The most voted proposal will be accepted.
> Depending on the chosen governance model, we'll begin nominating candidates
> to fill the role(s).
> 
> *Dec 10 00:00:00 UTC Deadline for nominating candidates to fill the role*
> Maybe just one PEP to list all the nominations, instead of separate PEPs of
> each candidates.
> 
> Who can nominate: Python core developers
> Who can be nominated: Python core developers
> 
> *Dec 15 00:00:00 UTC Voting for new successor starts*
> (Depends on the governance model chosen on Dec 1)
> 
> *Who can vote:*
> *Only core developers can vote.*
> 
> *Vote will be anonymous.*
> *We will use the system used to elect PSF board members.*
> 
> *Jan 1 00:00:00 UTC Voting for new successor ends.* Most voted candidate(s)
> is chosen.
> 
> The PSF's Code of Conduct applies to all interactions with core devs
> regarding this process, including interactions in any mailing lists, zulip,
> IRC, twitter, GitHub, backchannels.
> 
> Questions
> 1. For the purpose of eligibility (for voting or writing the PEP), who are
> considered as "core developers"? Anyone in python-committers? Anyone on
> Python Core GitHub team? Anyone with commit bit? What about core developers
> of alternate implementation (PyPy, IronPython, etc)
> 
> 2. Are people ok UTC timezone?
> 
> 3. Should this be a PEP?
> 
> Mariatta
> 
> 
> 
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
> 

-- 
Marc-Andre Lemburg
eGenix.com

Professional Python Services directly from the Experts (#1, Aug 01 2018)
>>> Python Projects, Coaching and Consulting ...  http://www.egenix.com/
>>> Python Database Interfaces ...           http://products.egenix.com/
>>> Plone/Zope Database Interfaces ...           http://zope.egenix.com/
________________________________________________________________________

::: We implement business ideas - efficiently in both time and costs :::

   eGenix.com Software, Skills and Services GmbH  Pastor-Loeh-Str.48
    D-40764 Langenfeld, Germany. CEO Dipl.-Math. Marc-Andre Lemburg
           Registered at Amtsgericht Duesseldorf: HRB 46611
               http://www.egenix.com/company/contact/
                      http://www.malemburg.com/


From mal at egenix.com  Wed Aug  1 17:15:43 2018
From: mal at egenix.com (M.-A. Lemburg)
Date: Wed, 1 Aug 2018 23:15:43 +0200
Subject: [python-committers] List of all core developers
Message-ID: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>

It's become fairly obvious that we are missing a list of core
developers on some site. One we can use as reference and one
which core devs can also show to other to prove they are
core developers.

I guess the natural place for such a list is the dev guide,
but we could also use a page on www.python.org, if that's easier
to maintain.

Regarding format, I'd suggest to use the same as PSF Fellows
list:

https://www.python.org/psf/members/#fellows

Thoughts ?

Note: Asking for this now is not completely unintentional.
The EuroPython Society has something to announce which will
require such a list.

Thanks,
-- 
Marc-Andre Lemburg
eGenix.com

Professional Python Services directly from the Experts (#1, Aug 01 2018)
>>> Python Projects, Coaching and Consulting ...  http://www.egenix.com/
>>> Python Database Interfaces ...           http://products.egenix.com/
>>> Plone/Zope Database Interfaces ...           http://zope.egenix.com/
________________________________________________________________________

::: We implement business ideas - efficiently in both time and costs :::

   eGenix.com Software, Skills and Services GmbH  Pastor-Loeh-Str.48
    D-40764 Langenfeld, Germany. CEO Dipl.-Math. Marc-Andre Lemburg
           Registered at Amtsgericht Duesseldorf: HRB 46611
               http://www.egenix.com/company/contact/
                      http://www.malemburg.com/


From njs at pobox.com  Wed Aug  1 17:22:48 2018
From: njs at pobox.com (Nathaniel Smith)
Date: Wed, 1 Aug 2018 14:22:48 -0700
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
Message-ID: <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>

On Wed, Aug 1, 2018 at 12:41 PM, Mariatta Wijaya
<mariatta.wijaya at gmail.com> wrote:
> Since this is like a CFP I figured we should clarify what's expected the
> proposal, and I also wanted to be more detailed in the timeline.
>
> Oct 1 00:00:00 UTC: Deadline of coming up with proposals of governance
> model.
>
> To be included in the proposal:
> - explanation and reasoning of the governance model
> - expected roles and responsibilities
> - candidate for the role need not be included at this time, since we're only
> choosing the governance model. Depending on the governance model chosen, we
> might have different people to be nominated. There will be a separate
> process for nominating the candidate.
> - the term of governance: is it for life? 5 years? 10 years?
>
> Who can submit the proposal?
> Python core developers. Individual core devs can submit a proposal, or
> co-author the proposal with another core dev.
>
> How to submit the proposal?
> Proposal should be in a form of a PEP, and merged into peps repo before Oct
> 1 00:00:00 UTC. Proposals not merged after Oct 1 00:00:00 UTC will not be
> considered.
>
> Oct 1 - Nov 15: Review period.
> All core developers will review the PEPs, and ask any questions to the PEP
> author. This timeline allows for enough time for all core devs to carefully
> review each PEPs, and for authors to respond.
>
> There will be two parts of this:
>
> Review phase 1: Oct 1- Nov 1: Allow changes and tweaks to the proposed PEPs.
> I figured people will have questions and will need to clarify the PEPs
> during this period. But if we want the PEP to be final by Oct 1, that's fine
> by me. maybe allow typo fixes still.
>
> Review phase 2: Nov 1 00:00:00 UTC: No more changes to the above PEPs.
> No more tweaks to these PEPs. PRs to these PEPs should be rejected.
> This is the final chance to carefully review all governance PEPs, and
> formulate your decisions.

I'm worried that this whole plan is a bad idea.

This kind of process with deadlines, proposals, votes, etc., is an
excellent way to take legitimacy and make it visible. That's a
valuable thing, and addresses an important problem. But it's not the
problem I'm most worried about here.

As engineers, we know that every design has trade-offs, and that goes
for governance as well. Having a universally acclaimed BDFL like Guido
has many tremendous advantages. But it also has one tremendous
disadvantage: because we always knew Guido would make the final
decision, and that we could always appeal to him when things didn't go
the way we like, python-dev has never had to learn to work out
disagreements and get along.

Now we have to figure that out: the legitimacy of any new governance
system is ultimately going to have to rest on the consensus of the
core devs. The only way I know to get that is by taking the time to
work through the difficult conversations. If these deadlines just
encourage people to keep moving and engaging, then that's great. But I
worry that if we impose a cut-off like this up front, then we'll take
that as an excuse to skip doing that work, because there's no time,
and if someone disagrees it's easier to vote than to actually engage
and work it out.

-n

-- 
Nathaniel J. Smith -- https://vorpus.org

From antoine at python.org  Wed Aug  1 17:28:56 2018
From: antoine at python.org (Antoine Pitrou)
Date: Wed, 1 Aug 2018 23:28:56 +0200
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
Message-ID: <e7ec9199-897a-6dd2-e813-8f18700897c6@python.org>


I think Nathaniel and Marc-Andr? are speaking wisely here.
Sorry, I've not much to add ;-)

Regards

Antoine.


Le 01/08/2018 ? 23:22, Nathaniel Smith a ?crit?:
> On Wed, Aug 1, 2018 at 12:41 PM, Mariatta Wijaya
> <mariatta.wijaya at gmail.com> wrote:
>> Since this is like a CFP I figured we should clarify what's expected the
>> proposal, and I also wanted to be more detailed in the timeline.
>>
>> Oct 1 00:00:00 UTC: Deadline of coming up with proposals of governance
>> model.
>>
>> To be included in the proposal:
>> - explanation and reasoning of the governance model
>> - expected roles and responsibilities
>> - candidate for the role need not be included at this time, since we're only
>> choosing the governance model. Depending on the governance model chosen, we
>> might have different people to be nominated. There will be a separate
>> process for nominating the candidate.
>> - the term of governance: is it for life? 5 years? 10 years?
>>
>> Who can submit the proposal?
>> Python core developers. Individual core devs can submit a proposal, or
>> co-author the proposal with another core dev.
>>
>> How to submit the proposal?
>> Proposal should be in a form of a PEP, and merged into peps repo before Oct
>> 1 00:00:00 UTC. Proposals not merged after Oct 1 00:00:00 UTC will not be
>> considered.
>>
>> Oct 1 - Nov 15: Review period.
>> All core developers will review the PEPs, and ask any questions to the PEP
>> author. This timeline allows for enough time for all core devs to carefully
>> review each PEPs, and for authors to respond.
>>
>> There will be two parts of this:
>>
>> Review phase 1: Oct 1- Nov 1: Allow changes and tweaks to the proposed PEPs.
>> I figured people will have questions and will need to clarify the PEPs
>> during this period. But if we want the PEP to be final by Oct 1, that's fine
>> by me. maybe allow typo fixes still.
>>
>> Review phase 2: Nov 1 00:00:00 UTC: No more changes to the above PEPs.
>> No more tweaks to these PEPs. PRs to these PEPs should be rejected.
>> This is the final chance to carefully review all governance PEPs, and
>> formulate your decisions.
> 
> I'm worried that this whole plan is a bad idea.
> 
> This kind of process with deadlines, proposals, votes, etc., is an
> excellent way to take legitimacy and make it visible. That's a
> valuable thing, and addresses an important problem. But it's not the
> problem I'm most worried about here.
> 
> As engineers, we know that every design has trade-offs, and that goes
> for governance as well. Having a universally acclaimed BDFL like Guido
> has many tremendous advantages. But it also has one tremendous
> disadvantage: because we always knew Guido would make the final
> decision, and that we could always appeal to him when things didn't go
> the way we like, python-dev has never had to learn to work out
> disagreements and get along.
> 
> Now we have to figure that out: the legitimacy of any new governance
> system is ultimately going to have to rest on the consensus of the
> core devs. The only way I know to get that is by taking the time to
> work through the difficult conversations. If these deadlines just
> encourage people to keep moving and engaging, then that's great. But I
> worry that if we impose a cut-off like this up front, then we'll take
> that as an excuse to skip doing that work, because there's no time,
> and if someone disagrees it's easier to vote than to actually engage
> and work it out.
> 
> -n
> 

From mariatta.wijaya at gmail.com  Wed Aug  1 17:28:49 2018
From: mariatta.wijaya at gmail.com (Mariatta Wijaya)
Date: Wed, 1 Aug 2018 14:28:49 -0700
Subject: [python-committers] List of all core developers
In-Reply-To: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
Message-ID: <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>

See also an open issue to revamp the Developer log:
https://github.com/python/devguide/issues/390

Someone has also said that they're working on tracking down the dormant
core devs, but now I can't find that email.

Mariatta


On Wed, Aug 1, 2018 at 2:15 PM M.-A. Lemburg <mal at egenix.com> wrote:

> It's become fairly obvious that we are missing a list of core
> developers on some site. One we can use as reference and one
> which core devs can also show to other to prove they are
> core developers.
>
> I guess the natural place for such a list is the dev guide,
> but we could also use a page on www.python.org, if that's easier
> to maintain.
>
> Regarding format, I'd suggest to use the same as PSF Fellows
> list:
>
> https://www.python.org/psf/members/#fellows
>
> Thoughts ?
>
> Note: Asking for this now is not completely unintentional.
> The EuroPython Society has something to announce which will
> require such a list.
>
> Thanks,
> --
> Marc-Andre Lemburg
> eGenix.com
>
> Professional Python Services directly from the Experts (#1, Aug 01 2018)
> >>> Python Projects, Coaching and Consulting ...  http://www.egenix.com/
> >>> Python Database Interfaces ...           http://products.egenix.com/
> >>> Plone/Zope Database Interfaces ...           http://zope.egenix.com/
> ________________________________________________________________________
>
> ::: We implement business ideas - efficiently in both time and costs :::
>
>    eGenix.com Software, Skills and Services GmbH  Pastor-Loeh-Str.48
>     D-40764 Langenfeld, Germany. CEO Dipl.-Math. Marc-Andre Lemburg
>            Registered at Amtsgericht Duesseldorf: HRB 46611
>                http://www.egenix.com/company/contact/
>                       http://www.malemburg.com/
>
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180801/8d72d680/attachment-0001.html>

From jackdied at gmail.com  Wed Aug  1 17:31:01 2018
From: jackdied at gmail.com (Jack Diederich)
Date: Wed, 1 Aug 2018 17:31:01 -0400
Subject: [python-committers] List of all core developers
In-Reply-To: <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
Message-ID: <CACLn2+0E2hSQg5Mkp4T2riCHydLLuXu9b=H-UWPSbNPGDFoZLg@mail.gmail.com>

https://hg.python.org/committers.txt

On Wed, Aug 1, 2018 at 5:28 PM, Mariatta Wijaya <mariatta.wijaya at gmail.com>
wrote:

> See also an open issue to revamp the Developer log:
> https://github.com/python/devguide/issues/390
>
> Someone has also said that they're working on tracking down the dormant
> core devs, but now I can't find that email.
>
> Mariatta
>
>
> On Wed, Aug 1, 2018 at 2:15 PM M.-A. Lemburg <mal at egenix.com> wrote:
>
>> It's become fairly obvious that we are missing a list of core
>> developers on some site. One we can use as reference and one
>> which core devs can also show to other to prove they are
>> core developers.
>>
>> I guess the natural place for such a list is the dev guide,
>> but we could also use a page on www.python.org, if that's easier
>> to maintain.
>>
>> Regarding format, I'd suggest to use the same as PSF Fellows
>> list:
>>
>> https://www.python.org/psf/members/#fellows
>>
>> Thoughts ?
>>
>> Note: Asking for this now is not completely unintentional.
>> The EuroPython Society has something to announce which will
>> require such a list.
>>
>> Thanks,
>> --
>> Marc-Andre Lemburg
>> eGenix.com
>>
>> Professional Python Services directly from the Experts (#1, Aug 01 2018)
>> >>> Python Projects, Coaching and Consulting ...  http://www.egenix.com/
>> >>> Python Database Interfaces ...           http://products.egenix.com/
>> >>> Plone/Zope Database Interfaces ...           http://zope.egenix.com/
>> ________________________________________________________________________
>>
>> ::: We implement business ideas - efficiently in both time and costs :::
>>
>>    eGenix.com Software, Skills and Services GmbH  Pastor-Loeh-Str.48
>>     D-40764 Langenfeld, Germany. CEO Dipl.-Math. Marc-Andre Lemburg
>>            Registered at Amtsgericht Duesseldorf: HRB 46611
>>                http://www.egenix.com/company/contact/
>>                       http://www.malemburg.com/
>>
>> _______________________________________________
>> python-committers mailing list
>> python-committers at python.org
>> https://mail.python.org/mailman/listinfo/python-committers
>> Code of Conduct: https://www.python.org/psf/codeofconduct/
>>
>
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180801/f3ca32ad/attachment.html>

From antoine at python.org  Wed Aug  1 17:37:40 2018
From: antoine at python.org (Antoine Pitrou)
Date: Wed, 1 Aug 2018 23:37:40 +0200
Subject: [python-committers] List of all core developers
In-Reply-To: <CACLn2+0E2hSQg5Mkp4T2riCHydLLuXu9b=H-UWPSbNPGDFoZLg@mail.gmail.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <CACLn2+0E2hSQg5Mkp4T2riCHydLLuXu9b=H-UWPSbNPGDFoZLg@mail.gmail.com>
Message-ID: <e2ec9443-76c5-c0e2-f6e7-cf92d0d44792@python.org>



Le 01/08/2018 ? 23:31, Jack Diederich a ?crit?:
> https://hg.python.org/committers.txt

Probably outdated, for example Pablo Salingo Salgado doesn't seem there.

Regards

Antoine.

> 
> On Wed, Aug 1, 2018 at 5:28 PM, Mariatta Wijaya
> <mariatta.wijaya at gmail.com <mailto:mariatta.wijaya at gmail.com>> wrote:
> 
>     See also an open issue to revamp the Developer log:
>     https://github.com/python/devguide/issues/390
>     <https://github.com/python/devguide/issues/390>
> 
>     Someone has also said that they're working on tracking down the
>     dormant core devs, but now I can't find that email.
> 
>     Mariatta
> 
> 
>     On Wed, Aug 1, 2018 at 2:15 PM M.-A. Lemburg <mal at egenix.com
>     <mailto:mal at egenix.com>> wrote:
> 
>         It's become fairly obvious that we are missing a list of core
>         developers on some site. One we can use as reference and one
>         which core devs can also show to other to prove they are
>         core developers.
> 
>         I guess the natural place for such a list is the dev guide,
>         but we could also use a page on www.python.org
>         <http://www.python.org>, if that's easier
>         to maintain.
> 
>         Regarding format, I'd suggest to use the same as PSF Fellows
>         list:
> 
>         https://www.python.org/psf/members/#fellows
>         <https://www.python.org/psf/members/#fellows>
> 
>         Thoughts ?
> 
>         Note: Asking for this now is not completely unintentional.
>         The EuroPython Society has something to announce which will
>         require such a list.
> 
>         Thanks,
>         -- 
>         Marc-Andre Lemburg
>         eGenix.com
> 
>         Professional Python Services directly from the Experts (#1, Aug
>         01 2018)
>         >>> Python Projects, Coaching and Consulting ...?
>         http://www.egenix.com/
>         >>> Python Database Interfaces ...? ? ? ? ?
>         ?http://products.egenix.com/
>         >>> Plone/Zope Database Interfaces ...? ? ? ? ?
>         ?http://zope.egenix.com/
>         ________________________________________________________________________
> 
>         ::: We implement business ideas - efficiently in both time and
>         costs :::
> 
>         ? ?eGenix.com Software, Skills and Services GmbH? Pastor-Loeh-Str.48
>         ? ? D-40764 Langenfeld, Germany. CEO Dipl.-Math. Marc-Andre Lemburg
>         ? ? ? ? ? ?Registered at Amtsgericht Duesseldorf: HRB 46611
>         ? ? ? ? ? ? ? ?http://www.egenix.com/company/contact/
>         <http://www.egenix.com/company/contact/>
>         ? ? ? ? ? ? ? ? ? ? ? http://www.malemburg.com/
> 
>         _______________________________________________
>         python-committers mailing list
>         python-committers at python.org <mailto:python-committers at python.org>
>         https://mail.python.org/mailman/listinfo/python-committers
>         <https://mail.python.org/mailman/listinfo/python-committers>
>         Code of Conduct: https://www.python.org/psf/codeofconduct/
>         <https://www.python.org/psf/codeofconduct/>
> 
> 
>     _______________________________________________
>     python-committers mailing list
>     python-committers at python.org <mailto:python-committers at python.org>
>     https://mail.python.org/mailman/listinfo/python-committers
>     <https://mail.python.org/mailman/listinfo/python-committers>
>     Code of Conduct: https://www.python.org/psf/codeofconduct/
>     <https://www.python.org/psf/codeofconduct/>
> 
> 
> 
> 
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
> 

From mal at egenix.com  Wed Aug  1 17:44:03 2018
From: mal at egenix.com (M.-A. Lemburg)
Date: Wed, 1 Aug 2018 23:44:03 +0200
Subject: [python-committers] List of all core developers
In-Reply-To: <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
Message-ID: <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>

On 01.08.2018 23:28, Mariatta Wijaya wrote:
> See also an open issue to revamp the Developer log:
> https://github.com/python/devguide/issues/390
> 
> Someone has also said that they're working on tracking down the dormant
> core devs, but now I can't find that email.

I think the log is fine at it is, since it serves a different
purpose.

The list should be in addition to the log, not replacing it.

Resources we already have:

* https://devguide.python.org/developers/
*
https://bugs.python.org/user?%40action=search&iscommitter=1&%40pagesize=300&%40sort=username
* python-committers Subscribers List (but this is currently only
  for list admins to see - perhaps we could make that available
  to list members ?!)
* https://hg.python.org/committers.txt
* for the early days:

https://raw.githubusercontent.com/python/cpython/e42b705188271da108de42b55d9344642170aa2b/Misc/HISTORY
  in combination with

https://github.com/python/cpython/blob/e42b705188271da108de42b55d9344642170aa2b/Misc/ACKS
  (in those times, there was no direct access to the repo
  and all patches had to go through the team around Guido)

I think it would also be a good idea to include core developers
of other Python implementations in such a document, in
separate sections, e.g. for Jython, IronPython, PyPy,
Stackless, etc.


> Mariatta
> 
> 
> On Wed, Aug 1, 2018 at 2:15 PM M.-A. Lemburg <mal at egenix.com> wrote:
> 
>> It's become fairly obvious that we are missing a list of core
>> developers on some site. One we can use as reference and one
>> which core devs can also show to other to prove they are
>> core developers.
>>
>> I guess the natural place for such a list is the dev guide,
>> but we could also use a page on www.python.org, if that's easier
>> to maintain.
>>
>> Regarding format, I'd suggest to use the same as PSF Fellows
>> list:
>>
>> https://www.python.org/psf/members/#fellows
>>
>> Thoughts ?
>>
>> Note: Asking for this now is not completely unintentional.
>> The EuroPython Society has something to announce which will
>> require such a list.
>>
>> Thanks,
>> --
>> Marc-Andre Lemburg
>> eGenix.com
>>
>> Professional Python Services directly from the Experts (#1, Aug 01 2018)
>>>>> Python Projects, Coaching and Consulting ...  http://www.egenix.com/
>>>>> Python Database Interfaces ...           http://products.egenix.com/
>>>>> Plone/Zope Database Interfaces ...           http://zope.egenix.com/
>> ________________________________________________________________________
>>
>> ::: We implement business ideas - efficiently in both time and costs :::
>>
>>    eGenix.com Software, Skills and Services GmbH  Pastor-Loeh-Str.48
>>     D-40764 Langenfeld, Germany. CEO Dipl.-Math. Marc-Andre Lemburg
>>            Registered at Amtsgericht Duesseldorf: HRB 46611
>>                http://www.egenix.com/company/contact/
>>                       http://www.malemburg.com/
>>
>> _______________________________________________
>> python-committers mailing list
>> python-committers at python.org
>> https://mail.python.org/mailman/listinfo/python-committers
>> Code of Conduct: https://www.python.org/psf/codeofconduct/
>>
> 

-- 
Marc-Andre Lemburg
eGenix.com

Professional Python Services directly from the Experts (#1, Aug 01 2018)
>>> Python Projects, Coaching and Consulting ...  http://www.egenix.com/
>>> Python Database Interfaces ...           http://products.egenix.com/
>>> Plone/Zope Database Interfaces ...           http://zope.egenix.com/
________________________________________________________________________

::: We implement business ideas - efficiently in both time and costs :::

   eGenix.com Software, Skills and Services GmbH  Pastor-Loeh-Str.48
    D-40764 Langenfeld, Germany. CEO Dipl.-Math. Marc-Andre Lemburg
           Registered at Amtsgericht Duesseldorf: HRB 46611
               http://www.egenix.com/company/contact/
                      http://www.malemburg.com/


From ericsnowcurrently at gmail.com  Wed Aug  1 17:54:23 2018
From: ericsnowcurrently at gmail.com (Eric Snow)
Date: Wed, 1 Aug 2018 15:54:23 -0600
Subject: [python-committers] List of all core developers
In-Reply-To: <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>
Message-ID: <CALFfu7DzkfpASsRxxYVHamy4y+Ais7gkQGdQ3yZn9rReOcykHA@mail.gmail.com>

On Wed, Aug 1, 2018 at 3:44 PM M.-A. Lemburg <mal at egenix.com> wrote:
> On 01.08.2018 23:28, Mariatta Wijaya wrote:
> > See also an open issue to revamp the Developer log:
> > https://github.com/python/devguide/issues/390
> >
> > Someone has also said that they're working on tracking down the dormant
> > core devs, but now I can't find that email.
>
> I think the log is fine at it is, since it serves a different
> purpose.
>
> The list should be in addition to the log, not replacing it.
>
> Resources we already have:
>
> * https://devguide.python.org/developers/
> *
> https://bugs.python.org/user?%40action=search&iscommitter=1&%40pagesize=300&%40sort=username
> * python-committers Subscribers List (but this is currently only
>   for list admins to see - perhaps we could make that available
>   to list members ?!)
> * https://hg.python.org/committers.txt
> * for the early days:
>
> https://raw.githubusercontent.com/python/cpython/e42b705188271da108de42b55d9344642170aa2b/Misc/HISTORY
>   in combination with
>
> https://github.com/python/cpython/blob/e42b705188271da108de42b55d9344642170aa2b/Misc/ACKS
>   (in those times, there was no direct access to the repo
>   and all patches had to go through the team around Guido)

There's also:

* the members of the github team
* folks marked as committers as BPO

I don't recall if these are exposed via public lists though.

-eric

> I think it would also be a good idea to include core developers
> of other Python implementations in such a document, in
> separate sections, e.g. for Jython, IronPython, PyPy,
> Stackless, etc.

From antoine at python.org  Wed Aug  1 18:00:19 2018
From: antoine at python.org (Antoine Pitrou)
Date: Thu, 2 Aug 2018 00:00:19 +0200
Subject: [python-committers] View logs on VSTS?
Message-ID: <245748ea-3eaa-d434-13e7-04a91238049e@python.org>


Hello,

I may be missing something, but I fail to view the "tests" log in this
failed CI build:
https://python.visualstudio.com/cpython/_build/results?buildId=20701&view=logs

Regards

Antoine.

From yselivanov.ml at gmail.com  Wed Aug  1 18:28:43 2018
From: yselivanov.ml at gmail.com (Yury Selivanov)
Date: Wed, 1 Aug 2018 18:28:43 -0400
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
Message-ID: <CA+St6D0+HPez8qcyz-f8W3xAsX_rqUtijxNg_BSqrEmnZ4BCTA@mail.gmail.com>

On Wed, Aug 1, 2018 at 5:26 PM Nathaniel Smith <njs at pobox.com> wrote:
[..]
> Now we have to figure that out: the legitimacy of any new governance
> system is ultimately going to have to rest on the consensus of the
> core devs. The only way I know to get that is by taking the time to
> work through the difficult conversations. If these deadlines just
> encourage people to keep moving and engaging, then that's great. But I
> worry that if we impose a cut-off like this up front, then we'll take
> that as an excuse to skip doing that work, because there's no time,
> and if someone disagrees it's easier to vote than to actually engage
> and work it out.

+1.  I don't like this idea of having strict deadlines that we must
follow no matter what.

IMO it would be better to set a "recommended date" (Oct 1st is fine)
for submitting governance proposals.  We can start discussing them
publicly after Oct 1st, and will set a strict deadline for voting when
we are all comfortable.

Yury

From mariatta.wijaya at gmail.com  Wed Aug  1 18:44:47 2018
From: mariatta.wijaya at gmail.com (Mariatta Wijaya)
Date: Wed, 1 Aug 2018 15:44:47 -0700
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <CA+St6D0+HPez8qcyz-f8W3xAsX_rqUtijxNg_BSqrEmnZ4BCTA@mail.gmail.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
 <CA+St6D0+HPez8qcyz-f8W3xAsX_rqUtijxNg_BSqrEmnZ4BCTA@mail.gmail.com>
Message-ID: <CAGbohnZ-T3BjuxVJmiU9g07RBVzdTh5dwpH4KE=KVTXqUA=Ndw@mail.gmail.com>

Thank you for the responses and concerns.

I do want to keep this discussion open and ongoing, and I still think that
we do need a set deadline on things.
Currently any undecided PEP is stalled, and no one can pronounce on them.
And we probably won't/can't promote any new core devs until we have new
governance.
Someone brought up the idea where core devs would be able to decide/vote on
PEPs and that would affect how we promote core devs.

I hope that having these dates will encourage all of us to prioritize this
issue and coming up with a solution.
If the deadline of January 1st is too short, please propose alternate
dates, but it should not be "whenever".

We may very well end up not having any kind of governance body
> initially and use a simple democratic voting scheme for any
> issues which may arise.


I see this as one proposal of a governance body, and it's acceptable if you
want to propose that we go this route for X years and re-evaluate it again.

It should be ok for us to choose one governance model this time, but decide
on something else next.


Mariatta
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180801/b49d68ca/attachment.html>

From yselivanov.ml at gmail.com  Wed Aug  1 19:06:18 2018
From: yselivanov.ml at gmail.com (Yury Selivanov)
Date: Wed, 1 Aug 2018 19:06:18 -0400
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <CAGbohnZ-T3BjuxVJmiU9g07RBVzdTh5dwpH4KE=KVTXqUA=Ndw@mail.gmail.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
 <CA+St6D0+HPez8qcyz-f8W3xAsX_rqUtijxNg_BSqrEmnZ4BCTA@mail.gmail.com>
 <CAGbohnZ-T3BjuxVJmiU9g07RBVzdTh5dwpH4KE=KVTXqUA=Ndw@mail.gmail.com>
Message-ID: <CA+St6D2LgMEf0npKkj60ydBya2efXKMTjV7qVRDW6mmmFHDUDA@mail.gmail.com>

On Wed, Aug 1, 2018 at 6:44 PM Mariatta Wijaya
<mariatta.wijaya at gmail.com> wrote:
>
>
> Thank you for the responses and concerns.
>
> I do want to keep this discussion open and ongoing, and I still think that we do need a set deadline on things.

I talked to a few core developers recently (at EuroPython and over
messengers) and I had an impression that some of them don't like an
idea of making a decision faster than everybody has a chance to say
their word.  Some of them are shy to publicly object to having strict
deadlines, some probably haven't yet seen this thread, some don't have
time to engage right now. You also see a few -1s in this very thread.
All in all, I really don't understand why we need to hurry here.

> Currently any undecided PEP is stalled, and no one can pronounce on them.

And maybe that's OK for a few months? I don't recall Guido ever
accepting PEPs promptly. :)  Setting strict deadlines really seems
like a last-resort option.

> And we probably won't/can't promote any new core devs until we have new governance.

IIRC we always promoted core devs by popular vote, so I don't think
this would be a problem.  Do we have any candidates that are currently
waiting for us deciding on a governance model?

Yury

From mariatta.wijaya at gmail.com  Wed Aug  1 20:29:00 2018
From: mariatta.wijaya at gmail.com (Mariatta Wijaya)
Date: Wed, 1 Aug 2018 17:29:00 -0700
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <CA+St6D2LgMEf0npKkj60ydBya2efXKMTjV7qVRDW6mmmFHDUDA@mail.gmail.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
 <CA+St6D0+HPez8qcyz-f8W3xAsX_rqUtijxNg_BSqrEmnZ4BCTA@mail.gmail.com>
 <CAGbohnZ-T3BjuxVJmiU9g07RBVzdTh5dwpH4KE=KVTXqUA=Ndw@mail.gmail.com>
 <CA+St6D2LgMEf0npKkj60ydBya2efXKMTjV7qVRDW6mmmFHDUDA@mail.gmail.com>
Message-ID: <CAGbohnZsdS_=oHtTaUzrGXpNM6GLqVu_WK84xgNLqOOdKyasRA@mail.gmail.com>

>
> IIRC we always promoted core devs by popular vote, so I don't think
> this would be a problem.  Do we have any candidates that are currently
> waiting for us deciding on a governance model?


If this new governance model will include core devs being able to vote on
PEPs, then I will have different opinion on how I want to vote or promote
any new core dev.

And maybe that's OK for a few months? I don't recall Guido ever
> accepting PEPs promptly. :)  Setting strict deadlines really seems
> like a last-resort option.


Please don't misunderstand my wanting to set up a deadlines and process as
wanting to rush things.
I'm open to extend the dates, and even wait another year if we need to.
Or do folks want to come up with a completely different process than what
I've proposed?

In the end, I just want to know whether we will come to decision before
2019, 2020, 2021, 2022, .. ?

Mariatta


On Wed, Aug 1, 2018 at 4:06 PM Yury Selivanov <yselivanov.ml at gmail.com>
wrote:

> On Wed, Aug 1, 2018 at 6:44 PM Mariatta Wijaya
> <mariatta.wijaya at gmail.com> wrote:
> >
> >
> > Thank you for the responses and concerns.
> >
> > I do want to keep this discussion open and ongoing, and I still think
> that we do need a set deadline on things.
>
> I talked to a few core developers recently (at EuroPython and over
> messengers) and I had an impression that some of them don't like an
> idea of making a decision faster than everybody has a chance to say
> their word.  Some of them are shy to publicly object to having strict
> deadlines, some probably haven't yet seen this thread, some don't have
> time to engage right now. You also see a few -1s in this very thread.
> All in all, I really don't understand why we need to hurry here.
>
> > Currently any undecided PEP is stalled, and no one can pronounce on them.
>
> And maybe that's OK for a few months? I don't recall Guido ever
> accepting PEPs promptly. :)  Setting strict deadlines really seems
> like a last-resort option.
>
> > And we probably won't/can't promote any new core devs until we have new
> governance.
>
> IIRC we always promoted core devs by popular vote, so I don't think
> this would be a problem.  Do we have any candidates that are currently
> waiting for us deciding on a governance model?
>
> Yury
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180801/cf47a29d/attachment.html>

From mariatta.wijaya at gmail.com  Wed Aug  1 20:32:32 2018
From: mariatta.wijaya at gmail.com (Mariatta Wijaya)
Date: Wed, 1 Aug 2018 17:32:32 -0700
Subject: [python-committers] List of all core developers
In-Reply-To: <CALFfu7DzkfpASsRxxYVHamy4y+Ais7gkQGdQ3yZn9rReOcykHA@mail.gmail.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>
 <CALFfu7DzkfpASsRxxYVHamy4y+Ais7gkQGdQ3yZn9rReOcykHA@mail.gmail.com>
Message-ID: <CAGbohnZ=rncDghn8rM9J+R2qMuO5ig-7_WwArwaY0gRchJ5i=w@mail.gmail.com>

>
> I think it would also be a good idea to include core developers
> of other Python implementations in such a document, in
> separate sections, e.g. for Jython, IronPython, PyPy,
> Stackless, etc


Hmm, I don't think it is should be our (CPython) responsibility to keep
track and maintain the list of the core devs of alternate Python
implementations. Don't they have their own community / website? They have
their own repo, bug tracker, governance model, and everything, right?

Mariatta

On Wed, Aug 1, 2018 at 2:54 PM Eric Snow <ericsnowcurrently at gmail.com>
wrote:

> On Wed, Aug 1, 2018 at 3:44 PM M.-A. Lemburg <mal at egenix.com> wrote:
> > On 01.08.2018 23:28, Mariatta Wijaya wrote:
> > > See also an open issue to revamp the Developer log:
> > > https://github.com/python/devguide/issues/390
> > >
> > > Someone has also said that they're working on tracking down the dormant
> > > core devs, but now I can't find that email.
> >
> > I think the log is fine at it is, since it serves a different
> > purpose.
> >
> > The list should be in addition to the log, not replacing it.
> >
> > Resources we already have:
> >
> > * https://devguide.python.org/developers/
> > *
> >
> https://bugs.python.org/user?%40action=search&iscommitter=1&%40pagesize=300&%40sort=username
> > * python-committers Subscribers List (but this is currently only
> >   for list admins to see - perhaps we could make that available
> >   to list members ?!)
> > * https://hg.python.org/committers.txt
> > * for the early days:
> >
> >
> https://raw.githubusercontent.com/python/cpython/e42b705188271da108de42b55d9344642170aa2b/Misc/HISTORY
> >   in combination with
> >
> >
> https://github.com/python/cpython/blob/e42b705188271da108de42b55d9344642170aa2b/Misc/ACKS
> >   (in those times, there was no direct access to the repo
> >   and all patches had to go through the team around Guido)
>
> There's also:
>
> * the members of the github team
> * folks marked as committers as BPO
>
> I don't recall if these are exposed via public lists though.
>
> -eric
>
> > I think it would also be a good idea to include core developers
> > of other Python implementations in such a document, in
> > separate sections, e.g. for Jython, IronPython, PyPy,
> > Stackless, etc.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180801/38ffb593/attachment.html>

From yselivanov.ml at gmail.com  Wed Aug  1 20:57:05 2018
From: yselivanov.ml at gmail.com (Yury Selivanov)
Date: Wed, 1 Aug 2018 20:57:05 -0400
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <CAGbohnZsdS_=oHtTaUzrGXpNM6GLqVu_WK84xgNLqOOdKyasRA@mail.gmail.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
 <CA+St6D0+HPez8qcyz-f8W3xAsX_rqUtijxNg_BSqrEmnZ4BCTA@mail.gmail.com>
 <CAGbohnZ-T3BjuxVJmiU9g07RBVzdTh5dwpH4KE=KVTXqUA=Ndw@mail.gmail.com>
 <CA+St6D2LgMEf0npKkj60ydBya2efXKMTjV7qVRDW6mmmFHDUDA@mail.gmail.com>
 <CAGbohnZsdS_=oHtTaUzrGXpNM6GLqVu_WK84xgNLqOOdKyasRA@mail.gmail.com>
Message-ID: <CA+St6D3b--64SGfA1iiBc3y-eCXCEam=fPymbLpyna=9j6OhHg@mail.gmail.com>

On Wed, Aug 1, 2018 at 8:29 PM Mariatta Wijaya
<mariatta.wijaya at gmail.com> wrote:
[..]
> Please don't misunderstand my wanting to set up a deadlines and process as wanting to rush things.

Absolutely, I understand, I didn't want to imply that "[name] is
rushing the process". Sorry if I sounded this way. I do have an
impression, though, that a large population of core devs is OK with
deadlines and the other sizable population doesn't understand why we
need a strict schedule right now.

> I'm open to extend the dates, and even wait another year if we need to.
> Or do folks want to come up with a completely different process than what I've proposed?
>
> In the end, I just want to know whether we will come to decision before 2019, 2020, 2021, 2022, .. ?

IMHO we should tweak the proposal to include just *one date for now*:
we want everybody interested to post their proposals by October 1st
(we can shift it + 2 weeks if people are on vacations right now).

The discussion will inevitably start as soon as we have a couple
proposals on the table.  Some proposals will be withdrawn, some will
require tweaks, people also might come up with new proposals.  We can
then decide what our next steps (and deadlines!) considering what will
be the outcome of these first debates.

Yury

From eric at trueblade.com  Wed Aug  1 21:24:37 2018
From: eric at trueblade.com (Eric V. Smith)
Date: Wed, 1 Aug 2018 21:24:37 -0400
Subject: [python-committers] List of all core developers
In-Reply-To: <CAGbohnZ=rncDghn8rM9J+R2qMuO5ig-7_WwArwaY0gRchJ5i=w@mail.gmail.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>
 <CALFfu7DzkfpASsRxxYVHamy4y+Ais7gkQGdQ3yZn9rReOcykHA@mail.gmail.com>
 <CAGbohnZ=rncDghn8rM9J+R2qMuO5ig-7_WwArwaY0gRchJ5i=w@mail.gmail.com>
Message-ID: <51741053-7e32-5ea2-1d18-b2ca711dda9e@trueblade.com>

On 8/1/2018 8:32 PM, Mariatta Wijaya wrote:
>     I think it would also be a good idea to include core developers
>     of other Python implementations in such a document, in
>     separate sections, e.g. for Jython, IronPython, PyPy,
>     Stackless, etc
> 
> 
> Hmm, I don't think it is should be our (CPython) responsibility to keep 
> track and maintain the list of the core devs of alternate Python 
> implementations. Don't they have their own community / website? They 
> have their own repo, bug tracker, governance model, and everything, right?

Agreed. We have a hard enough time keeping track of our own core developers.

For our core devs, can't we just say that the CPython core devs are 
those with commit bits on the CPython repo? I realize that will 
eliminate some people who have been core developers and never moved to 
github, but if they bring it to our attention, we can add them easily 
enough.

Eric

From stefan.richthofer at gmail.com  Wed Aug  1 21:32:46 2018
From: stefan.richthofer at gmail.com (Stefan Richthofer)
Date: Thu, 2 Aug 2018 03:32:46 +0200
Subject: [python-committers] List of all core developers
In-Reply-To: <CAGbohnZ=rncDghn8rM9J+R2qMuO5ig-7_WwArwaY0gRchJ5i=w@mail.gmail.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>
 <CALFfu7DzkfpASsRxxYVHamy4y+Ais7gkQGdQ3yZn9rReOcykHA@mail.gmail.com>
 <CAGbohnZ=rncDghn8rM9J+R2qMuO5ig-7_WwArwaY0gRchJ5i=w@mail.gmail.com>
Message-ID: <CACQYzFJ=QVhtr+MMh8v8hKySwQeq3aF4+_TX4BaZfEgE_uRpCw@mail.gmail.com>

> Hmm, I don't think it is should be our (CPython) responsibility to keep
> track and maintain the list of the core devs of alternate Python
> implementations. Don't they have their own community / website? They have
> their own repo, bug tracker, governance model, and everything, right?
>

Core developers of Python implementations under PSF ownership were
traditionally listed in committers.txt and developer log.
This includes at least PyPy, Jython and IronPython. If you want to propose
to change this, that should be a distinct discussion
I suppose. I don't know the reason why it was originally decided to
maintain this together, but I guess that the named lists are
more a PSF thing than a CPython thing.
If you intend to change this suddenly, the communities should get at least
some transition time. I only know the situation of Jython,
where no committers list is available. Currently it relies on the lists
named above to identify committers.


Stefan


2018-08-02 2:32 GMT+02:00 Mariatta Wijaya <mariatta.wijaya at gmail.com>:

> I think it would also be a good idea to include core developers
>> of other Python implementations in such a document, in
>> separate sections, e.g. for Jython, IronPython, PyPy,
>> Stackless, etc
>
>
> Hmm, I don't think it is should be our (CPython) responsibility to keep
> track and maintain the list of the core devs of alternate Python
> implementations. Don't they have their own community / website? They have
> their own repo, bug tracker, governance model, and everything, right?
>
> Mariatta
>
> On Wed, Aug 1, 2018 at 2:54 PM Eric Snow <ericsnowcurrently at gmail.com>
> wrote:
>
>> On Wed, Aug 1, 2018 at 3:44 PM M.-A. Lemburg <mal at egenix.com> wrote:
>> > On 01.08.2018 23:28, Mariatta Wijaya wrote:
>> > > See also an open issue to revamp the Developer log:
>> > > https://github.com/python/devguide/issues/390
>> > >
>> > > Someone has also said that they're working on tracking down the
>> dormant
>> > > core devs, but now I can't find that email.
>> >
>> > I think the log is fine at it is, since it serves a different
>> > purpose.
>> >
>> > The list should be in addition to the log, not replacing it.
>> >
>> > Resources we already have:
>> >
>> > * https://devguide.python.org/developers/
>> > *
>> > https://bugs.python.org/user?%40action=search&iscommitter=1&
>> %40pagesize=300&%40sort=username
>> > * python-committers Subscribers List (but this is currently only
>> >   for list admins to see - perhaps we could make that available
>> >   to list members ?!)
>> > * https://hg.python.org/committers.txt
>> > * for the early days:
>> >
>> > https://raw.githubusercontent.com/python/cpython/
>> e42b705188271da108de42b55d9344642170aa2b/Misc/HISTORY
>> >   in combination with
>> >
>> > https://github.com/python/cpython/blob/e42b705188271da108de42b55d9344
>> 642170aa2b/Misc/ACKS
>> >   (in those times, there was no direct access to the repo
>> >   and all patches had to go through the team around Guido)
>>
>> There's also:
>>
>> * the members of the github team
>> * folks marked as committers as BPO
>>
>> I don't recall if these are exposed via public lists though.
>>
>> -eric
>>
>> > I think it would also be a good idea to include core developers
>> > of other Python implementations in such a document, in
>> > separate sections, e.g. for Jython, IronPython, PyPy,
>> > Stackless, etc.
>>
>
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180802/c1a34859/attachment.html>

From njs at pobox.com  Wed Aug  1 23:17:24 2018
From: njs at pobox.com (Nathaniel Smith)
Date: Wed, 1 Aug 2018 20:17:24 -0700
Subject: [python-committers] Organizing an informational PEP on project
 governance options (was Re: Transfer of power)
In-Reply-To: <CAPJVwBkCdrdnYGGK7OUFfNvBgXtrbbrfpo_7JB-OUqEHg_UboQ@mail.gmail.com>
References: <CAPJVwBkCdrdnYGGK7OUFfNvBgXtrbbrfpo_7JB-OUqEHg_UboQ@mail.gmail.com>
Message-ID: <CAPJVwBkw+jjP=Gb-RY_dG7Ebv8wZ+6Sbxx5GOAUh3-dUSZAOcw@mail.gmail.com>

I'm sorry, I seem to have accidentally licked a cookie [1] here. I'm still
keen to see this happen and to be a part of it, and have been trying to be
find the spoons to take the lead on organizing, but it's been a few weeks
now and that hasn't happened yet [2].

Does anyone else want to take the lead here? A number of people have
expressed interest in helping or in making introductions to other
communities, and I think the next step would be to organize some kind of
kick off meeting to rough out an outline and start divvying up work.

-n

[1] http://communitymgt.wikia.com/wiki/Cookie_Licking
[2] not to go into too many details, but basically I'm currently sick,
unemployed, and broke, which isn't a crisis but sorting it out is sucking
up a lot of energy.

On Jul 13, 2018 04:31, "Nathaniel Smith" <njs at pobox.com> wrote:

On Thu, Jul 12, 2018 at 6:35 PM, ?ukasz Langa <lukasz at langa.pl> wrote:
> I'm +1 to an Informational PEP around the state of the art in project
governance.

I think this is a great idea. There's a lot of experience out there on
different governance models, but of course any given project only uses
one of them, so knowledge about what works and what doesn't is pretty
fragmented across the F/OSS community. And this is a really important
decision for us and our users, so we should do due diligence. For
example, we should think this through at least as carefully as we
thought through Github vs. Gitlab :-). A PEP is a good format to start
doing that.

I volunteer to co-author such a PEP. But I'm not up to doing it on my
own. So... who else wants to be a co-author? (I'm not going to
pressure anyone, but Brett, Mariatta, and Carol, please know that your
names were the first ones that jumped to my mind when thinking about
this :-).)

What I'm thinking:

- While this might eventually produce some recommendations, the
immediate goal would just be to collect together different options and
ideas and point out their trade-offs. I'm guessing most core devs
aren't interested in becoming experts on open-source governance, so
the goal here would be to help the broader community get up to speed
and have a more informed discussion [1].

- As per the general PEP philosophy, I think this is best done by
having some amount of general discussion on
python-dev/python-committers, plus a small group of coauthors (say 2-4
people) who take responsibility for filtering ideas and organizing
them in a coherent document.

- Places where we'll want to look for ideas:
  - The thread already happening on python-committers
  - Whatever books / articles / blog posts / etc. we can find (e.g. I
know Karl Fogel's Producing OSS book has some good discussion)
  - Other major projects in a similar position to CPython (e.g.,
node.js, Rust) -- what do they do, and what parts are they
happy/not-happy about?
  - Large Python projects (e.g. Django) -- likewise

If you have suggestions for particularly interesting projects or
excellent writing on the topic, then this thread would be a good place
to mention them.

-n

[1] The NumPy project has put a lot of energy into working through
governance issues over the last few years, and one thing that
definitely helped was coming up with some "assigned reading" ahead of
the main sprint where we talked about this. NumPy's problems are/were
pretty different from CPython's, but I'm imagining this PEP as filling
a similar role.


-- 
Nathaniel J. Smith -- https://vorpus.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180801/94db846f/attachment-0001.html>

From ronaldoussoren at mac.com  Thu Aug  2 03:23:55 2018
From: ronaldoussoren at mac.com (Ronald Oussoren)
Date: Thu, 02 Aug 2018 09:23:55 +0200
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <CA+St6D2LgMEf0npKkj60ydBya2efXKMTjV7qVRDW6mmmFHDUDA@mail.gmail.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
 <CA+St6D0+HPez8qcyz-f8W3xAsX_rqUtijxNg_BSqrEmnZ4BCTA@mail.gmail.com>
 <CAGbohnZ-T3BjuxVJmiU9g07RBVzdTh5dwpH4KE=KVTXqUA=Ndw@mail.gmail.com>
 <CA+St6D2LgMEf0npKkj60ydBya2efXKMTjV7qVRDW6mmmFHDUDA@mail.gmail.com>
Message-ID: <2588C4F6-2C9A-4B13-ADD2-22E63999320A@mac.com>



> On 2 Aug 2018, at 01:06, Yury Selivanov <yselivanov.ml at gmail.com> wrote:
> 
> On Wed, Aug 1, 2018 at 6:44 PM Mariatta Wijaya
> <mariatta.wijaya at gmail.com> wrote:
>> 
> 
>> Currently any undecided PEP is stalled, and no one can pronounce on them.
> 
> And maybe that's OK for a few months? I don't recall Guido ever
> accepting PEPs promptly. :)  Setting strict deadlines really seems
> like a last-resort option.

That, and it might be acceptable to start with a consensus based model for accepting PEPs at first. That would help in getting it clearer what we really need going forward (which as several people have stated is more than just deciding on PEPs).  That would mean that contentious PEPs would have to wait longer, but that isn?t necessarily a bad idea.

FWIW I agree with Nathaniel and Marc-Andre.

Ronald


From mal at egenix.com  Thu Aug  2 03:32:29 2018
From: mal at egenix.com (M.-A. Lemburg)
Date: Thu, 2 Aug 2018 09:32:29 +0200
Subject: [python-committers] List of all core developers
In-Reply-To: <51741053-7e32-5ea2-1d18-b2ca711dda9e@trueblade.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>
 <CALFfu7DzkfpASsRxxYVHamy4y+Ais7gkQGdQ3yZn9rReOcykHA@mail.gmail.com>
 <CAGbohnZ=rncDghn8rM9J+R2qMuO5ig-7_WwArwaY0gRchJ5i=w@mail.gmail.com>
 <51741053-7e32-5ea2-1d18-b2ca711dda9e@trueblade.com>
Message-ID: <1fe758c6-01c7-9654-60c7-2ad9c5ec81f2@egenix.com>

On 02.08.2018 03:24, Eric V. Smith wrote:
> On 8/1/2018 8:32 PM, Mariatta Wijaya wrote:
>> ??? I think it would also be a good idea to include core developers
>> ??? of other Python implementations in such a document, in
>> ??? separate sections, e.g. for Jython, IronPython, PyPy,
>> ??? Stackless, etc
>>
>>
>> Hmm, I don't think it is should be our (CPython) responsibility to
>> keep track and maintain the list of the core devs of alternate Python
>> implementations. Don't they have their own community / website? They
>> have their own repo, bug tracker, governance model, and everything,
>> right?
> 
> Agreed. We have a hard enough time keeping track of our own core
> developers.

I don't really think we have a hard time doing this. The only
problem is that we never sat down and actually properly recorded
this in one place.

Other projects will, of course, have their own websites, but since
Python is more than just CPython, it would be great to include those
other developers in an official list as well. It would be up for
for the other teams to maintain their lists.

That said, this part is lower priority than the CPython core
developer listing.

> For our core devs, can't we just say that the CPython core devs are
> those with commit bits on the CPython repo? I realize that will
> eliminate some people who have been core developers and never moved to
> github, but if they bring it to our attention, we can add them easily
> enough.
As discussed before, being a core developer is a status you
gain and never lose. There is a clear difference between have
commit rights to the (current) repo and this status.

What I am after, is a list of core developers, not a list of
people with their keys on github (or where ever we move in the
future), since this list is not about a technical status, but rather
a social one.

-- 
Marc-Andre Lemburg
eGenix.com

Professional Python Services directly from the Experts (#1, Aug 02 2018)
>>> Python Projects, Coaching and Consulting ...  http://www.egenix.com/
>>> Python Database Interfaces ...           http://products.egenix.com/
>>> Plone/Zope Database Interfaces ...           http://zope.egenix.com/
________________________________________________________________________

::: We implement business ideas - efficiently in both time and costs :::

   eGenix.com Software, Skills and Services GmbH  Pastor-Loeh-Str.48
    D-40764 Langenfeld, Germany. CEO Dipl.-Math. Marc-Andre Lemburg
           Registered at Amtsgericht Duesseldorf: HRB 46611
               http://www.egenix.com/company/contact/
                      http://www.malemburg.com/


From steve at pearwood.info  Thu Aug  2 03:49:51 2018
From: steve at pearwood.info (Steven D'Aprano)
Date: Thu, 2 Aug 2018 17:49:51 +1000
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <CAGbohnZsdS_=oHtTaUzrGXpNM6GLqVu_WK84xgNLqOOdKyasRA@mail.gmail.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
 <CA+St6D0+HPez8qcyz-f8W3xAsX_rqUtijxNg_BSqrEmnZ4BCTA@mail.gmail.com>
 <CAGbohnZ-T3BjuxVJmiU9g07RBVzdTh5dwpH4KE=KVTXqUA=Ndw@mail.gmail.com>
 <CA+St6D2LgMEf0npKkj60ydBya2efXKMTjV7qVRDW6mmmFHDUDA@mail.gmail.com>
 <CAGbohnZsdS_=oHtTaUzrGXpNM6GLqVu_WK84xgNLqOOdKyasRA@mail.gmail.com>
Message-ID: <20180802074949.GI22431@ando.pearwood.info>

On Wed, Aug 01, 2018 at 05:29:00PM -0700, Mariatta Wijaya wrote:

> Please don't misunderstand my wanting to set up a deadlines and process as
> wanting to rush things.
> I'm open to extend the dates, and even wait another year if we need to.

Please no. Leaving things in limbo for a handful of months is one thing, 
a year or more is not. In a year, we will have completely lost all 
momentum on this. Deciding on a model for Python's future ought not to 
be an endurance competition, where the winner is the one who can wait 
the longest until everyone else has moved on.

Failing to choose a model to drive the future of Python in a reasonable 
time is a choice in itself. If folks want to actively propose a policy 
of (temporary or permanent) stability (a.k.a. stagnation) for the Python 
language, let them do so. I'm sure that would be popular to many people. 
It might even win a democratic vote. Dragging this process out for a 
year or more is, de facto, such a policy (regardless of whether it was 
intended as such) and such a policy ought to be decided openly, not 
accidentally or by stealth.


> Or do folks want to come up with a completely different process than what
> I've proposed?
> 
> In the end, I just want to know whether we will come to decision before
> 2019, 2020, 2021, 2022, .. ?

Indeed. A hard deadline concentrates the mind. It doesn't need to be 
tomorrow, I think your choosen dates are a great balance, neither too 
quick nor too drawn out.

If Python is still rudderless by Christmas, I think we have failed.



-- 
Steve

From p.f.moore at gmail.com  Thu Aug  2 04:01:29 2018
From: p.f.moore at gmail.com (Paul Moore)
Date: Thu, 2 Aug 2018 09:01:29 +0100
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <CA+St6D3b--64SGfA1iiBc3y-eCXCEam=fPymbLpyna=9j6OhHg@mail.gmail.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
 <CA+St6D0+HPez8qcyz-f8W3xAsX_rqUtijxNg_BSqrEmnZ4BCTA@mail.gmail.com>
 <CAGbohnZ-T3BjuxVJmiU9g07RBVzdTh5dwpH4KE=KVTXqUA=Ndw@mail.gmail.com>
 <CA+St6D2LgMEf0npKkj60ydBya2efXKMTjV7qVRDW6mmmFHDUDA@mail.gmail.com>
 <CAGbohnZsdS_=oHtTaUzrGXpNM6GLqVu_WK84xgNLqOOdKyasRA@mail.gmail.com>
 <CA+St6D3b--64SGfA1iiBc3y-eCXCEam=fPymbLpyna=9j6OhHg@mail.gmail.com>
Message-ID: <CACac1F_fHS=nL+TcFkg_wQ82rZBpeC+_XDUXBUq6E0QnP4=3JQ@mail.gmail.com>

On Thu, 2 Aug 2018 at 01:58, Yury Selivanov <yselivanov.ml at gmail.com> wrote:
>
> On Wed, Aug 1, 2018 at 8:29 PM Mariatta Wijaya
> <mariatta.wijaya at gmail.com> wrote:
> [..]
> > Please don't misunderstand my wanting to set up a deadlines and process as wanting to rush things.
>
> Absolutely, I understand, I didn't want to imply that "[name] is
> rushing the process". Sorry if I sounded this way. I do have an
> impression, though, that a large population of core devs is OK with
> deadlines and the other sizable population doesn't understand why we
> need a strict schedule right now.

I think this is an important point. I'm also -1 on a strict timetable
here - I agree with the points Marc-Andre and Nathaniel made, and I
don't want to see us rushing into a decision.

It actually strikes me that the disparity here (with some people
wanting to keep the process moving and get something sorted so we can
get back to normal, and others wanting to let things take their time
and not force a decision simply because "we need to decide") is an
excellent test case for how we make decisions in the future. If we
can't reach a mutually satisfactory agreement on how to move forward
on this, I don't have high hopes for the possibility of our choice of
governance model being acceptable to everyone.

> > I'm open to extend the dates, and even wait another year if we need to.
> > Or do folks want to come up with a completely different process than what I've proposed?
> >
> > In the end, I just want to know whether we will come to decision before 2019, 2020, 2021, 2022, .. ?

At the moment, I'm not even sure I want to know that much. For now,
what I want to know is how things are going to feel now that we don't
have Guido acting as BDFL. That's going to take time to assess, but
until we have done that, I don't see how we (as a community) can have
any sort of good idea about what sort of governance works for us.

What I'd like to understand from the people advocating a fixed
timetable and agreed dates, is what *actual* problem does fixing dates
solve? Are bpo discussions being held up for lack of a BDFL? Are
people not committing changes? Certainly we're not accepting PEPs at
the moment, but it's not like PEPs work on a rapid timescale anyway -
and if the problem is that without a BDFL, the discussions feel
directionless, then that's a *specific* problem we can solve without
needing to agree a governance model (it's the "guiding discussions"
aspect of Guido's role, as opposed to the "BDFL" part).

Paul

From p.f.moore at gmail.com  Thu Aug  2 04:22:44 2018
From: p.f.moore at gmail.com (Paul Moore)
Date: Thu, 2 Aug 2018 09:22:44 +0100
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <20180802074949.GI22431@ando.pearwood.info>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
 <CA+St6D0+HPez8qcyz-f8W3xAsX_rqUtijxNg_BSqrEmnZ4BCTA@mail.gmail.com>
 <CAGbohnZ-T3BjuxVJmiU9g07RBVzdTh5dwpH4KE=KVTXqUA=Ndw@mail.gmail.com>
 <CA+St6D2LgMEf0npKkj60ydBya2efXKMTjV7qVRDW6mmmFHDUDA@mail.gmail.com>
 <CAGbohnZsdS_=oHtTaUzrGXpNM6GLqVu_WK84xgNLqOOdKyasRA@mail.gmail.com>
 <20180802074949.GI22431@ando.pearwood.info>
Message-ID: <CACac1F94TGdV9zRxj-uFkivaOUV+r3o07k+Y-BmoF6p8SH-HTA@mail.gmail.com>

On Thu, 2 Aug 2018 at 08:50, Steven D'Aprano <steve at pearwood.info> wrote:

> Indeed. A hard deadline concentrates the mind. It doesn't need to be
> tomorrow, I think your choosen dates are a great balance, neither too
> quick nor too drawn out.

But it also encourages people (particularly people with limited free
time) to rush decisions, and focus on "getting something done in
time", rather than "doing the right thing". Balancing those two
pressures is not easy, and the balance point varies significantly
between individuals.

> If Python is still rudderless by Christmas, I think we have failed.

Do you really consider Python "rudderless" at the moment? I only
really see two threads (excluding this one ;-)) that could give that
impression - "None-aware operators", where the discussion was
deliberately re-opened when Guido stepped down, to have a debate in
the absence of a BDFL (a decision which I personally feel was
ill-advised, but which IMO excludes it from any consideration in this
context) and the discussion on optimising PyCFunction (which is highly
technical, and has 2 specialists disagreeing - that's pretty much
guaranteed to drag on for a while). Most things are carrying on as
usual (with a certain level of people wondering what will happen, but
not in a way that's blocking activity).

I honestly think that describing the current situation as "rudderless"
and a "failure" if it carries on, is a pretty big exaggeration. Maybe
at worst, Python 3.8 will be relatively light on new features, but
that's not necessarily a bad thing (and yes, I understand that's a
decision by inaction. but personally I'm OK with it). Not so much a
moratorium, as "taking a breath".

Paul

From eric at trueblade.com  Thu Aug  2 04:59:10 2018
From: eric at trueblade.com (Eric V. Smith)
Date: Thu, 2 Aug 2018 04:59:10 -0400
Subject: [python-committers] List of all core developers
In-Reply-To: <1fe758c6-01c7-9654-60c7-2ad9c5ec81f2@egenix.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>
 <CALFfu7DzkfpASsRxxYVHamy4y+Ais7gkQGdQ3yZn9rReOcykHA@mail.gmail.com>
 <CAGbohnZ=rncDghn8rM9J+R2qMuO5ig-7_WwArwaY0gRchJ5i=w@mail.gmail.com>
 <51741053-7e32-5ea2-1d18-b2ca711dda9e@trueblade.com>
 <1fe758c6-01c7-9654-60c7-2ad9c5ec81f2@egenix.com>
Message-ID: <e5d2e239-bedf-1adc-5978-4bfa0600bf3c@trueblade.com>

On 8/2/2018 3:32 AM, M.-A. Lemburg wrote:
> On 02.08.2018 03:24, Eric V. Smith wrote:
>> On 8/1/2018 8:32 PM, Mariatta Wijaya wrote:
>>>  ??? I think it would also be a good idea to include core developers
>>>  ??? of other Python implementations in such a document, in
>>>  ??? separate sections, e.g. for Jython, IronPython, PyPy,
>>>  ??? Stackless, etc
>>>
>>>
>>> Hmm, I don't think it is should be our (CPython) responsibility to
>>> keep track and maintain the list of the core devs of alternate Python
>>> implementations. Don't they have their own community / website? They
>>> have their own repo, bug tracker, governance model, and everything,
>>> right?
>>
>> Agreed. We have a hard enough time keeping track of our own core
>> developers.
> 
> I don't really think we have a hard time doing this. The only
> problem is that we never sat down and actually properly recorded
> this in one place.

I was specifically thinking of a way to stay in touch with core devs, or 
more specifically a way to send them email. In the past, before we moved 
to github, I took it upon myself to find email addresses (current or 
not) for all core devs, and I gave up without much success.

I agree that we could probably come up with a list of names for people 
who have been given the "core dev" status.

>> For our core devs, can't we just say that the CPython core devs are
>> those with commit bits on the CPython repo? I realize that will
>> eliminate some people who have been core developers and never moved to
>> github, but if they bring it to our attention, we can add them easily
>> enough.
> As discussed before, being a core developer is a status you
> gain and never lose. There is a clear difference between have
> commit rights to the (current) repo and this status.

Agreed. Again, this was in the (poorly conveyed) context of getting 
email addresses for them, or at least being able to contact them.

Eric

From vstinner at redhat.com  Thu Aug  2 05:01:59 2018
From: vstinner at redhat.com (Victor Stinner)
Date: Thu, 2 Aug 2018 11:01:59 +0200
Subject: [python-committers] View logs on VSTS?
In-Reply-To: <245748ea-3eaa-d434-13e7-04a91238049e@python.org>
References: <245748ea-3eaa-d434-13e7-04a91238049e@python.org>
Message-ID: <CA+3bQGHbt5HkmybZdzxnKtQ3TOEY_mgqb1gQxGHkYZEeniS+Bw@mail.gmail.com>

Hi,

The error may be related to https://bugs.python.org/issue33782

I understood that VSTS has troubles when a PR gets a new commit while
VSTS is running tests on the previous commit.

Victor

2018-08-02 0:00 GMT+02:00 Antoine Pitrou <antoine at python.org>:
>
> Hello,
>
> I may be missing something, but I fail to view the "tests" log in this
> failed CI build:
> https://python.visualstudio.com/cpython/_build/results?buildId=20701&view=logs
>
> Regards
>
> Antoine.
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/

From vstinner at redhat.com  Thu Aug  2 05:09:05 2018
From: vstinner at redhat.com (Victor Stinner)
Date: Thu, 2 Aug 2018 11:09:05 +0200
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <8fa6d286-13a7-d79f-45c1-257af3a4f323@egenix.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <8fa6d286-13a7-d79f-45c1-257af3a4f323@egenix.com>
Message-ID: <CA+3bQGEdT+gMngSqmbcj=7zWB94twJZrWDkJZGzFmiDfZwVp_Q@mail.gmail.com>

2018-08-01 23:10 GMT+02:00 M.-A. Lemburg <mal at egenix.com>:
> So let's ponder some more about ideas we could use to
> get there and perhaps watch some Monty Python movies for
> inspiration ;-)

Monty Python's Life of Brian is an obvious tutorial how to select a
BDFL where FL means for life ;-)

Victor

From stefan.richthofer at gmail.com  Thu Aug  2 07:53:55 2018
From: stefan.richthofer at gmail.com (Stefan Richthofer)
Date: Thu, 2 Aug 2018 13:53:55 +0200
Subject: [python-committers] List of all core developers
In-Reply-To: <e5d2e239-bedf-1adc-5978-4bfa0600bf3c@trueblade.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>
 <CALFfu7DzkfpASsRxxYVHamy4y+Ais7gkQGdQ3yZn9rReOcykHA@mail.gmail.com>
 <CAGbohnZ=rncDghn8rM9J+R2qMuO5ig-7_WwArwaY0gRchJ5i=w@mail.gmail.com>
 <51741053-7e32-5ea2-1d18-b2ca711dda9e@trueblade.com>
 <1fe758c6-01c7-9654-60c7-2ad9c5ec81f2@egenix.com>
 <e5d2e239-bedf-1adc-5978-4bfa0600bf3c@trueblade.com>
Message-ID: <CACQYzFKARJhNVOMVOpSxPFuY5iM=8dHOPn7_xCDFvV6fwp+5xQ@mail.gmail.com>

>
> Again, this was in the (poorly conveyed) context of getting email
> addresses for them, or at least being able to contact them.
>

I always thought there were already at least three places containing the
necessary email addresses.

* python-committers should be exactly this mailing list.
* according to https://devguide.python.org/coredev/#issue-tracker it is
mandatory for core developers to subscribe to the issue tracker which AFAIK
requires a confirmed email address.
* Every committer clearly must have signed the contributor agreement
https://www.python.org/psf/contrib/contrib-form/ wich also contains a
mandatory email field

So why is it still necessary to get email addresses at all?

2018-08-02 10:59 GMT+02:00 Eric V. Smith <eric at trueblade.com>:

> On 8/2/2018 3:32 AM, M.-A. Lemburg wrote:
>
>> On 02.08.2018 03:24, Eric V. Smith wrote:
>>
>>> On 8/1/2018 8:32 PM, Mariatta Wijaya wrote:
>>>
>>>>      I think it would also be a good idea to include core developers
>>>>      of other Python implementations in such a document, in
>>>>      separate sections, e.g. for Jython, IronPython, PyPy,
>>>>      Stackless, etc
>>>>
>>>>
>>>> Hmm, I don't think it is should be our (CPython) responsibility to
>>>> keep track and maintain the list of the core devs of alternate Python
>>>> implementations. Don't they have their own community / website? They
>>>> have their own repo, bug tracker, governance model, and everything,
>>>> right?
>>>>
>>>
>>> Agreed. We have a hard enough time keeping track of our own core
>>> developers.
>>>
>>
>> I don't really think we have a hard time doing this. The only
>> problem is that we never sat down and actually properly recorded
>> this in one place.
>>
>
> I was specifically thinking of a way to stay in touch with core devs, or
> more specifically a way to send them email. In the past, before we moved to
> github, I took it upon myself to find email addresses (current or not) for
> all core devs, and I gave up without much success.
>
> I agree that we could probably come up with a list of names for people who
> have been given the "core dev" status.
>
> For our core devs, can't we just say that the CPython core devs are
>>> those with commit bits on the CPython repo? I realize that will
>>> eliminate some people who have been core developers and never moved to
>>> github, but if they bring it to our attention, we can add them easily
>>> enough.
>>>
>> As discussed before, being a core developer is a status you
>> gain and never lose. There is a clear difference between have
>> commit rights to the (current) repo and this status.
>>
>
> Agreed. Again, this was in the (poorly conveyed) context of getting email
> addresses for them, or at least being able to contact them.
>
> Eric
>
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180802/f88fdcc1/attachment-0001.html>

From eric at trueblade.com  Thu Aug  2 08:43:31 2018
From: eric at trueblade.com (Eric V. Smith)
Date: Thu, 2 Aug 2018 08:43:31 -0400
Subject: [python-committers] List of all core developers
In-Reply-To: <CACQYzFKARJhNVOMVOpSxPFuY5iM=8dHOPn7_xCDFvV6fwp+5xQ@mail.gmail.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>
 <CALFfu7DzkfpASsRxxYVHamy4y+Ais7gkQGdQ3yZn9rReOcykHA@mail.gmail.com>
 <CAGbohnZ=rncDghn8rM9J+R2qMuO5ig-7_WwArwaY0gRchJ5i=w@mail.gmail.com>
 <51741053-7e32-5ea2-1d18-b2ca711dda9e@trueblade.com>
 <1fe758c6-01c7-9654-60c7-2ad9c5ec81f2@egenix.com>
 <e5d2e239-bedf-1adc-5978-4bfa0600bf3c@trueblade.com>
 <CACQYzFKARJhNVOMVOpSxPFuY5iM=8dHOPn7_xCDFvV6fwp+5xQ@mail.gmail.com>
Message-ID: <2b118400-169a-5407-821f-e982ff169660@trueblade.com>

On 8/2/2018 7:53 AM, Stefan Richthofer wrote:
>     Again, this was in the (poorly conveyed) context of getting email
>     addresses for them, or at least being able to contact them.
> 
> 
> I always thought there were already at least three places containing the 
> necessary email addresses.
> 
> * python-committers should be exactly this mailing list.
> * according to https://devguide.python.org/coredev/#issue-tracker it is 
> mandatory for core developers to subscribe to the issue tracker which 
> AFAIK requires a confirmed email address.
> * Every committer clearly must have signed the contributor agreement 
> https://www.python.org/psf/contrib/contrib-form/ wich also contains a 
> mandatory email field
> 
> So why is it still necessary to get email addresses at all?

I don't recall, exactly. It was at an early Language Summit, and we were 
looking for ways to contact everyone and to associate people with email 
addresses. It might have involved the mercurial migration. Maybe it's 
not still required. My point is that it's hard to come up with a list of 
core devs and match them with email addresses. If that's not the 
requirement here, then great!

I know I've had several addresses over the years, some of which are 
non-obviously associated with me, and some of which I no longer have 
access to.

Eric


> 
> 2018-08-02 10:59 GMT+02:00 Eric V. Smith <eric at trueblade.com 
> <mailto:eric at trueblade.com>>:
> 
>     On 8/2/2018 3:32 AM, M.-A. Lemburg wrote:
> 
>         On 02.08.2018 03:24, Eric V. Smith wrote:
> 
>             On 8/1/2018 8:32 PM, Mariatta Wijaya wrote:
> 
>                  ???? I think it would also be a good idea to include
>                 core developers
>                  ???? of other Python implementations in such a document, in
>                  ???? separate sections, e.g. for Jython, IronPython, PyPy,
>                  ???? Stackless, etc
> 
> 
>                 Hmm, I don't think it is should be our (CPython)
>                 responsibility to
>                 keep track and maintain the list of the core devs of
>                 alternate Python
>                 implementations. Don't they have their own community /
>                 website? They
>                 have their own repo, bug tracker, governance model, and
>                 everything,
>                 right?
> 
> 
>             Agreed. We have a hard enough time keeping track of our own core
>             developers.
> 
> 
>         I don't really think we have a hard time doing this. The only
>         problem is that we never sat down and actually properly recorded
>         this in one place.
> 
> 
>     I was specifically thinking of a way to stay in touch with core
>     devs, or more specifically a way to send them email. In the past,
>     before we moved to github, I took it upon myself to find email
>     addresses (current or not) for all core devs, and I gave up without
>     much success.
> 
>     I agree that we could probably come up with a list of names for
>     people who have been given the "core dev" status.
> 
>             For our core devs, can't we just say that the CPython core
>             devs are
>             those with commit bits on the CPython repo? I realize that will
>             eliminate some people who have been core developers and
>             never moved to
>             github, but if they bring it to our attention, we can add
>             them easily
>             enough.
> 
>         As discussed before, being a core developer is a status you
>         gain and never lose. There is a clear difference between have
>         commit rights to the (current) repo and this status.
> 
> 
>     Agreed. Again, this was in the (poorly conveyed) context of getting
>     email addresses for them, or at least being able to contact them.
> 
>     Eric
> 
>     _______________________________________________
>     python-committers mailing list
>     python-committers at python.org <mailto:python-committers at python.org>
>     https://mail.python.org/mailman/listinfo/python-committers
>     <https://mail.python.org/mailman/listinfo/python-committers>
>     Code of Conduct: https://www.python.org/psf/codeofconduct/
>     <https://www.python.org/psf/codeofconduct/>
> 
> 

From larry at hastings.org  Thu Aug  2 10:00:11 2018
From: larry at hastings.org (Larry Hastings)
Date: Thu, 2 Aug 2018 07:00:11 -0700
Subject: [python-committers] [RELEASED] Python 3.4.9 and Python 3.5.6 are
 now available
Message-ID: <c197b678-e6c1-0a54-b3ea-3454cceee987@hastings.org>


On behalf of the Python development community, I'm happy to announce the 
availability of Python 3.4.9 and Python 3.5.6.

Both Python 3.4 and 3.5 are in "security fixes only" mode.? Both 
versions only accept security fixes, not conventional bug fixes, and 
both releases are source-only.


You can find Python 3.4.9 here:

    https://www.python.org/downloads/release/python-349/


And you can find Python 3.5.6 here:

    https://www.python.org/downloads/release/python-356/


We now return you to your pitched debate already in progress,


//arry/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180802/e20cceb9/attachment.html>

From Jack.Jansen at cwi.nl  Thu Aug  2 15:54:38 2018
From: Jack.Jansen at cwi.nl (Jack Jansen)
Date: Thu, 2 Aug 2018 21:54:38 +0200
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
Message-ID: <FF275DEC-C900-4484-A87B-FDDF423CF490@cwi.nl>

Nathaniel, you strike the nail on the head here.

The reason Guido as BDFL and therefore ultimate authority on what ?python? is worked because it is organic: it is not set down in strict rules and regulations and timelines and percentages of votes and what not. It works because a very large fraction of the community accepts it. (And I know I?m mixing past and present tense and I?m doing it on purpose:-)

We need to come up with a new governance model, and I think that a rules-and-regulations model is not a model that Python will thrive by. On the contrary, I think it has the danger of moving people into a rules-and-regulations mindset, and therefore lead to all sorts of decisions being viewed in a ?political? light, where before they wouldn?t be.

And my worry is that be introducing deadlines and all that in the process there is the danger that we will inexorably move to a strict governance model. I would much prefer a process where we go here/there/everywhere and slowly a consensus builds up.

Jack

Sent from my iPad

> On Aug 1, 2018, at 23:22, Nathaniel Smith <njs at pobox.com> wrote:
> 
> On Wed, Aug 1, 2018 at 12:41 PM, Mariatta Wijaya
> <mariatta.wijaya at gmail.com> wrote:
>> Since this is like a CFP I figured we should clarify what's expected the
>> proposal, and I also wanted to be more detailed in the timeline.
>> 
>> Oct 1 00:00:00 UTC: Deadline of coming up with proposals of governance
>> model.
>> 
>> To be included in the proposal:
>> - explanation and reasoning of the governance model
>> - expected roles and responsibilities
>> - candidate for the role need not be included at this time, since we're only
>> choosing the governance model. Depending on the governance model chosen, we
>> might have different people to be nominated. There will be a separate
>> process for nominating the candidate.
>> - the term of governance: is it for life? 5 years? 10 years?
>> 
>> Who can submit the proposal?
>> Python core developers. Individual core devs can submit a proposal, or
>> co-author the proposal with another core dev.
>> 
>> How to submit the proposal?
>> Proposal should be in a form of a PEP, and merged into peps repo before Oct
>> 1 00:00:00 UTC. Proposals not merged after Oct 1 00:00:00 UTC will not be
>> considered.
>> 
>> Oct 1 - Nov 15: Review period.
>> All core developers will review the PEPs, and ask any questions to the PEP
>> author. This timeline allows for enough time for all core devs to carefully
>> review each PEPs, and for authors to respond.
>> 
>> There will be two parts of this:
>> 
>> Review phase 1: Oct 1- Nov 1: Allow changes and tweaks to the proposed PEPs.
>> I figured people will have questions and will need to clarify the PEPs
>> during this period. But if we want the PEP to be final by Oct 1, that's fine
>> by me. maybe allow typo fixes still.
>> 
>> Review phase 2: Nov 1 00:00:00 UTC: No more changes to the above PEPs.
>> No more tweaks to these PEPs. PRs to these PEPs should be rejected.
>> This is the final chance to carefully review all governance PEPs, and
>> formulate your decisions.
> 
> I'm worried that this whole plan is a bad idea.
> 
> This kind of process with deadlines, proposals, votes, etc., is an
> excellent way to take legitimacy and make it visible. That's a
> valuable thing, and addresses an important problem. But it's not the
> problem I'm most worried about here.
> 
> As engineers, we know that every design has trade-offs, and that goes
> for governance as well. Having a universally acclaimed BDFL like Guido
> has many tremendous advantages. But it also has one tremendous
> disadvantage: because we always knew Guido would make the final
> decision, and that we could always appeal to him when things didn't go
> the way we like, python-dev has never had to learn to work out
> disagreements and get along.
> 
> Now we have to figure that out: the legitimacy of any new governance
> system is ultimately going to have to rest on the consensus of the
> core devs. The only way I know to get that is by taking the time to
> work through the difficult conversations. If these deadlines just
> encourage people to keep moving and engaging, then that's great. But I
> worry that if we impose a cut-off like this up front, then we'll take
> that as an excuse to skip doing that work, because there's no time,
> and if someone disagrees it's easier to vote than to actually engage
> and work it out.
> 
> -n
> 
> -- 
> Nathaniel J. Smith -- https://vorpus.org
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/


From Jack.Jansen at cwi.nl  Thu Aug  2 16:02:00 2018
From: Jack.Jansen at cwi.nl (Jack Jansen)
Date: Thu, 2 Aug 2018 22:02:00 +0200
Subject: [python-committers] List of all core developers
In-Reply-To: <e2ec9443-76c5-c0e2-f6e7-cf92d0d44792@python.org>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <CACLn2+0E2hSQg5Mkp4T2riCHydLLuXu9b=H-UWPSbNPGDFoZLg@mail.gmail.com>
 <e2ec9443-76c5-c0e2-f6e7-cf92d0d44792@python.org>
Message-ID: <99B92159-1864-4F99-A8CA-9A9ACCD3C7BE@cwi.nl>


> On Aug 1, 2018, at 23:37, Antoine Pitrou <antoine at python.org> wrote:
> 
> 
> 
>> Le 01/08/2018 ? 23:31, Jack Diederich a ?crit :
>> https://hg.python.org/committers.txt
> 
> Probably outdated, for example Pablo Salingo Salgado doesn't seem there.

And historically incomplete: I seem to be missing from that list, even though github say I have commit rights. Interestingly, Sjoerd Mullender _is_ on the list (and who of us two is the second committee to python and who is the third is a matter of discussion:-)

Jack

From brett at python.org  Thu Aug  2 16:43:00 2018
From: brett at python.org (Brett Cannon)
Date: Thu, 2 Aug 2018 13:43:00 -0700
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <CA+St6D3b--64SGfA1iiBc3y-eCXCEam=fPymbLpyna=9j6OhHg@mail.gmail.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
 <CA+St6D0+HPez8qcyz-f8W3xAsX_rqUtijxNg_BSqrEmnZ4BCTA@mail.gmail.com>
 <CAGbohnZ-T3BjuxVJmiU9g07RBVzdTh5dwpH4KE=KVTXqUA=Ndw@mail.gmail.com>
 <CA+St6D2LgMEf0npKkj60ydBya2efXKMTjV7qVRDW6mmmFHDUDA@mail.gmail.com>
 <CAGbohnZsdS_=oHtTaUzrGXpNM6GLqVu_WK84xgNLqOOdKyasRA@mail.gmail.com>
 <CA+St6D3b--64SGfA1iiBc3y-eCXCEam=fPymbLpyna=9j6OhHg@mail.gmail.com>
Message-ID: <CAP1=2W4mg+xO87g+cwtovYX92quzfEk-3bygqi13=juaLfnktg@mail.gmail.com>

On Wed, 1 Aug 2018 at 17:58 Yury Selivanov <yselivanov.ml at gmail.com> wrote:

> On Wed, Aug 1, 2018 at 8:29 PM Mariatta Wijaya
> <mariatta.wijaya at gmail.com> wrote:
> [..]
> > Please don't misunderstand my wanting to set up a deadlines and process
> as wanting to rush things.
>
> Absolutely, I understand, I didn't want to imply that "[name] is
> rushing the process". Sorry if I sounded this way. I do have an
> impression, though, that a large population of core devs is OK with
> deadlines and the other sizable population doesn't understand why we
> need a strict schedule right now.
>

For me I want to start laying out goals (or at least an initial goal)
because I don't want to procrastinate because this happens to be a hard
problem. I don't think any dates have to quite be all-or-nothing, but I can
also see this dragging on if we don't start to guiding ourselves towards
some resolution at some point.

I'll also mention that I'm looking to keep this moving this forward because
unlike Yury's experience as EuroPython, people have been asking me when
this is going to be resolved, not that we are moving too fast.


>
> > I'm open to extend the dates, and even wait another year if we need to.
> > Or do folks want to come up with a completely different process than
> what I've proposed?
> >
> > In the end, I just want to know whether we will come to decision before
> 2019, 2020, 2021, 2022, .. ?
>
> IMHO we should tweak the proposal to include just *one date for now*:
> we want everybody interested to post their proposals by October 1st
> (we can shift it + 2 weeks if people are on vacations right now).
>

I was actually going to email suggesting this but Mariatta beat me to the
subject. :)

For me, I think aiming for October 1st to get the initial proposals in is a
good goal.

If it looks like people need some more time then that's fine and they can
ask for it and we can all agree to extend it, but we first need to (a) get
to October 1, and (b) people actually end up needing more time :) . As of
right now no one has concretely said that October 1 won't work for them
(it's actually October 1 specifically because Victor asked for that date so
he could make a proposal due to his vacation in August). So for me, going
forward with the goal of October 1 for people proposing governance models
seems reasonable and we can re-assess as we get closer to that date.


>
> The discussion will inevitably start as soon as we have a couple
> proposals on the table.  Some proposals will be withdrawn, some will
> require tweaks, people also might come up with new proposals.  We can
> then decide what our next steps (and deadlines!) considering what will
> be the outcome of these first debates.
>

+1
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180802/1ba76f94/attachment.html>

From brett at python.org  Thu Aug  2 16:55:16 2018
From: brett at python.org (Brett Cannon)
Date: Thu, 2 Aug 2018 13:55:16 -0700
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <2588C4F6-2C9A-4B13-ADD2-22E63999320A@mac.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
 <CA+St6D0+HPez8qcyz-f8W3xAsX_rqUtijxNg_BSqrEmnZ4BCTA@mail.gmail.com>
 <CAGbohnZ-T3BjuxVJmiU9g07RBVzdTh5dwpH4KE=KVTXqUA=Ndw@mail.gmail.com>
 <CA+St6D2LgMEf0npKkj60ydBya2efXKMTjV7qVRDW6mmmFHDUDA@mail.gmail.com>
 <2588C4F6-2C9A-4B13-ADD2-22E63999320A@mac.com>
Message-ID: <CAP1=2W4mcmS++OV0g_WJNi3OkxprNg+MRJn9=on_VBR4c-mWaA@mail.gmail.com>

On Thu, 2 Aug 2018 at 00:24 Ronald Oussoren via python-committers <
python-committers at python.org> wrote:

>
>
> > On 2 Aug 2018, at 01:06, Yury Selivanov <yselivanov.ml at gmail.com> wrote:
> >
> > On Wed, Aug 1, 2018 at 6:44 PM Mariatta Wijaya
> > <mariatta.wijaya at gmail.com> wrote:
> >>
> >
> >> Currently any undecided PEP is stalled, and no one can pronounce on
> them.
> >
> > And maybe that's OK for a few months? I don't recall Guido ever
> > accepting PEPs promptly. :)  Setting strict deadlines really seems
> > like a last-resort option.
>
> That, and it might be acceptable to start with a consensus based model for
> accepting PEPs at first. That would help in getting it clearer what we
> really need going forward (which as several people have stated is more than
> just deciding on PEPs).  That would mean that contentious PEPs would have
> to wait longer, but that isn?t necessarily a bad idea.
>

So basically you want to see if we can find consensus on using consensus
for PEPs? ;) Or put another way, basically this seems to suggest giving the
consensus/voting approach a chance without specifically saying you want to
give other proposals on how to model PEPs a chance as well because deciding
by consensus is still a governance model.

Personally I would rather say that we are in a language moratorium until we
resolve this governance situation and if that means Python 3.8 is a boring
release then so be it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180802/13899a11/attachment-0001.html>

From brett at python.org  Thu Aug  2 17:02:37 2018
From: brett at python.org (Brett Cannon)
Date: Thu, 2 Aug 2018 14:02:37 -0700
Subject: [python-committers] List of all core developers
In-Reply-To: <99B92159-1864-4F99-A8CA-9A9ACCD3C7BE@cwi.nl>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <CACLn2+0E2hSQg5Mkp4T2riCHydLLuXu9b=H-UWPSbNPGDFoZLg@mail.gmail.com>
 <e2ec9443-76c5-c0e2-f6e7-cf92d0d44792@python.org>
 <99B92159-1864-4F99-A8CA-9A9ACCD3C7BE@cwi.nl>
Message-ID: <CAP1=2W4keCj2p=-Gq74es3BOYDXFWbCOzr-SBtj8ra6YeBW7DA@mail.gmail.com>

On Thu, 2 Aug 2018 at 13:02 Jack Jansen <Jack.Jansen at cwi.nl> wrote:

>
> > On Aug 1, 2018, at 23:37, Antoine Pitrou <antoine at python.org> wrote:
> >
> >
> >
> >> Le 01/08/2018 ? 23:31, Jack Diederich a ?crit :
> >> https://hg.python.org/committers.txt
> >
> > Probably outdated, for example Pablo Salingo Salgado doesn't seem there.
>
> And historically incomplete: I seem to be missing from that list, even
> though github say I have commit rights. Interestingly, Sjoerd Mullender
> _is_ on the list (and who of us two is the second committee to python and
> who is the third is a matter of discussion:-)
>

That file is auto-generated based on SSH keys for accessing hg.python.org,
so it became outdated as of the git migration.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180802/56b914bd/attachment.html>

From brett at python.org  Thu Aug  2 17:07:40 2018
From: brett at python.org (Brett Cannon)
Date: Thu, 2 Aug 2018 14:07:40 -0700
Subject: [python-committers] List of all core developers
In-Reply-To: <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>
Message-ID: <CAP1=2W5ir8L1MdqauiuKCLS1HN7qsyF1DbCdqbjxy0xEki20TA@mail.gmail.com>

On Wed, 1 Aug 2018 at 14:44 M.-A. Lemburg <mal at egenix.com> wrote:

> On 01.08.2018 23:28, Mariatta Wijaya wrote:
> > See also an open issue to revamp the Developer log:
> > https://github.com/python/devguide/issues/390
> >
> > Someone has also said that they're working on tracking down the dormant
> > core devs, but now I can't find that email.
>
> I think the log is fine at it is, since it serves a different
> purpose.
>

What is the purpose? I don't remember why we started to keep the developer
log in that format as I have never felt the need to go back and see who
vouched for someone or who granted the commit rights in the end.

-Brett


>
> The list should be in addition to the log, not replacing it.
>
> Resources we already have:
>
> * https://devguide.python.org/developers/
> *
>
> https://bugs.python.org/user?%40action=search&iscommitter=1&%40pagesize=300&%40sort=username
> * python-committers Subscribers List (but this is currently only
>   for list admins to see - perhaps we could make that available
>   to list members ?!)
> * https://hg.python.org/committers.txt
> * for the early days:
>
>
> https://raw.githubusercontent.com/python/cpython/e42b705188271da108de42b55d9344642170aa2b/Misc/HISTORY
>   in combination with
>
>
> https://github.com/python/cpython/blob/e42b705188271da108de42b55d9344642170aa2b/Misc/ACKS
>   (in those times, there was no direct access to the repo
>   and all patches had to go through the team around Guido)
>
> I think it would also be a good idea to include core developers
> of other Python implementations in such a document, in
> separate sections, e.g. for Jython, IronPython, PyPy,
> Stackless, etc.
>
>
> > Mariatta
> >
> >
> > On Wed, Aug 1, 2018 at 2:15 PM M.-A. Lemburg <mal at egenix.com> wrote:
> >
> >> It's become fairly obvious that we are missing a list of core
> >> developers on some site. One we can use as reference and one
> >> which core devs can also show to other to prove they are
> >> core developers.
> >>
> >> I guess the natural place for such a list is the dev guide,
> >> but we could also use a page on www.python.org, if that's easier
> >> to maintain.
> >>
> >> Regarding format, I'd suggest to use the same as PSF Fellows
> >> list:
> >>
> >> https://www.python.org/psf/members/#fellows
> >>
> >> Thoughts ?
> >>
> >> Note: Asking for this now is not completely unintentional.
> >> The EuroPython Society has something to announce which will
> >> require such a list.
> >>
> >> Thanks,
> >> --
> >> Marc-Andre Lemburg
> >> eGenix.com
> >>
> >> Professional Python Services directly from the Experts (#1, Aug 01 2018)
> >>>>> Python Projects, Coaching and Consulting ...  http://www.egenix.com/
> >>>>> Python Database Interfaces ...           http://products.egenix.com/
> >>>>> Plone/Zope Database Interfaces ...           http://zope.egenix.com/
> >> ________________________________________________________________________
> >>
> >> ::: We implement business ideas - efficiently in both time and costs :::
> >>
> >>    eGenix.com Software, Skills and Services GmbH  Pastor-Loeh-Str.48
> >>     D-40764 Langenfeld, Germany. CEO Dipl.-Math. Marc-Andre Lemburg
> >>            Registered at Amtsgericht Duesseldorf: HRB 46611
> >>                http://www.egenix.com/company/contact/
> >>                       http://www.malemburg.com/
> >>
> >> _______________________________________________
> >> python-committers mailing list
> >> python-committers at python.org
> >> https://mail.python.org/mailman/listinfo/python-committers
> >> Code of Conduct: https://www.python.org/psf/codeofconduct/
> >>
> >
>
> --
> Marc-Andre Lemburg
> eGenix.com
>
> Professional Python Services directly from the Experts (#1, Aug 01 2018)
> >>> Python Projects, Coaching and Consulting ...  http://www.egenix.com/
> >>> Python Database Interfaces ...           http://products.egenix.com/
> >>> Plone/Zope Database Interfaces ...           http://zope.egenix.com/
> ________________________________________________________________________
>
> ::: We implement business ideas - efficiently in both time and costs :::
>
>    eGenix.com Software, Skills and Services GmbH  Pastor-Loeh-Str.48
>     D-40764 Langenfeld, Germany. CEO Dipl.-Math. Marc-Andre Lemburg
>            Registered at Amtsgericht Duesseldorf: HRB 46611
>                http://www.egenix.com/company/contact/
>                       http://www.malemburg.com/
>
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180802/3b95f137/attachment.html>

From brett at python.org  Thu Aug  2 17:16:15 2018
From: brett at python.org (Brett Cannon)
Date: Thu, 2 Aug 2018 14:16:15 -0700
Subject: [python-committers] List of all core developers
In-Reply-To: <1fe758c6-01c7-9654-60c7-2ad9c5ec81f2@egenix.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>
 <CALFfu7DzkfpASsRxxYVHamy4y+Ais7gkQGdQ3yZn9rReOcykHA@mail.gmail.com>
 <CAGbohnZ=rncDghn8rM9J+R2qMuO5ig-7_WwArwaY0gRchJ5i=w@mail.gmail.com>
 <51741053-7e32-5ea2-1d18-b2ca711dda9e@trueblade.com>
 <1fe758c6-01c7-9654-60c7-2ad9c5ec81f2@egenix.com>
Message-ID: <CAP1=2W79VWO-rNd2_EqWyKJTCWPo+PBiS88Ra+JMf+2j-VO02A@mail.gmail.com>

On Thu, 2 Aug 2018 at 00:32 M.-A. Lemburg <mal at egenix.com> wrote:

> On 02.08.2018 03:24, Eric V. Smith wrote:
> > On 8/1/2018 8:32 PM, Mariatta Wijaya wrote:
> >>     I think it would also be a good idea to include core developers
> >>     of other Python implementations in such a document, in
> >>     separate sections, e.g. for Jython, IronPython, PyPy,
> >>     Stackless, etc
> >>
> >>
> >> Hmm, I don't think it is should be our (CPython) responsibility to
> >> keep track and maintain the list of the core devs of alternate Python
> >> implementations. Don't they have their own community / website? They
> >> have their own repo, bug tracker, governance model, and everything,
> >> right?
> >
> > Agreed. We have a hard enough time keeping track of our own core
> > developers.
>
> I don't really think we have a hard time doing this. The only
> problem is that we never sat down and actually properly recorded
> this in one place.
>
> Other projects will, of course, have their own websites, but since
> Python is more than just CPython, it would be great to include those
> other developers in an official list as well. It would be up for
> for the other teams to maintain their lists.
>
> That said, this part is lower priority than the CPython core
> developer listing.
>
> > For our core devs, can't we just say that the CPython core devs are
> > those with commit bits on the CPython repo? I realize that will
> > eliminate some people who have been core developers and never moved to
> > github, but if they bring it to our attention, we can add them easily
> > enough.
> As discussed before, being a core developer is a status you
> gain and never lose. There is a clear difference between have
> commit rights to the (current) repo and this status.
>

> What I am after, is a list of core developers, not a list of
> people with their keys on github (or where ever we move in the
> future), since this list is not about a technical status, but rather
> a social one.
>

Then the issue I created which Mariatta linked to I think covers this
desire to have a historical record of people who have been core developers
along with when they have had commit privileges.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180802/f1c4eae0/attachment-0001.html>

From brett at python.org  Thu Aug  2 17:17:26 2018
From: brett at python.org (Brett Cannon)
Date: Thu, 2 Aug 2018 14:17:26 -0700
Subject: [python-committers] List of all core developers
In-Reply-To: <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
Message-ID: <CAP1=2W7kT+rvbef5CyzLvQk8da68xnPCbpnqr9Pspuy3H38DXw@mail.gmail.com>

On Wed, 1 Aug 2018 at 14:29 Mariatta Wijaya <mariatta.wijaya at gmail.com>
wrote:

> See also an open issue to revamp the Developer log:
> https://github.com/python/devguide/issues/390
>
> Someone has also said that they're working on tracking down the dormant
> core devs, but now I can't find that email.
>

Ethan said he would reach out to the folks on bugs.python.org who don't
have a GitHub usernames listed, but I don't know if he was going to get to
this before the dev sprints.

-Brett


>
> Mariatta
>
>
> On Wed, Aug 1, 2018 at 2:15 PM M.-A. Lemburg <mal at egenix.com> wrote:
>
>> It's become fairly obvious that we are missing a list of core
>> developers on some site. One we can use as reference and one
>> which core devs can also show to other to prove they are
>> core developers.
>>
>> I guess the natural place for such a list is the dev guide,
>> but we could also use a page on www.python.org, if that's easier
>> to maintain.
>>
>> Regarding format, I'd suggest to use the same as PSF Fellows
>> list:
>>
>> https://www.python.org/psf/members/#fellows
>>
>> Thoughts ?
>>
>> Note: Asking for this now is not completely unintentional.
>> The EuroPython Society has something to announce which will
>> require such a list.
>>
>> Thanks,
>> --
>> Marc-Andre Lemburg
>> eGenix.com
>>
>> Professional Python Services directly from the Experts (#1, Aug 01 2018)
>> >>> Python Projects, Coaching and Consulting ...  http://www.egenix.com/
>> >>> Python Database Interfaces ...           http://products.egenix.com/
>> >>> Plone/Zope Database Interfaces ...           http://zope.egenix.com/
>> ________________________________________________________________________
>>
>> ::: We implement business ideas - efficiently in both time and costs :::
>>
>>    eGenix.com Software, Skills and Services GmbH  Pastor-Loeh-Str.48
>>     D-40764 Langenfeld, Germany. CEO Dipl.-Math. Marc-Andre Lemburg
>>            Registered at Amtsgericht Duesseldorf: HRB 46611
>>                http://www.egenix.com/company/contact/
>>                       http://www.malemburg.com/
>>
>> _______________________________________________
>> python-committers mailing list
>> python-committers at python.org
>> https://mail.python.org/mailman/listinfo/python-committers
>> Code of Conduct: https://www.python.org/psf/codeofconduct/
>>
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180802/32f12a58/attachment.html>

From brett at python.org  Thu Aug  2 17:25:58 2018
From: brett at python.org (Brett Cannon)
Date: Thu, 2 Aug 2018 14:25:58 -0700
Subject: [python-committers] List of all core developers
In-Reply-To: <CACQYzFKARJhNVOMVOpSxPFuY5iM=8dHOPn7_xCDFvV6fwp+5xQ@mail.gmail.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>
 <CALFfu7DzkfpASsRxxYVHamy4y+Ais7gkQGdQ3yZn9rReOcykHA@mail.gmail.com>
 <CAGbohnZ=rncDghn8rM9J+R2qMuO5ig-7_WwArwaY0gRchJ5i=w@mail.gmail.com>
 <51741053-7e32-5ea2-1d18-b2ca711dda9e@trueblade.com>
 <1fe758c6-01c7-9654-60c7-2ad9c5ec81f2@egenix.com>
 <e5d2e239-bedf-1adc-5978-4bfa0600bf3c@trueblade.com>
 <CACQYzFKARJhNVOMVOpSxPFuY5iM=8dHOPn7_xCDFvV6fwp+5xQ@mail.gmail.com>
Message-ID: <CAP1=2W5Vs5T4H7Nm0NayQQFGiq7yAX9Pk7XdX6k_Z28P3XxL2A@mail.gmail.com>

On Thu, 2 Aug 2018 at 04:54 Stefan Richthofer <stefan.richthofer at gmail.com>
wrote:

> Again, this was in the (poorly conveyed) context of getting email
>> addresses for them, or at least being able to contact them.
>>
>
> I always thought there were already at least three places containing the
> necessary email addresses.
>
> * python-committers should be exactly this mailing list.
>

The list also has email archiving services as well as duplicate emails for
people (e.g. I'm in it twice so that if I accidentally send an email from a
personal email address it doesn't get held up in moderation).


> * according to https://devguide.python.org/coredev/#issue-tracker it is
> mandatory for core developers to subscribe to the issue tracker which AFAIK
> requires a confirmed email address.
>
* Every committer clearly must have signed the contributor agreement
> https://www.python.org/psf/contrib/contrib-form/ which also contains a
> mandatory email field
>
> So why is it still necessary to get email addresses at all?
>

Because none of those necessarily have accurate email addresses at this
point. E.g. even python-committers has had people dropped off due to too
many email rejections. And if we hold a vote for a governance model we will
need a place to send ballots.

Now if the vote is open to any core developer (using MAL's definition of it
being a lifetime title), then the subscription list for this mailing list
is probably good enough with some manual grooming as long we are okay with
long-dormant folk who predate this list not voting (which I'm personally
fine with). But if we wanted a way to reach just people with commit
privileges then that's a separate challenge.

-Brett


>
> 2018-08-02 10:59 GMT+02:00 Eric V. Smith <eric at trueblade.com>:
>
>> On 8/2/2018 3:32 AM, M.-A. Lemburg wrote:
>>
>>> On 02.08.2018 03:24, Eric V. Smith wrote:
>>>
>>>> On 8/1/2018 8:32 PM, Mariatta Wijaya wrote:
>>>>
>>>>>      I think it would also be a good idea to include core developers
>>>>>      of other Python implementations in such a document, in
>>>>>      separate sections, e.g. for Jython, IronPython, PyPy,
>>>>>      Stackless, etc
>>>>>
>>>>>
>>>>> Hmm, I don't think it is should be our (CPython) responsibility to
>>>>> keep track and maintain the list of the core devs of alternate Python
>>>>> implementations. Don't they have their own community / website? They
>>>>> have their own repo, bug tracker, governance model, and everything,
>>>>> right?
>>>>>
>>>>
>>>> Agreed. We have a hard enough time keeping track of our own core
>>>> developers.
>>>>
>>>
>>> I don't really think we have a hard time doing this. The only
>>> problem is that we never sat down and actually properly recorded
>>> this in one place.
>>>
>>
>> I was specifically thinking of a way to stay in touch with core devs, or
>> more specifically a way to send them email. In the past, before we moved to
>> github, I took it upon myself to find email addresses (current or not) for
>> all core devs, and I gave up without much success.
>>
>> I agree that we could probably come up with a list of names for people
>> who have been given the "core dev" status.
>>
>> For our core devs, can't we just say that the CPython core devs are
>>>> those with commit bits on the CPython repo? I realize that will
>>>> eliminate some people who have been core developers and never moved to
>>>> github, but if they bring it to our attention, we can add them easily
>>>> enough.
>>>>
>>> As discussed before, being a core developer is a status you
>>> gain and never lose. There is a clear difference between have
>>> commit rights to the (current) repo and this status.
>>>
>>
>> Agreed. Again, this was in the (poorly conveyed) context of getting email
>> addresses for them, or at least being able to contact them.
>>
>> Eric
>>
>> _______________________________________________
>> python-committers mailing list
>> python-committers at python.org
>> https://mail.python.org/mailman/listinfo/python-committers
>> Code of Conduct: https://www.python.org/psf/codeofconduct/
>>
>
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180802/c424ec1d/attachment-0001.html>

From yselivanov.ml at gmail.com  Thu Aug  2 20:01:19 2018
From: yselivanov.ml at gmail.com (Yury Selivanov)
Date: Thu, 2 Aug 2018 20:01:19 -0400
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <CAP1=2W4mg+xO87g+cwtovYX92quzfEk-3bygqi13=juaLfnktg@mail.gmail.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
 <CA+St6D0+HPez8qcyz-f8W3xAsX_rqUtijxNg_BSqrEmnZ4BCTA@mail.gmail.com>
 <CAGbohnZ-T3BjuxVJmiU9g07RBVzdTh5dwpH4KE=KVTXqUA=Ndw@mail.gmail.com>
 <CA+St6D2LgMEf0npKkj60ydBya2efXKMTjV7qVRDW6mmmFHDUDA@mail.gmail.com>
 <CAGbohnZsdS_=oHtTaUzrGXpNM6GLqVu_WK84xgNLqOOdKyasRA@mail.gmail.com>
 <CA+St6D3b--64SGfA1iiBc3y-eCXCEam=fPymbLpyna=9j6OhHg@mail.gmail.com>
 <CAP1=2W4mg+xO87g+cwtovYX92quzfEk-3bygqi13=juaLfnktg@mail.gmail.com>
Message-ID: <CA+St6D3w-eb6Borb02+CtPmHgxFxFF32E=TJv1eKi8E=XUQwOA@mail.gmail.com>

On Thu, Aug 2, 2018 at 4:43 PM Brett Cannon <brett at python.org> wrote:
>
> On Wed, 1 Aug 2018 at 17:58 Yury Selivanov <yselivanov.ml at gmail.com> wrote:
>>
>> On Wed, Aug 1, 2018 at 8:29 PM Mariatta Wijaya
>> <mariatta.wijaya at gmail.com> wrote:
>> [..]
>> > I'm open to extend the dates, and even wait another year if we need to.
>> > Or do folks want to come up with a completely different process than what I've proposed?
>> >
>> > In the end, I just want to know whether we will come to decision before 2019, 2020, 2021, 2022, .. ?
>>
>> IMHO we should tweak the proposal to include just *one date for now*:
>> we want everybody interested to post their proposals by October 1st
>> (we can shift it + 2 weeks if people are on vacations right now).
>
>
> I was actually going to email suggesting this but Mariatta beat me to the subject. :)
>

I think you've confused Mariatta with me here :)

> For me, I think aiming for October 1st to get the initial proposals in is a good goal.

Yeah it looks like people don't oppose having October 1st as our first
*soft* sync point as long as we don't set any other deadlines right
now.

To sum up:

* We want everybody who has ideas about future Python governance model
to submit their initial proposals by that date.

* The discussion will start around October 1st and we'll figure out
what we do next (and when) based on its outcome.

I think this plan is reasonably relaxed, but at the same time will
gently motivate us to move forward.

Yury

From yselivanov.ml at gmail.com  Thu Aug  2 20:19:10 2018
From: yselivanov.ml at gmail.com (Yury Selivanov)
Date: Thu, 2 Aug 2018 20:19:10 -0400
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <FF275DEC-C900-4484-A87B-FDDF423CF490@cwi.nl>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
 <FF275DEC-C900-4484-A87B-FDDF423CF490@cwi.nl>
Message-ID: <CA+St6D3AtqeKDeMAoiWdv32c7ivWcjpmJaGU28sXQy8BfJm=Aw@mail.gmail.com>

On Thu, Aug 2, 2018 at 3:55 PM Jack Jansen <Jack.Jansen at cwi.nl> wrote:
>
> Nathaniel, you strike the nail on the head here.
>
> The reason Guido as BDFL and therefore ultimate authority on what ?python? is worked because it is organic: it is not set down in strict rules and regulations and timelines and percentages of votes and what not. It works because a very large fraction of the community accepts it. (And I know I?m mixing past and present tense and I?m doing it on purpose:-)
>
> We need to come up with a new governance model, and I think that a rules-and-regulations model is not a model that Python will thrive by. On the contrary, I think it has the danger of moving people into a rules-and-regulations mindset, and therefore lead to all sorts of decisions being viewed in a ?political? light, where before they wouldn?t be.
>
> And my worry is that be introducing deadlines and all that in the process there is the danger that we will inexorably move to a strict governance model. I would much prefer a process where we go here/there/everywhere and slowly a consensus builds up.

I agree and that's why I also don't like the idea of having a strict
set of deadlines for voting on something that hasn't even been
proposed yet.

OTOH, it would be great if we can at least set a date to start the
discussion so that everybody can plan for it and join.  That's the
only way to keep the discussion open and equally accessible for
everyone.  If we do nothing, then naturally, those core devs who know
each other personally will start forming their opinion in isolated
groups. Many people will feel that they are completely removed from
the decision process and will end up in a very uncomfortable position.

Yury

From stefan.richthofer at gmail.com  Thu Aug  2 20:40:18 2018
From: stefan.richthofer at gmail.com (Stefan Richthofer)
Date: Fri, 3 Aug 2018 02:40:18 +0200
Subject: [python-committers] List of all core developers
In-Reply-To: <CAP1=2W5Vs5T4H7Nm0NayQQFGiq7yAX9Pk7XdX6k_Z28P3XxL2A@mail.gmail.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>
 <CALFfu7DzkfpASsRxxYVHamy4y+Ais7gkQGdQ3yZn9rReOcykHA@mail.gmail.com>
 <CAGbohnZ=rncDghn8rM9J+R2qMuO5ig-7_WwArwaY0gRchJ5i=w@mail.gmail.com>
 <51741053-7e32-5ea2-1d18-b2ca711dda9e@trueblade.com>
 <1fe758c6-01c7-9654-60c7-2ad9c5ec81f2@egenix.com>
 <e5d2e239-bedf-1adc-5978-4bfa0600bf3c@trueblade.com>
 <CACQYzFKARJhNVOMVOpSxPFuY5iM=8dHOPn7_xCDFvV6fwp+5xQ@mail.gmail.com>
 <CAP1=2W5Vs5T4H7Nm0NayQQFGiq7yAX9Pk7XdX6k_Z28P3XxL2A@mail.gmail.com>
Message-ID: <CACQYzFKhm3p2y_=JadZ4ki5B6vco31-nDoinSwgA58dv-ROxug@mail.gmail.com>

> as long we are okay with long-dormant folk who predate this list not
voting (which I'm personally fine with)

That sounds reasonable. Maintaining contact info is everyone's own
responsibility and not a too hard requirement.
And I see that for the vote it's necessary to sort out emails more
carefully. Because of the duplicates
issue, votes should probably better be counted based on names rather than
emails though.
Anyway, it appears to me that the emails issue is orthogonal to the dev
list issue.

2018-08-02 23:25 GMT+02:00 Brett Cannon <brett at python.org>:

>
>
> On Thu, 2 Aug 2018 at 04:54 Stefan Richthofer <stefan.richthofer at gmail.com>
> wrote:
>
>> Again, this was in the (poorly conveyed) context of getting email
>>> addresses for them, or at least being able to contact them.
>>>
>>
>> I always thought there were already at least three places containing the
>> necessary email addresses.
>>
>> * python-committers should be exactly this mailing list.
>>
>
> The list also has email archiving services as well as duplicate emails for
> people (e.g. I'm in it twice so that if I accidentally send an email from a
> personal email address it doesn't get held up in moderation).
>
>
>> * according to https://devguide.python.org/coredev/#issue-tracker it is
>> mandatory for core developers to subscribe to the issue tracker which AFAIK
>> requires a confirmed email address.
>>
> * Every committer clearly must have signed the contributor agreement
>> https://www.python.org/psf/contrib/contrib-form/ which also contains a
>> mandatory email field
>>
>> So why is it still necessary to get email addresses at all?
>>
>
> Because none of those necessarily have accurate email addresses at this
> point. E.g. even python-committers has had people dropped off due to too
> many email rejections. And if we hold a vote for a governance model we will
> need a place to send ballots.
>
> Now if the vote is open to any core developer (using MAL's definition of
> it being a lifetime title), then the subscription list for this mailing
> list is probably good enough with some manual grooming as long we are okay
> with long-dormant folk who predate this list not voting (which I'm
> personally fine with). But if we wanted a way to reach just people with
> commit privileges then that's a separate challenge.
>
> -Brett
>
>
>>
>> 2018-08-02 10:59 GMT+02:00 Eric V. Smith <eric at trueblade.com>:
>>
>>> On 8/2/2018 3:32 AM, M.-A. Lemburg wrote:
>>>
>>>> On 02.08.2018 03:24, Eric V. Smith wrote:
>>>>
>>>>> On 8/1/2018 8:32 PM, Mariatta Wijaya wrote:
>>>>>
>>>>>>      I think it would also be a good idea to include core developers
>>>>>>      of other Python implementations in such a document, in
>>>>>>      separate sections, e.g. for Jython, IronPython, PyPy,
>>>>>>      Stackless, etc
>>>>>>
>>>>>>
>>>>>> Hmm, I don't think it is should be our (CPython) responsibility to
>>>>>> keep track and maintain the list of the core devs of alternate Python
>>>>>> implementations. Don't they have their own community / website? They
>>>>>> have their own repo, bug tracker, governance model, and everything,
>>>>>> right?
>>>>>>
>>>>>
>>>>> Agreed. We have a hard enough time keeping track of our own core
>>>>> developers.
>>>>>
>>>>
>>>> I don't really think we have a hard time doing this. The only
>>>> problem is that we never sat down and actually properly recorded
>>>> this in one place.
>>>>
>>>
>>> I was specifically thinking of a way to stay in touch with core devs, or
>>> more specifically a way to send them email. In the past, before we moved to
>>> github, I took it upon myself to find email addresses (current or not) for
>>> all core devs, and I gave up without much success.
>>>
>>> I agree that we could probably come up with a list of names for people
>>> who have been given the "core dev" status.
>>>
>>> For our core devs, can't we just say that the CPython core devs are
>>>>> those with commit bits on the CPython repo? I realize that will
>>>>> eliminate some people who have been core developers and never moved to
>>>>> github, but if they bring it to our attention, we can add them easily
>>>>> enough.
>>>>>
>>>> As discussed before, being a core developer is a status you
>>>> gain and never lose. There is a clear difference between have
>>>> commit rights to the (current) repo and this status.
>>>>
>>>
>>> Agreed. Again, this was in the (poorly conveyed) context of getting
>>> email addresses for them, or at least being able to contact them.
>>>
>>> Eric
>>>
>>> _______________________________________________
>>> python-committers mailing list
>>> python-committers at python.org
>>> https://mail.python.org/mailman/listinfo/python-committers
>>> Code of Conduct: https://www.python.org/psf/codeofconduct/
>>>
>>
>> _______________________________________________
>> python-committers mailing list
>> python-committers at python.org
>> https://mail.python.org/mailman/listinfo/python-committers
>> Code of Conduct: https://www.python.org/psf/codeofconduct/
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180803/5087dd4a/attachment-0001.html>

From tjreedy at udel.edu  Thu Aug  2 23:12:55 2018
From: tjreedy at udel.edu (Terry Reedy)
Date: Thu, 2 Aug 2018 23:12:55 -0400
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <CA+St6D3w-eb6Borb02+CtPmHgxFxFF32E=TJv1eKi8E=XUQwOA@mail.gmail.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
 <CA+St6D0+HPez8qcyz-f8W3xAsX_rqUtijxNg_BSqrEmnZ4BCTA@mail.gmail.com>
 <CAGbohnZ-T3BjuxVJmiU9g07RBVzdTh5dwpH4KE=KVTXqUA=Ndw@mail.gmail.com>
 <CA+St6D2LgMEf0npKkj60ydBya2efXKMTjV7qVRDW6mmmFHDUDA@mail.gmail.com>
 <CAGbohnZsdS_=oHtTaUzrGXpNM6GLqVu_WK84xgNLqOOdKyasRA@mail.gmail.com>
 <CA+St6D3b--64SGfA1iiBc3y-eCXCEam=fPymbLpyna=9j6OhHg@mail.gmail.com>
 <CAP1=2W4mg+xO87g+cwtovYX92quzfEk-3bygqi13=juaLfnktg@mail.gmail.com>
 <CA+St6D3w-eb6Borb02+CtPmHgxFxFF32E=TJv1eKi8E=XUQwOA@mail.gmail.com>
Message-ID: <bb11ba90-6ec1-2212-360a-d2244b002dff@udel.edu>

On 8/2/2018 8:01 PM, Yury Selivanov wrote:
> On Thu, Aug 2, 2018 at 4:43 PM Brett Cannon <brett at python.org> wrote:
>>
>> On Wed, 1 Aug 2018 at 17:58 Yury Selivanov <yselivanov.ml at gmail.com> wrote:
>>>
>>> On Wed, Aug 1, 2018 at 8:29 PM Mariatta Wijaya
>>> <mariatta.wijaya at gmail.com> wrote:
>>> [..]
>>>> I'm open to extend the dates, and even wait another year if we need to.
>>>> Or do folks want to come up with a completely different process than what I've proposed?
>>>>
>>>> In the end, I just want to know whether we will come to decision before 2019, 2020, 2021, 2022, .. ?
>>>
>>> IMHO we should tweak the proposal to include just *one date for now*:
>>> we want everybody interested to post their proposals by October 1st
>>> (we can shift it + 2 weeks if people are on vacations right now).
>>
>>
>> I was actually going to email suggesting this but Mariatta beat me to the subject. :)
>>
> 
> I think you've confused Mariatta with me here :)
> 
>> For me, I think aiming for October 1st to get the initial proposals in is a good goal.
> 
> Yeah it looks like people don't oppose having October 1st as our first
> *soft* sync point as long as we don't set any other deadlines right
> now.
> 
> To sum up:
> 
> * We want everybody who has ideas about future Python governance model
> to submit their initial proposals by that date.
> 
> * The discussion will start around October 1st and we'll figure out
> what we do next (and when) based on its outcome.
> 
> I think this plan is reasonably relaxed, but at the same time will
> gently motivate us to move forward.

I agree.


From mal at egenix.com  Fri Aug  3 03:36:13 2018
From: mal at egenix.com (M.-A. Lemburg)
Date: Fri, 3 Aug 2018 09:36:13 +0200
Subject: [python-committers] List of all core developers
In-Reply-To: <CAP1=2W5ir8L1MdqauiuKCLS1HN7qsyF1DbCdqbjxy0xEki20TA@mail.gmail.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>
 <CAP1=2W5ir8L1MdqauiuKCLS1HN7qsyF1DbCdqbjxy0xEki20TA@mail.gmail.com>
Message-ID: <abf39e45-063b-cc36-ef24-5c030dffe576@egenix.com>

On 02.08.2018 23:07, Brett Cannon wrote:
> On Wed, 1 Aug 2018 at 14:44 M.-A. Lemburg <mal at egenix.com> wrote:
> 
>> On 01.08.2018 23:28, Mariatta Wijaya wrote:
>>> See also an open issue to revamp the Developer log:
>>> https://github.com/python/devguide/issues/390
>>>
>>> Someone has also said that they're working on tracking down the dormant
>>> core devs, but now I can't find that email.
>>
>> I think the log is fine at it is, since it serves a different
>> purpose.
>>
> 
> What is the purpose? I don't remember why we started to keep the developer
> log in that format as I have never felt the need to go back and see who
> vouched for someone or who granted the commit rights in the end.

It's good to know in which context someone received the commit
bit and who was driving it. This is part of our history and
we should maintain it as documentation of the process we have
in place for becoming a core developer.

-- 
Marc-Andre Lemburg
eGenix.com

Professional Python Services directly from the Experts (#1, Aug 03 2018)
>>> Python Projects, Coaching and Consulting ...  http://www.egenix.com/
>>> Python Database Interfaces ...           http://products.egenix.com/
>>> Plone/Zope Database Interfaces ...           http://zope.egenix.com/
________________________________________________________________________

::: We implement business ideas - efficiently in both time and costs :::

   eGenix.com Software, Skills and Services GmbH  Pastor-Loeh-Str.48
    D-40764 Langenfeld, Germany. CEO Dipl.-Math. Marc-Andre Lemburg
           Registered at Amtsgericht Duesseldorf: HRB 46611
               http://www.egenix.com/company/contact/
                      http://www.malemburg.com/


From mal at egenix.com  Fri Aug  3 03:37:45 2018
From: mal at egenix.com (M.-A. Lemburg)
Date: Fri, 3 Aug 2018 09:37:45 +0200
Subject: [python-committers] List of all core developers
In-Reply-To: <CAP1=2W79VWO-rNd2_EqWyKJTCWPo+PBiS88Ra+JMf+2j-VO02A@mail.gmail.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>
 <CALFfu7DzkfpASsRxxYVHamy4y+Ais7gkQGdQ3yZn9rReOcykHA@mail.gmail.com>
 <CAGbohnZ=rncDghn8rM9J+R2qMuO5ig-7_WwArwaY0gRchJ5i=w@mail.gmail.com>
 <51741053-7e32-5ea2-1d18-b2ca711dda9e@trueblade.com>
 <1fe758c6-01c7-9654-60c7-2ad9c5ec81f2@egenix.com>
 <CAP1=2W79VWO-rNd2_EqWyKJTCWPo+PBiS88Ra+JMf+2j-VO02A@mail.gmail.com>
Message-ID: <22801b86-a017-d429-44c5-7fdbf2b70db9@egenix.com>

On 02.08.2018 23:16, Brett Cannon wrote:
> On Thu, 2 Aug 2018 at 00:32 M.-A. Lemburg <mal at egenix.com> wrote:
> 
>> On 02.08.2018 03:24, Eric V. Smith wrote:
>>> On 8/1/2018 8:32 PM, Mariatta Wijaya wrote:
>>>>     I think it would also be a good idea to include core developers
>>>>     of other Python implementations in such a document, in
>>>>     separate sections, e.g. for Jython, IronPython, PyPy,
>>>>     Stackless, etc
>>>>
>>>>
>>>> Hmm, I don't think it is should be our (CPython) responsibility to
>>>> keep track and maintain the list of the core devs of alternate Python
>>>> implementations. Don't they have their own community / website? They
>>>> have their own repo, bug tracker, governance model, and everything,
>>>> right?
>>>
>>> Agreed. We have a hard enough time keeping track of our own core
>>> developers.
>>
>> I don't really think we have a hard time doing this. The only
>> problem is that we never sat down and actually properly recorded
>> this in one place.
>>
>> Other projects will, of course, have their own websites, but since
>> Python is more than just CPython, it would be great to include those
>> other developers in an official list as well. It would be up for
>> for the other teams to maintain their lists.
>>
>> That said, this part is lower priority than the CPython core
>> developer listing.
>>
>>> For our core devs, can't we just say that the CPython core devs are
>>> those with commit bits on the CPython repo? I realize that will
>>> eliminate some people who have been core developers and never moved to
>>> github, but if they bring it to our attention, we can add them easily
>>> enough.
>> As discussed before, being a core developer is a status you
>> gain and never lose. There is a clear difference between have
>> commit rights to the (current) repo and this status.
>>
> 
>> What I am after, is a list of core developers, not a list of
>> people with their keys on github (or where ever we move in the
>> future), since this list is not about a technical status, but rather
>> a social one.
>>
> 
> Then the issue I created which Mariatta linked to I think covers this
> desire to have a historical record of people who have been core developers
> along with when they have had commit privileges.

Yes, it does, but it's not a replacement, it's an additional
simple to query reference for 3rd parties.

-- 
Marc-Andre Lemburg
eGenix.com

Professional Python Services directly from the Experts (#1, Aug 03 2018)
>>> Python Projects, Coaching and Consulting ...  http://www.egenix.com/
>>> Python Database Interfaces ...           http://products.egenix.com/
>>> Plone/Zope Database Interfaces ...           http://zope.egenix.com/
________________________________________________________________________

::: We implement business ideas - efficiently in both time and costs :::

   eGenix.com Software, Skills and Services GmbH  Pastor-Loeh-Str.48
    D-40764 Langenfeld, Germany. CEO Dipl.-Math. Marc-Andre Lemburg
           Registered at Amtsgericht Duesseldorf: HRB 46611
               http://www.egenix.com/company/contact/
                      http://www.malemburg.com/


From mal at egenix.com  Fri Aug  3 03:43:38 2018
From: mal at egenix.com (M.-A. Lemburg)
Date: Fri, 3 Aug 2018 09:43:38 +0200
Subject: [python-committers] List of all core developers
In-Reply-To: <CAP1=2W5Vs5T4H7Nm0NayQQFGiq7yAX9Pk7XdX6k_Z28P3XxL2A@mail.gmail.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>
 <CALFfu7DzkfpASsRxxYVHamy4y+Ais7gkQGdQ3yZn9rReOcykHA@mail.gmail.com>
 <CAGbohnZ=rncDghn8rM9J+R2qMuO5ig-7_WwArwaY0gRchJ5i=w@mail.gmail.com>
 <51741053-7e32-5ea2-1d18-b2ca711dda9e@trueblade.com>
 <1fe758c6-01c7-9654-60c7-2ad9c5ec81f2@egenix.com>
 <e5d2e239-bedf-1adc-5978-4bfa0600bf3c@trueblade.com>
 <CACQYzFKARJhNVOMVOpSxPFuY5iM=8dHOPn7_xCDFvV6fwp+5xQ@mail.gmail.com>
 <CAP1=2W5Vs5T4H7Nm0NayQQFGiq7yAX9Pk7XdX6k_Z28P3XxL2A@mail.gmail.com>
Message-ID: <1a428790-8ede-3b78-e5bb-09029189876b@egenix.com>

Please note that the motivation for having a list similar to the
one we have for PSF Fellows is not to determine voting eligibility.

This is about having a record of the core developer status available
to show to 3rd parties, e.g. to (potential) employers, organizations,
government agencies, etc.

Having a place to also record the email addresses for internal
use such a voting or sending messages to the whole group
is a good idea nonetheless. This mailing list will likely already
serve that purpose.


On 02.08.2018 23:25, Brett Cannon wrote:
> On Thu, 2 Aug 2018 at 04:54 Stefan Richthofer <stefan.richthofer at gmail.com>
> wrote:
> 
>> Again, this was in the (poorly conveyed) context of getting email
>>> addresses for them, or at least being able to contact them.
>>>
>>
>> I always thought there were already at least three places containing the
>> necessary email addresses.
>>
>> * python-committers should be exactly this mailing list.
>>
> 
> The list also has email archiving services as well as duplicate emails for
> people (e.g. I'm in it twice so that if I accidentally send an email from a
> personal email address it doesn't get held up in moderation).
> 
> 
>> * according to https://devguide.python.org/coredev/#issue-tracker it is
>> mandatory for core developers to subscribe to the issue tracker which AFAIK
>> requires a confirmed email address.
>>
> * Every committer clearly must have signed the contributor agreement
>> https://www.python.org/psf/contrib/contrib-form/ which also contains a
>> mandatory email field
>>
>> So why is it still necessary to get email addresses at all?
>>
> 
> Because none of those necessarily have accurate email addresses at this
> point. E.g. even python-committers has had people dropped off due to too
> many email rejections. And if we hold a vote for a governance model we will
> need a place to send ballots.
> 
> Now if the vote is open to any core developer (using MAL's definition of it
> being a lifetime title), then the subscription list for this mailing list
> is probably good enough with some manual grooming as long we are okay with
> long-dormant folk who predate this list not voting (which I'm personally
> fine with). But if we wanted a way to reach just people with commit
> privileges then that's a separate challenge.
> 
> -Brett
> 
> 
>>
>> 2018-08-02 10:59 GMT+02:00 Eric V. Smith <eric at trueblade.com>:
>>
>>> On 8/2/2018 3:32 AM, M.-A. Lemburg wrote:
>>>
>>>> On 02.08.2018 03:24, Eric V. Smith wrote:
>>>>
>>>>> On 8/1/2018 8:32 PM, Mariatta Wijaya wrote:
>>>>>
>>>>>>      I think it would also be a good idea to include core developers
>>>>>>      of other Python implementations in such a document, in
>>>>>>      separate sections, e.g. for Jython, IronPython, PyPy,
>>>>>>      Stackless, etc
>>>>>>
>>>>>>
>>>>>> Hmm, I don't think it is should be our (CPython) responsibility to
>>>>>> keep track and maintain the list of the core devs of alternate Python
>>>>>> implementations. Don't they have their own community / website? They
>>>>>> have their own repo, bug tracker, governance model, and everything,
>>>>>> right?
>>>>>>
>>>>>
>>>>> Agreed. We have a hard enough time keeping track of our own core
>>>>> developers.
>>>>>
>>>>
>>>> I don't really think we have a hard time doing this. The only
>>>> problem is that we never sat down and actually properly recorded
>>>> this in one place.
>>>>
>>>
>>> I was specifically thinking of a way to stay in touch with core devs, or
>>> more specifically a way to send them email. In the past, before we moved to
>>> github, I took it upon myself to find email addresses (current or not) for
>>> all core devs, and I gave up without much success.
>>>
>>> I agree that we could probably come up with a list of names for people
>>> who have been given the "core dev" status.
>>>
>>> For our core devs, can't we just say that the CPython core devs are
>>>>> those with commit bits on the CPython repo? I realize that will
>>>>> eliminate some people who have been core developers and never moved to
>>>>> github, but if they bring it to our attention, we can add them easily
>>>>> enough.
>>>>>
>>>> As discussed before, being a core developer is a status you
>>>> gain and never lose. There is a clear difference between have
>>>> commit rights to the (current) repo and this status.
>>>>
>>>
>>> Agreed. Again, this was in the (poorly conveyed) context of getting email
>>> addresses for them, or at least being able to contact them.
>>>
>>> Eric
>>>
>>> _______________________________________________
>>> python-committers mailing list
>>> python-committers at python.org
>>> https://mail.python.org/mailman/listinfo/python-committers
>>> Code of Conduct: https://www.python.org/psf/codeofconduct/
>>>
>>
>> _______________________________________________
>> python-committers mailing list
>> python-committers at python.org
>> https://mail.python.org/mailman/listinfo/python-committers
>> Code of Conduct: https://www.python.org/psf/codeofconduct/
>>
> 
> 
> 
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
> 

-- 
Marc-Andre Lemburg
eGenix.com

Professional Python Services directly from the Experts (#1, Aug 03 2018)
>>> Python Projects, Coaching and Consulting ...  http://www.egenix.com/
>>> Python Database Interfaces ...           http://products.egenix.com/
>>> Plone/Zope Database Interfaces ...           http://zope.egenix.com/
________________________________________________________________________

::: We implement business ideas - efficiently in both time and costs :::

   eGenix.com Software, Skills and Services GmbH  Pastor-Loeh-Str.48
    D-40764 Langenfeld, Germany. CEO Dipl.-Math. Marc-Andre Lemburg
           Registered at Amtsgericht Duesseldorf: HRB 46611
               http://www.egenix.com/company/contact/
                      http://www.malemburg.com/


From donald at stufft.io  Fri Aug  3 03:44:52 2018
From: donald at stufft.io (Donald Stufft)
Date: Fri, 3 Aug 2018 03:44:52 -0400
Subject: [python-committers] List of all core developers
In-Reply-To: <1a428790-8ede-3b78-e5bb-09029189876b@egenix.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>
 <CALFfu7DzkfpASsRxxYVHamy4y+Ais7gkQGdQ3yZn9rReOcykHA@mail.gmail.com>
 <CAGbohnZ=rncDghn8rM9J+R2qMuO5ig-7_WwArwaY0gRchJ5i=w@mail.gmail.com>
 <51741053-7e32-5ea2-1d18-b2ca711dda9e@trueblade.com>
 <1fe758c6-01c7-9654-60c7-2ad9c5ec81f2@egenix.com>
 <e5d2e239-bedf-1adc-5978-4bfa0600bf3c@trueblade.com>
 <CACQYzFKARJhNVOMVOpSxPFuY5iM=8dHOPn7_xCDFvV6fwp+5xQ@mail.gmail.com>
 <CAP1=2W5Vs5T4H7Nm0NayQQFGiq7yAX9Pk7XdX6k_Z28P3XxL2A@mail.gmail.com>
 <1a428790-8ede-3b78-e5bb-09029189876b@egenix.com>
Message-ID: <98343B2C-4F8C-4E78-9904-0686C78ABE5B@stufft.io>

We should probably have a single source of truth for what a core developer is, and all other systems pull from that.

> On Aug 3, 2018, at 3:43 AM, M.-A. Lemburg <mal at egenix.com> wrote:
> 
> Please note that the motivation for having a list similar to the
> one we have for PSF Fellows is not to determine voting eligibility.
> 
> This is about having a record of the core developer status available
> to show to 3rd parties, e.g. to (potential) employers, organizations,
> government agencies, etc.
> 
> Having a place to also record the email addresses for internal
> use such a voting or sending messages to the whole group
> is a good idea nonetheless. This mailing list will likely already
> serve that purpose.
> 
> 
> On 02.08.2018 23:25, Brett Cannon wrote:
>> On Thu, 2 Aug 2018 at 04:54 Stefan Richthofer <stefan.richthofer at gmail.com>
>> wrote:
>> 
>>> Again, this was in the (poorly conveyed) context of getting email
>>>> addresses for them, or at least being able to contact them.
>>>> 
>>> 
>>> I always thought there were already at least three places containing the
>>> necessary email addresses.
>>> 
>>> * python-committers should be exactly this mailing list.
>>> 
>> 
>> The list also has email archiving services as well as duplicate emails for
>> people (e.g. I'm in it twice so that if I accidentally send an email from a
>> personal email address it doesn't get held up in moderation).
>> 
>> 
>>> * according to https://devguide.python.org/coredev/#issue-tracker it is
>>> mandatory for core developers to subscribe to the issue tracker which AFAIK
>>> requires a confirmed email address.
>>> 
>> * Every committer clearly must have signed the contributor agreement
>>> https://www.python.org/psf/contrib/contrib-form/ which also contains a
>>> mandatory email field
>>> 
>>> So why is it still necessary to get email addresses at all?
>>> 
>> 
>> Because none of those necessarily have accurate email addresses at this
>> point. E.g. even python-committers has had people dropped off due to too
>> many email rejections. And if we hold a vote for a governance model we will
>> need a place to send ballots.
>> 
>> Now if the vote is open to any core developer (using MAL's definition of it
>> being a lifetime title), then the subscription list for this mailing list
>> is probably good enough with some manual grooming as long we are okay with
>> long-dormant folk who predate this list not voting (which I'm personally
>> fine with). But if we wanted a way to reach just people with commit
>> privileges then that's a separate challenge.
>> 
>> -Brett
>> 
>> 
>>> 
>>> 2018-08-02 10:59 GMT+02:00 Eric V. Smith <eric at trueblade.com>:
>>> 
>>>> On 8/2/2018 3:32 AM, M.-A. Lemburg wrote:
>>>> 
>>>>> On 02.08.2018 03:24, Eric V. Smith wrote:
>>>>> 
>>>>>> On 8/1/2018 8:32 PM, Mariatta Wijaya wrote:
>>>>>> 
>>>>>>>     I think it would also be a good idea to include core developers
>>>>>>>     of other Python implementations in such a document, in
>>>>>>>     separate sections, e.g. for Jython, IronPython, PyPy,
>>>>>>>     Stackless, etc
>>>>>>> 
>>>>>>> 
>>>>>>> Hmm, I don't think it is should be our (CPython) responsibility to
>>>>>>> keep track and maintain the list of the core devs of alternate Python
>>>>>>> implementations. Don't they have their own community / website? They
>>>>>>> have their own repo, bug tracker, governance model, and everything,
>>>>>>> right?
>>>>>>> 
>>>>>> 
>>>>>> Agreed. We have a hard enough time keeping track of our own core
>>>>>> developers.
>>>>>> 
>>>>> 
>>>>> I don't really think we have a hard time doing this. The only
>>>>> problem is that we never sat down and actually properly recorded
>>>>> this in one place.
>>>>> 
>>>> 
>>>> I was specifically thinking of a way to stay in touch with core devs, or
>>>> more specifically a way to send them email. In the past, before we moved to
>>>> github, I took it upon myself to find email addresses (current or not) for
>>>> all core devs, and I gave up without much success.
>>>> 
>>>> I agree that we could probably come up with a list of names for people
>>>> who have been given the "core dev" status.
>>>> 
>>>> For our core devs, can't we just say that the CPython core devs are
>>>>>> those with commit bits on the CPython repo? I realize that will
>>>>>> eliminate some people who have been core developers and never moved to
>>>>>> github, but if they bring it to our attention, we can add them easily
>>>>>> enough.
>>>>>> 
>>>>> As discussed before, being a core developer is a status you
>>>>> gain and never lose. There is a clear difference between have
>>>>> commit rights to the (current) repo and this status.
>>>>> 
>>>> 
>>>> Agreed. Again, this was in the (poorly conveyed) context of getting email
>>>> addresses for them, or at least being able to contact them.
>>>> 
>>>> Eric
>>>> 
>>>> _______________________________________________
>>>> python-committers mailing list
>>>> python-committers at python.org
>>>> https://mail.python.org/mailman/listinfo/python-committers
>>>> Code of Conduct: https://www.python.org/psf/codeofconduct/
>>>> 
>>> 
>>> _______________________________________________
>>> python-committers mailing list
>>> python-committers at python.org
>>> https://mail.python.org/mailman/listinfo/python-committers
>>> Code of Conduct: https://www.python.org/psf/codeofconduct/
>>> 
>> 
>> 
>> 
>> _______________________________________________
>> python-committers mailing list
>> python-committers at python.org
>> https://mail.python.org/mailman/listinfo/python-committers
>> Code of Conduct: https://www.python.org/psf/codeofconduct/
>> 
> 
> -- 
> Marc-Andre Lemburg
> eGenix.com
> 
> Professional Python Services directly from the Experts (#1, Aug 03 2018)
>>>> Python Projects, Coaching and Consulting ...  http://www.egenix.com/
>>>> Python Database Interfaces ...           http://products.egenix.com/
>>>> Plone/Zope Database Interfaces ...           http://zope.egenix.com/
> ________________________________________________________________________
> 
> ::: We implement business ideas - efficiently in both time and costs :::
> 
>   eGenix.com Software, Skills and Services GmbH  Pastor-Loeh-Str.48
>    D-40764 Langenfeld, Germany. CEO Dipl.-Math. Marc-Andre Lemburg
>           Registered at Amtsgericht Duesseldorf: HRB 46611
>               http://www.egenix.com/company/contact/
>                      http://www.malemburg.com/
> 
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/


From Jack.Jansen at cwi.nl  Fri Aug  3 05:05:54 2018
From: Jack.Jansen at cwi.nl (Jack Jansen)
Date: Fri, 3 Aug 2018 11:05:54 +0200
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <CA+St6D3AtqeKDeMAoiWdv32c7ivWcjpmJaGU28sXQy8BfJm=Aw@mail.gmail.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
 <FF275DEC-C900-4484-A87B-FDDF423CF490@cwi.nl>
 <CA+St6D3AtqeKDeMAoiWdv32c7ivWcjpmJaGU28sXQy8BfJm=Aw@mail.gmail.com>
Message-ID: <C73B1EC4-7A7D-45F4-94AA-57E7782F0B3D@cwi.nl>


> On Aug 3, 2018, at 02:19, Yury Selivanov <yselivanov.ml at gmail.com> wrote:
> 
> OTOH, it would be great if we can at least set a date to start the
> discussion so that everybody can plan for it and join.  That's the
> only way to keep the discussion open and equally accessible for
> everyone.  If we do nothing, then naturally, those core devs who know
> each other personally will start forming their opinion in isolated
> groups. Many people will feel that they are completely removed from
> the decision process and will end up in a very uncomfortable position.

Hmm, you?re right. Not having any sort of timeline or process will mean that lots of stakeholders will not know about any discussions and feel left out by the end.

Some sort of a schedule would ameliorate that.

Jack

From brett at python.org  Fri Aug  3 13:52:01 2018
From: brett at python.org (Brett Cannon)
Date: Fri, 3 Aug 2018 10:52:01 -0700
Subject: [python-committers] List of all core developers
In-Reply-To: <98343B2C-4F8C-4E78-9904-0686C78ABE5B@stufft.io>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>
 <CALFfu7DzkfpASsRxxYVHamy4y+Ais7gkQGdQ3yZn9rReOcykHA@mail.gmail.com>
 <CAGbohnZ=rncDghn8rM9J+R2qMuO5ig-7_WwArwaY0gRchJ5i=w@mail.gmail.com>
 <51741053-7e32-5ea2-1d18-b2ca711dda9e@trueblade.com>
 <1fe758c6-01c7-9654-60c7-2ad9c5ec81f2@egenix.com>
 <e5d2e239-bedf-1adc-5978-4bfa0600bf3c@trueblade.com>
 <CACQYzFKARJhNVOMVOpSxPFuY5iM=8dHOPn7_xCDFvV6fwp+5xQ@mail.gmail.com>
 <CAP1=2W5Vs5T4H7Nm0NayQQFGiq7yAX9Pk7XdX6k_Z28P3XxL2A@mail.gmail.com>
 <1a428790-8ede-3b78-e5bb-09029189876b@egenix.com>
 <98343B2C-4F8C-4E78-9904-0686C78ABE5B@stufft.io>
Message-ID: <CAP1=2W4z87J64N8FrpYi0qr2uC7T1UBAegNfaV0aHiU0TVfv6A@mail.gmail.com>

On Fri, 3 Aug 2018 at 00:44 Donald Stufft <donald at stufft.io> wrote:

> We should probably have a single source of truth for what a core developer
> is, and all other systems pull from that.
>

Ah, but I think there might be a terminology clash here. Using MALs
definition means that you can be a core developer but not have commit
privileges due to relinquishing those privileges at some point. So I'm not
sure what systems you are referring to that need to know if someone
historically happened to be a core developer.

Assuming what you mean is people with commit privileges, then we have the
"lovely" complication of usernames being inconsistent for people across
systems which is probably what is required to make any centralized list
useful for systems to interact with. We could solve this by using a table
instead of a list for people to list e.g. their GitHub and b.p.o usernames
if people wanted to go that route.


>
> > On Aug 3, 2018, at 3:43 AM, M.-A. Lemburg <mal at egenix.com> wrote:
> >
> > Please note that the motivation for having a list similar to the
> > one we have for PSF Fellows is not to determine voting eligibility.
> >
> > This is about having a record of the core developer status available
> > to show to 3rd parties, e.g. to (potential) employers, organizations,
> > government agencies, etc.
> >
> > Having a place to also record the email addresses for internal
> > use such a voting or sending messages to the whole group
> > is a good idea nonetheless. This mailing list will likely already
> > serve that purpose.
> >
> >
> > On 02.08.2018 23:25, Brett Cannon wrote:
> >> On Thu, 2 Aug 2018 at 04:54 Stefan Richthofer <
> stefan.richthofer at gmail.com>
> >> wrote:
> >>
> >>> Again, this was in the (poorly conveyed) context of getting email
> >>>> addresses for them, or at least being able to contact them.
> >>>>
> >>>
> >>> I always thought there were already at least three places containing
> the
> >>> necessary email addresses.
> >>>
> >>> * python-committers should be exactly this mailing list.
> >>>
> >>
> >> The list also has email archiving services as well as duplicate emails
> for
> >> people (e.g. I'm in it twice so that if I accidentally send an email
> from a
> >> personal email address it doesn't get held up in moderation).
> >>
> >>
> >>> * according to https://devguide.python.org/coredev/#issue-tracker it
> is
> >>> mandatory for core developers to subscribe to the issue tracker which
> AFAIK
> >>> requires a confirmed email address.
> >>>
> >> * Every committer clearly must have signed the contributor agreement
> >>> https://www.python.org/psf/contrib/contrib-form/ which also contains a
> >>> mandatory email field
> >>>
> >>> So why is it still necessary to get email addresses at all?
> >>>
> >>
> >> Because none of those necessarily have accurate email addresses at this
> >> point. E.g. even python-committers has had people dropped off due to too
> >> many email rejections. And if we hold a vote for a governance model we
> will
> >> need a place to send ballots.
> >>
> >> Now if the vote is open to any core developer (using MAL's definition
> of it
> >> being a lifetime title), then the subscription list for this mailing
> list
> >> is probably good enough with some manual grooming as long we are okay
> with
> >> long-dormant folk who predate this list not voting (which I'm personally
> >> fine with). But if we wanted a way to reach just people with commit
> >> privileges then that's a separate challenge.
> >>
> >> -Brett
> >>
> >>
> >>>
> >>> 2018-08-02 10:59 GMT+02:00 Eric V. Smith <eric at trueblade.com>:
> >>>
> >>>> On 8/2/2018 3:32 AM, M.-A. Lemburg wrote:
> >>>>
> >>>>> On 02.08.2018 03:24, Eric V. Smith wrote:
> >>>>>
> >>>>>> On 8/1/2018 8:32 PM, Mariatta Wijaya wrote:
> >>>>>>
> >>>>>>>     I think it would also be a good idea to include core developers
> >>>>>>>     of other Python implementations in such a document, in
> >>>>>>>     separate sections, e.g. for Jython, IronPython, PyPy,
> >>>>>>>     Stackless, etc
> >>>>>>>
> >>>>>>>
> >>>>>>> Hmm, I don't think it is should be our (CPython) responsibility to
> >>>>>>> keep track and maintain the list of the core devs of alternate
> Python
> >>>>>>> implementations. Don't they have their own community / website?
> They
> >>>>>>> have their own repo, bug tracker, governance model, and everything,
> >>>>>>> right?
> >>>>>>>
> >>>>>>
> >>>>>> Agreed. We have a hard enough time keeping track of our own core
> >>>>>> developers.
> >>>>>>
> >>>>>
> >>>>> I don't really think we have a hard time doing this. The only
> >>>>> problem is that we never sat down and actually properly recorded
> >>>>> this in one place.
> >>>>>
> >>>>
> >>>> I was specifically thinking of a way to stay in touch with core devs,
> or
> >>>> more specifically a way to send them email. In the past, before we
> moved to
> >>>> github, I took it upon myself to find email addresses (current or
> not) for
> >>>> all core devs, and I gave up without much success.
> >>>>
> >>>> I agree that we could probably come up with a list of names for people
> >>>> who have been given the "core dev" status.
> >>>>
> >>>> For our core devs, can't we just say that the CPython core devs are
> >>>>>> those with commit bits on the CPython repo? I realize that will
> >>>>>> eliminate some people who have been core developers and never moved
> to
> >>>>>> github, but if they bring it to our attention, we can add them
> easily
> >>>>>> enough.
> >>>>>>
> >>>>> As discussed before, being a core developer is a status you
> >>>>> gain and never lose. There is a clear difference between have
> >>>>> commit rights to the (current) repo and this status.
> >>>>>
> >>>>
> >>>> Agreed. Again, this was in the (poorly conveyed) context of getting
> email
> >>>> addresses for them, or at least being able to contact them.
> >>>>
> >>>> Eric
> >>>>
> >>>> _______________________________________________
> >>>> python-committers mailing list
> >>>> python-committers at python.org
> >>>> https://mail.python.org/mailman/listinfo/python-committers
> >>>> Code of Conduct: https://www.python.org/psf/codeofconduct/
> >>>>
> >>>
> >>> _______________________________________________
> >>> python-committers mailing list
> >>> python-committers at python.org
> >>> https://mail.python.org/mailman/listinfo/python-committers
> >>> Code of Conduct: https://www.python.org/psf/codeofconduct/
> >>>
> >>
> >>
> >>
> >> _______________________________________________
> >> python-committers mailing list
> >> python-committers at python.org
> >> https://mail.python.org/mailman/listinfo/python-committers
> >> Code of Conduct: https://www.python.org/psf/codeofconduct/
> >>
> >
> > --
> > Marc-Andre Lemburg
> > eGenix.com
> >
> > Professional Python Services directly from the Experts (#1, Aug 03 2018)
> >>>> Python Projects, Coaching and Consulting ...  http://www.egenix.com/
> >>>> Python Database Interfaces ...           http://products.egenix.com/
> >>>> Plone/Zope Database Interfaces ...           http://zope.egenix.com/
> > ________________________________________________________________________
> >
> > ::: We implement business ideas - efficiently in both time and costs :::
> >
> >   eGenix.com Software, Skills and Services GmbH  Pastor-Loeh-Str.48
> >    D-40764 Langenfeld, Germany. CEO Dipl.-Math. Marc-Andre Lemburg
> >           Registered at Amtsgericht Duesseldorf: HRB 46611
> >               http://www.egenix.com/company/contact/
> >                      http://www.malemburg.com/
> >
> > _______________________________________________
> > python-committers mailing list
> > python-committers at python.org
> > https://mail.python.org/mailman/listinfo/python-committers
> > Code of Conduct: https://www.python.org/psf/codeofconduct/
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180803/5b84a492/attachment.html>

From barry at python.org  Fri Aug  3 18:53:01 2018
From: barry at python.org (Barry Warsaw)
Date: Fri, 3 Aug 2018 15:53:01 -0700
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
Message-ID: <2DF19D32-BE03-4813-94B3-30D20B0A7DCC@python.org>

On Aug 1, 2018, at 12:41, Mariatta Wijaya <mariatta.wijaya at gmail.com> wrote:
> 
> Since this is like a CFP I figured we should clarify what's expected the proposal, and I also wanted to be more detailed in the timeline.
> 
> Oct 1 00:00:00 UTC: Deadline of coming up with proposals of governance model.

Thanks for writing this up Mariatta.  I think it?s very useful to put stakes in the ground so that these discussions don?t drag on forever.  I agree with those who say that the status quo is an implicit choice of governance models, and I think we shouldn?t operate under implicit rules for too long.  Like Brett, I often have folks coming up to me and asking me what?s going on, and when Python will decide on a governance model.  Let?s not underestimate the message this sends to the outside world.

OTOH, we do have some flexibility in the timeline, and I still believe that we have flexibility in the governance model over the long term.  I?ve no doubt that no matter what we choose, the debate will continue, with ebbs and flows as situations arise.  That may even lead to new (or adjusted) governance models in the future, and that?s fine!  Unlike with Python itself, we aren?t bound to strict backward compatibility. :)

That said, I think it?s worthwhile capturing the proposed governance models in PEPs so that we all know exactly what we?re debating.  October 1st for that round of PEP submissions is quite reasonable IMHO.  Procedurally, I suggest we segregate governance model PEPs in their own 4th digit namespace (e.g. like the way Python 3k started at the 3000s).  8 seems like a good number; we reserve the lower 8ks for ?special? PEPs (the problem statement, the choice, the voting procedure, etc.).

We can be a little more loose on the voting schedule, but like Brett, I would like to have a decision by the end of 2018, even if that decision is an explicit choice of status quo.

Cheers,
-Barry

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180803/d01105f4/attachment-0001.sig>

From donald at stufft.io  Sat Aug  4 00:59:21 2018
From: donald at stufft.io (Donald Stufft)
Date: Sat, 4 Aug 2018 00:59:21 -0400
Subject: [python-committers] List of all core developers
In-Reply-To: <CAP1=2W4z87J64N8FrpYi0qr2uC7T1UBAegNfaV0aHiU0TVfv6A@mail.gmail.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>
 <CALFfu7DzkfpASsRxxYVHamy4y+Ais7gkQGdQ3yZn9rReOcykHA@mail.gmail.com>
 <CAGbohnZ=rncDghn8rM9J+R2qMuO5ig-7_WwArwaY0gRchJ5i=w@mail.gmail.com>
 <51741053-7e32-5ea2-1d18-b2ca711dda9e@trueblade.com>
 <1fe758c6-01c7-9654-60c7-2ad9c5ec81f2@egenix.com>
 <e5d2e239-bedf-1adc-5978-4bfa0600bf3c@trueblade.com>
 <CACQYzFKARJhNVOMVOpSxPFuY5iM=8dHOPn7_xCDFvV6fwp+5xQ@mail.gmail.com>
 <CAP1=2W5Vs5T4H7Nm0NayQQFGiq7yAX9Pk7XdX6k_Z28P3XxL2A@mail.gmail.com>
 <1a428790-8ede-3b78-e5bb-09029189876b@egenix.com>
 <98343B2C-4F8C-4E78-9904-0686C78ABE5B@stufft.io>
 <CAP1=2W4z87J64N8FrpYi0qr2uC7T1UBAegNfaV0aHiU0TVfv6A@mail.gmail.com>
Message-ID: <83BE7121-7C6E-4AD4-ADAA-6F368EA900FA@stufft.io>



> On Aug 3, 2018, at 1:52 PM, Brett Cannon <brett at python.org> wrote:
> 
> 
> 
> On Fri, 3 Aug 2018 at 00:44 Donald Stufft <donald at stufft.io <mailto:donald at stufft.io>> wrote:
> We should probably have a single source of truth for what a core developer is, and all other systems pull from that.
> 
> Ah, but I think there might be a terminology clash here. Using MALs definition means that you can be a core developer but not have commit privileges due to relinquishing those privileges at some point. So I'm not sure what systems you are referring to that need to know if someone historically happened to be a core developer.

We have that I am aware of right now:

- GitHub
- bugs.p.o
- python-committers

And it sounds like Marc-Andre is looking to add to it:

- A third party/user facing list of developers, regardless of the technical status of their ability to commit (e.g. even if they don?t have a GitHub account).


There may be other systems that I can?t recall off the top of my head (is anything still in hg.python.org <http://hg.python.org/>? I dunno).

As of right now, I believe the list of who a core developer is and has historically been somewhat adhoc based upon who has permissions to commit things. Meaning that as we transition from one system to another we ?lose? the ability to account for people over the years. This would also make it harder for someone to come back, because they?d have to track down someone who knew they were a core developer (and let?s be honest, human memory sucks so sometimes you?re just not sure if someone was or wasn?t).

So I think it would probably be a good thing if we had one central location that answers the question of who is and isn?t a core developer, that isn?t tied to the ACLs of one particular system that we happen to be using today. Ideally these other related systems (bugs.p.o, Github, etc) are then modified to pull from this thing as the singular source of truth. This could be as simple as a CSV/tom/yaml file sitting in a repository somewhere that lists all of the developers, their status etc, plus scripts that will synchronize access from that to the relevant places.

So for arguments sake, it could be a CSV file with the schema:

Name, Email, Active, bugs.p.o Username, GitHub username

And then a script that could be ran whenever that would check the permissions of the GitHub team for CPython, and ensure that anyone listed there has been added to the GitHub team (and probably anyone who isn?t, has been removed, to ensure that getting in this file is the _way_ you get access). Likewise bugs.p.o could pull from this, and Marc-Andre?s public facing list could as well.

Of course we can get fancier than a simple file somewhere, the key thing is that there is a single source of truth, that isn?t tied to one particular service or tool that we use (unless that tool is dedicated to managing this list of people), because anytime we tie maintaining this list of people to the technical aspects of giving someone an ACL to a particular system, then our list is going to become outdated anytime we switch systems (and some % of people won?t ever make the jump to the new system).

> 
> Assuming what you mean is people with commit privileges, then we have the "lovely" complication of usernames being inconsistent for people across systems which is probably what is required to make any centralized list useful for systems to interact with. We could solve this by using a table instead of a list for people to list e.g. their GitHub and b.p.o usernames if people wanted to go that route.
>  
> 
> > On Aug 3, 2018, at 3:43 AM, M.-A. Lemburg <mal at egenix.com <mailto:mal at egenix.com>> wrote:
> > 
> > Please note that the motivation for having a list similar to the
> > one we have for PSF Fellows is not to determine voting eligibility.
> > 
> > This is about having a record of the core developer status available
> > to show to 3rd parties, e.g. to (potential) employers, organizations,
> > government agencies, etc.
> > 
> > Having a place to also record the email addresses for internal
> > use such a voting or sending messages to the whole group
> > is a good idea nonetheless. This mailing list will likely already
> > serve that purpose.
> > 
> > 
> > On 02.08.2018 23:25, Brett Cannon wrote:
> >> On Thu, 2 Aug 2018 at 04:54 Stefan Richthofer <stefan.richthofer at gmail.com <mailto:stefan.richthofer at gmail.com>>
> >> wrote:
> >> 
> >>> Again, this was in the (poorly conveyed) context of getting email
> >>>> addresses for them, or at least being able to contact them.
> >>>> 
> >>> 
> >>> I always thought there were already at least three places containing the
> >>> necessary email addresses.
> >>> 
> >>> * python-committers should be exactly this mailing list.
> >>> 
> >> 
> >> The list also has email archiving services as well as duplicate emails for
> >> people (e.g. I'm in it twice so that if I accidentally send an email from a
> >> personal email address it doesn't get held up in moderation).
> >> 
> >> 
> >>> * according to https://devguide.python.org/coredev/#issue-tracker <https://devguide.python.org/coredev/#issue-tracker> it is
> >>> mandatory for core developers to subscribe to the issue tracker which AFAIK
> >>> requires a confirmed email address.
> >>> 
> >> * Every committer clearly must have signed the contributor agreement
> >>> https://www.python.org/psf/contrib/contrib-form/ <https://www.python.org/psf/contrib/contrib-form/> which also contains a
> >>> mandatory email field
> >>> 
> >>> So why is it still necessary to get email addresses at all?
> >>> 
> >> 
> >> Because none of those necessarily have accurate email addresses at this
> >> point. E.g. even python-committers has had people dropped off due to too
> >> many email rejections. And if we hold a vote for a governance model we will
> >> need a place to send ballots.
> >> 
> >> Now if the vote is open to any core developer (using MAL's definition of it
> >> being a lifetime title), then the subscription list for this mailing list
> >> is probably good enough with some manual grooming as long we are okay with
> >> long-dormant folk who predate this list not voting (which I'm personally
> >> fine with). But if we wanted a way to reach just people with commit
> >> privileges then that's a separate challenge.
> >> 
> >> -Brett
> >> 
> >> 
> >>> 
> >>> 2018-08-02 10:59 GMT+02:00 Eric V. Smith <eric at trueblade.com <mailto:eric at trueblade.com>>:
> >>> 
> >>>> On 8/2/2018 3:32 AM, M.-A. Lemburg wrote:
> >>>> 
> >>>>> On 02.08.2018 03:24, Eric V. Smith wrote:
> >>>>> 
> >>>>>> On 8/1/2018 8:32 PM, Mariatta Wijaya wrote:
> >>>>>> 
> >>>>>>>     I think it would also be a good idea to include core developers
> >>>>>>>     of other Python implementations in such a document, in
> >>>>>>>     separate sections, e.g. for Jython, IronPython, PyPy,
> >>>>>>>     Stackless, etc
> >>>>>>> 
> >>>>>>> 
> >>>>>>> Hmm, I don't think it is should be our (CPython) responsibility to
> >>>>>>> keep track and maintain the list of the core devs of alternate Python
> >>>>>>> implementations. Don't they have their own community / website? They
> >>>>>>> have their own repo, bug tracker, governance model, and everything,
> >>>>>>> right?
> >>>>>>> 
> >>>>>> 
> >>>>>> Agreed. We have a hard enough time keeping track of our own core
> >>>>>> developers.
> >>>>>> 
> >>>>> 
> >>>>> I don't really think we have a hard time doing this. The only
> >>>>> problem is that we never sat down and actually properly recorded
> >>>>> this in one place.
> >>>>> 
> >>>> 
> >>>> I was specifically thinking of a way to stay in touch with core devs, or
> >>>> more specifically a way to send them email. In the past, before we moved to
> >>>> github, I took it upon myself to find email addresses (current or not) for
> >>>> all core devs, and I gave up without much success.
> >>>> 
> >>>> I agree that we could probably come up with a list of names for people
> >>>> who have been given the "core dev" status.
> >>>> 
> >>>> For our core devs, can't we just say that the CPython core devs are
> >>>>>> those with commit bits on the CPython repo? I realize that will
> >>>>>> eliminate some people who have been core developers and never moved to
> >>>>>> github, but if they bring it to our attention, we can add them easily
> >>>>>> enough.
> >>>>>> 
> >>>>> As discussed before, being a core developer is a status you
> >>>>> gain and never lose. There is a clear difference between have
> >>>>> commit rights to the (current) repo and this status.
> >>>>> 
> >>>> 
> >>>> Agreed. Again, this was in the (poorly conveyed) context of getting email
> >>>> addresses for them, or at least being able to contact them.
> >>>> 
> >>>> Eric
> >>>> 
> >>>> _______________________________________________
> >>>> python-committers mailing list
> >>>> python-committers at python.org <mailto:python-committers at python.org>
> >>>> https://mail.python.org/mailman/listinfo/python-committers <https://mail.python.org/mailman/listinfo/python-committers>
> >>>> Code of Conduct: https://www.python.org/psf/codeofconduct/ <https://www.python.org/psf/codeofconduct/>
> >>>> 
> >>> 
> >>> _______________________________________________
> >>> python-committers mailing list
> >>> python-committers at python.org <mailto:python-committers at python.org>
> >>> https://mail.python.org/mailman/listinfo/python-committers <https://mail.python.org/mailman/listinfo/python-committers>
> >>> Code of Conduct: https://www.python.org/psf/codeofconduct/ <https://www.python.org/psf/codeofconduct/>
> >>> 
> >> 
> >> 
> >> 
> >> _______________________________________________
> >> python-committers mailing list
> >> python-committers at python.org <mailto:python-committers at python.org>
> >> https://mail.python.org/mailman/listinfo/python-committers <https://mail.python.org/mailman/listinfo/python-committers>
> >> Code of Conduct: https://www.python.org/psf/codeofconduct/ <https://www.python.org/psf/codeofconduct/>
> >> 
> > 
> > -- 
> > Marc-Andre Lemburg
> > eGenix.com
> > 
> > Professional Python Services directly from the Experts (#1, Aug 03 2018)
> >>>> Python Projects, Coaching and Consulting ...  http://www.egenix.com/ <http://www.egenix.com/>
> >>>> Python Database Interfaces ...           http://products.egenix.com/ <http://products.egenix.com/>
> >>>> Plone/Zope Database Interfaces ...           http://zope.egenix.com/ <http://zope.egenix.com/>
> > ________________________________________________________________________
> > 
> > ::: We implement business ideas - efficiently in both time and costs :::
> > 
> >   eGenix.com Software, Skills and Services GmbH  Pastor-Loeh-Str.48
> >    D-40764 Langenfeld, Germany. CEO Dipl.-Math. Marc-Andre Lemburg
> >           Registered at Amtsgericht Duesseldorf: HRB 46611
> >               http://www.egenix.com/company/contact/ <http://www.egenix.com/company/contact/>
> >                      http://www.malemburg.com/ <http://www.malemburg.com/>
> > 
> > _______________________________________________
> > python-committers mailing list
> > python-committers at python.org <mailto:python-committers at python.org>
> > https://mail.python.org/mailman/listinfo/python-committers <https://mail.python.org/mailman/listinfo/python-committers>
> > Code of Conduct: https://www.python.org/psf/codeofconduct/ <https://www.python.org/psf/codeofconduct/>
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180804/ecf4ce69/attachment-0001.html>

From steve at pearwood.info  Sat Aug  4 05:36:12 2018
From: steve at pearwood.info (Steven D'Aprano)
Date: Sat, 4 Aug 2018 19:36:12 +1000
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <CACac1F94TGdV9zRxj-uFkivaOUV+r3o07k+Y-BmoF6p8SH-HTA@mail.gmail.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
 <CA+St6D0+HPez8qcyz-f8W3xAsX_rqUtijxNg_BSqrEmnZ4BCTA@mail.gmail.com>
 <CAGbohnZ-T3BjuxVJmiU9g07RBVzdTh5dwpH4KE=KVTXqUA=Ndw@mail.gmail.com>
 <CA+St6D2LgMEf0npKkj60ydBya2efXKMTjV7qVRDW6mmmFHDUDA@mail.gmail.com>
 <CAGbohnZsdS_=oHtTaUzrGXpNM6GLqVu_WK84xgNLqOOdKyasRA@mail.gmail.com>
 <20180802074949.GI22431@ando.pearwood.info>
 <CACac1F94TGdV9zRxj-uFkivaOUV+r3o07k+Y-BmoF6p8SH-HTA@mail.gmail.com>
Message-ID: <20180804093612.GT22431@ando.pearwood.info>

On Thu, Aug 02, 2018 at 09:22:44AM +0100, Paul Moore wrote:
> On Thu, 2 Aug 2018 at 08:50, Steven D'Aprano <steve at pearwood.info> wrote:
> 
> > Indeed. A hard deadline concentrates the mind. It doesn't need to be
> > tomorrow, I think your choosen dates are a great balance, neither too
> > quick nor too drawn out.
> 
> But it also encourages people (particularly people with limited free
> time) to rush decisions, and focus on "getting something done in
> time", rather than "doing the right thing". Balancing those two
> pressures is not easy, and the balance point varies significantly
> between individuals.

A proposal is not an agreement to accept that proposal. If people submit 
rushed, poor quality proposals, they will likely not be accepted. And if 
they are, we have nobody to blame but ourselves. Can't blame Facebook 
and fake news if we vote badly :-)

The longer we push out any such deadline, the more likely people will 
simply forget about it, or delay until the week before and then have to 
rush a poorly delivered proposal (or no proposal at all).


> > If Python is still rudderless by Christmas, I think we have failed.
> 
> Do you really consider Python "rudderless" at the moment?

*shrug* I'm not married to that specific word, but we have no BDFL and 
no mechanism in place for making big decisions about the language. What 
term would you use?

Certainly day to day development continues as normal. Bugs get fixed, 
minor releases get released, PRs get reviewed, etc. That's great and a 
credit to the core developers.

But this thread suggests that if we're not careful, we could get bogged 
down for many months just deciding on the mechanism we use to decide 
what to do next. That's why I like Mariatta's concrete proposal to set 
some firm dates for action.

In my opinion, if people can't find an hour or four to write up a 
concrete proposal for choosing a new Dictator/Despot/Council/whatever in 
eight weeks, they're not likely to find the time/motivation in eight 
months either.


> I honestly think that describing the current situation as "rudderless"
> and a "failure" if it carries on, is a pretty big exaggeration.

Christmas is almost five months away. Do you think that it is acceptable 
for such a small group as us to take five months and still not have 
decided on a new leadership model? That's a matter of personal opinion 
and I accept we can differ on tolerance for bikeshedding. How many 
months, or years, before you personally would call it a failure?

When Australia's prime minister disappeared, it took two days to swear 
in a replacement and less than a month to call a new election.

https://en.wikipedia.org/wiki/Harold_Holt#Disappearance

Obviously the stakes are higher for national governments, we can afford 
to be more leisurely about the process, but I don't think we should let 
it drag on and on. I think that Christmas is more than sufficient. If 
you don't, how long do you feel will be? This isn't a rhetorical 
question. I'm not wedded to this time frame -- if you think we need six 
months, I'm listening. If you think we need six years, forget it :-)

It's been three weeks since Guido's retirement, approaching a month. We 
agree that we need some sort of leadership model, and we know that 
there's a risk of the process devolving into endless argument with no 
progress, or just fading away into inactivity, unless managed. In my 
opinion agreeing on concrete deadlines, not too rushed but certainly not 
too far away either, is a good first step at managing this.


-- 
Steve

From steve.dower at python.org  Sat Aug  4 12:19:44 2018
From: steve.dower at python.org (Steve Dower)
Date: Sat, 4 Aug 2018 17:19:44 +0100
Subject: [python-committers] View logs on VSTS?
In-Reply-To: <CA+3bQGHbt5HkmybZdzxnKtQ3TOEY_mgqb1gQxGHkYZEeniS+Bw@mail.gmail.com>
References: <245748ea-3eaa-d434-13e7-04a91238049e@python.org>
 <CA+3bQGHbt5HkmybZdzxnKtQ3TOEY_mgqb1gQxGHkYZEeniS+Bw@mail.gmail.com>
Message-ID: <mailman.113.1533399586.2858.python-committers@python.org>

That looks unrelated.

In this case I?m guessing the test run timed out and Ctrl+C failed to terminate it. For some reason when that happens the logs for the item that timed out are not shown, I'd guess because the item is marked ?Timeout? rather than ?Failed?.

Do you see the ?download logs? button? And does that contain the logs? It?s a pain, but totally locked up tests like that should be rare?

Top-posted from my Windows 10 phone

From: Victor Stinner
Sent: Thursday, 2 August 2018 10:03
To: Antoine Pitrou
Cc: python-committers
Subject: Re: [python-committers] View logs on VSTS?

Hi,

The error may be related to https://bugs.python.org/issue33782

I understood that VSTS has troubles when a PR gets a new commit while
VSTS is running tests on the previous commit.

Victor

2018-08-02 0:00 GMT+02:00 Antoine Pitrou <antoine at python.org>:
>
> Hello,
>
> I may be missing something, but I fail to view the "tests" log in this
> failed CI build:
> https://python.visualstudio.com/cpython/_build/results?buildId=20701&view=logs
>
> Regards
>
> Antoine.
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
_______________________________________________
python-committers mailing list
python-committers at python.org
https://mail.python.org/mailman/listinfo/python-committers
Code of Conduct: https://www.python.org/psf/codeofconduct/

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180804/02f04522/attachment.html>

From brett at python.org  Sat Aug  4 12:51:48 2018
From: brett at python.org (Brett Cannon)
Date: Sat, 4 Aug 2018 09:51:48 -0700
Subject: [python-committers] List of all core developers
In-Reply-To: <83BE7121-7C6E-4AD4-ADAA-6F368EA900FA@stufft.io>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>
 <CALFfu7DzkfpASsRxxYVHamy4y+Ais7gkQGdQ3yZn9rReOcykHA@mail.gmail.com>
 <CAGbohnZ=rncDghn8rM9J+R2qMuO5ig-7_WwArwaY0gRchJ5i=w@mail.gmail.com>
 <51741053-7e32-5ea2-1d18-b2ca711dda9e@trueblade.com>
 <1fe758c6-01c7-9654-60c7-2ad9c5ec81f2@egenix.com>
 <e5d2e239-bedf-1adc-5978-4bfa0600bf3c@trueblade.com>
 <CACQYzFKARJhNVOMVOpSxPFuY5iM=8dHOPn7_xCDFvV6fwp+5xQ@mail.gmail.com>
 <CAP1=2W5Vs5T4H7Nm0NayQQFGiq7yAX9Pk7XdX6k_Z28P3XxL2A@mail.gmail.com>
 <1a428790-8ede-3b78-e5bb-09029189876b@egenix.com>
 <98343B2C-4F8C-4E78-9904-0686C78ABE5B@stufft.io>
 <CAP1=2W4z87J64N8FrpYi0qr2uC7T1UBAegNfaV0aHiU0TVfv6A@mail.gmail.com>
 <83BE7121-7C6E-4AD4-ADAA-6F368EA900FA@stufft.io>
Message-ID: <CAP1=2W5JQNwrZpPVMJLaxs=Yo0rhXbojVXxS=rcGSWPn=LvK_A@mail.gmail.com>

On Fri, Aug 3, 2018, 21:59 Donald Stufft, <donald at stufft.io> wrote:

>
>
> On Aug 3, 2018, at 1:52 PM, Brett Cannon <brett at python.org> wrote:
>
>
>
> On Fri, 3 Aug 2018 at 00:44 Donald Stufft <donald at stufft.io> wrote:
>
>> We should probably have a single source of truth for what a core
>> developer is, and all other systems pull from that.
>>
>
> Ah, but I think there might be a terminology clash here. Using MALs
> definition means that you can be a core developer but not have commit
> privileges due to relinquishing those privileges at some point. So I'm not
> sure what systems you are referring to that need to know if someone
> historically happened to be a core developer.
>
>
> We have that I am aware of right now:
>
> - GitHub
> - bugs.p.o
> - python-committers
>
> And it sounds like Marc-Andre is looking to add to it:
>
> - A third party/user facing list of developers, regardless of the
> technical status of their ability to commit (e.g. even if they don?t have a
> GitHub account).
>
>
> There may be other systems that I can?t recall off the top of my head (is
> anything still in hg.python.org? I dunno).
>

For us, hg.python.org only has the b.p.o code.


> As of right now, I believe the list of who a core developer is and has
> historically been somewhat adhoc based upon who has permissions to commit
> things.
>

Yep.

Meaning that as we transition from one system to another we ?lose? the
> ability to account for people over the years. This would also make it
> harder for someone to come back, because they?d have to track down someone
> who knew they were a core developer (and let?s be honest, human memory
> sucks so sometimes you?re just not sure if someone was or wasn?t).
>

Yes, us old-timers aren't perfect. ? If someone couldn't remember we would
probably go into the mailing list archives.



> So I think it would probably be a good thing if we had one central
> location that answers the question of who is and isn?t a core developer,
> that isn?t tied to the ACLs of one particular system that we happen to be
> using today. Ideally these other related systems (bugs.p.o, Github, etc)
> are then modified to pull from this thing as the singular source of truth.
> This could be as simple as a CSV/tom/yaml file sitting in a repository
> somewhere that lists all of the developers, their status etc, plus scripts
> that will synchronize access from that to the relevant places.
>

It would probably sit in the devguide. The question is how to potentially
display this in a readable format? Or maybe we don't care as long as we use
a format that makes both humans and computers happy? Otherwise we would
have to add a build step to the site. (Personally I say we do it in TOML
since it's readable and can still be writable through the GitHub web UI
since I am typically the person adding new folks ?; we can then just link
to it for people to peruse.)


> So for arguments sake, it could be a CSV file with the schema:
>
> Name, Email, Active, bugs.p.o Username, GitHub username
>

I would toss into the year joined. I know over in the GitHub issue about
this topic that people also don't want to lose mentor/voucher/proposer and
any notes about why the person got their commit privileges.


> And then a script that could be ran whenever that would check the
> permissions of the GitHub team for CPython, and ensure that anyone listed
> there has been added to the GitHub team (and probably anyone who isn?t, has
> been removed, to ensure that getting in this file is the _way_ you get
> access). Likewise bugs.p.o could pull from this, and Marc-Andre?s public
> facing list could as well.
>
> Of course we can get fancier than a simple file somewhere, the key thing
> is that there is a single source of truth, that isn?t tied to one
> particular service or tool that we use (unless that tool is dedicated to
> managing this list of people), because anytime we tie maintaining this list
> of people to the technical aspects of giving someone an ACL to a particular
> system, then our list is going to become outdated anytime we switch systems
> (and some % of people won?t ever make the jump to the new system).
>
>
> Assuming what you mean is people with commit privileges, then we have the
> "lovely" complication of usernames being inconsistent for people across
> systems which is probably what is required to make any centralized list
> useful for systems to interact with. We could solve this by using a table
> instead of a list for people to list e.g. their GitHub and b.p.o usernames
> if people wanted to go that route.
>
>
>>
>> > On Aug 3, 2018, at 3:43 AM, M.-A. Lemburg <mal at egenix.com> wrote:
>> >
>> > Please note that the motivation for having a list similar to the
>> > one we have for PSF Fellows is not to determine voting eligibility.
>> >
>> > This is about having a record of the core developer status available
>> > to show to 3rd parties, e.g. to (potential) employers, organizations,
>> > government agencies, etc.
>> >
>> > Having a place to also record the email addresses for internal
>> > use such a voting or sending messages to the whole group
>> > is a good idea nonetheless. This mailing list will likely already
>> > serve that purpose.
>> >
>> >
>> > On 02.08.2018 23:25, Brett Cannon wrote:
>> >> On Thu, 2 Aug 2018 at 04:54 Stefan Richthofer <
>> stefan.richthofer at gmail.com>
>> >> wrote:
>> >>
>> >>> Again, this was in the (poorly conveyed) context of getting email
>> >>>> addresses for them, or at least being able to contact them.
>> >>>>
>> >>>
>> >>> I always thought there were already at least three places containing
>> the
>> >>> necessary email addresses.
>> >>>
>> >>> * python-committers should be exactly this mailing list.
>> >>>
>> >>
>> >> The list also has email archiving services as well as duplicate emails
>> for
>> >> people (e.g. I'm in it twice so that if I accidentally send an email
>> from a
>> >> personal email address it doesn't get held up in moderation).
>> >>
>> >>
>> >>> * according to https://devguide.python.org/coredev/#issue-tracker it
>> is
>> >>> mandatory for core developers to subscribe to the issue tracker which
>> AFAIK
>> >>> requires a confirmed email address.
>> >>>
>> >> * Every committer clearly must have signed the contributor agreement
>> >>> https://www.python.org/psf/contrib/contrib-form/ which also contains
>> a
>> >>> mandatory email field
>> >>>
>> >>> So why is it still necessary to get email addresses at all?
>> >>>
>> >>
>> >> Because none of those necessarily have accurate email addresses at this
>> >> point. E.g. even python-committers has had people dropped off due to
>> too
>> >> many email rejections. And if we hold a vote for a governance model we
>> will
>> >> need a place to send ballots.
>> >>
>> >> Now if the vote is open to any core developer (using MAL's definition
>> of it
>> >> being a lifetime title), then the subscription list for this mailing
>> list
>> >> is probably good enough with some manual grooming as long we are okay
>> with
>> >> long-dormant folk who predate this list not voting (which I'm
>> personally
>> >> fine with). But if we wanted a way to reach just people with commit
>> >> privileges then that's a separate challenge.
>> >>
>> >> -Brett
>> >>
>> >>
>> >>>
>> >>> 2018-08-02 10:59 GMT+02:00 Eric V. Smith <eric at trueblade.com>:
>> >>>
>> >>>> On 8/2/2018 3:32 AM, M.-A. Lemburg wrote:
>> >>>>
>> >>>>> On 02.08.2018 03:24, Eric V. Smith wrote:
>> >>>>>
>> >>>>>> On 8/1/2018 8:32 PM, Mariatta Wijaya wrote:
>> >>>>>>
>> >>>>>>>     I think it would also be a good idea to include core
>> developers
>> >>>>>>>     of other Python implementations in such a document, in
>> >>>>>>>     separate sections, e.g. for Jython, IronPython, PyPy,
>> >>>>>>>     Stackless, etc
>> >>>>>>>
>> >>>>>>>
>> >>>>>>> Hmm, I don't think it is should be our (CPython) responsibility to
>> >>>>>>> keep track and maintain the list of the core devs of alternate
>> Python
>> >>>>>>> implementations. Don't they have their own community / website?
>> They
>> >>>>>>> have their own repo, bug tracker, governance model, and
>> everything,
>> >>>>>>> right?
>> >>>>>>>
>> >>>>>>
>> >>>>>> Agreed. We have a hard enough time keeping track of our own core
>> >>>>>> developers.
>> >>>>>>
>> >>>>>
>> >>>>> I don't really think we have a hard time doing this. The only
>> >>>>> problem is that we never sat down and actually properly recorded
>> >>>>> this in one place.
>> >>>>>
>> >>>>
>> >>>> I was specifically thinking of a way to stay in touch with core
>> devs, or
>> >>>> more specifically a way to send them email. In the past, before we
>> moved to
>> >>>> github, I took it upon myself to find email addresses (current or
>> not) for
>> >>>> all core devs, and I gave up without much success.
>> >>>>
>> >>>> I agree that we could probably come up with a list of names for
>> people
>> >>>> who have been given the "core dev" status.
>> >>>>
>> >>>> For our core devs, can't we just say that the CPython core devs are
>> >>>>>> those with commit bits on the CPython repo? I realize that will
>> >>>>>> eliminate some people who have been core developers and never
>> moved to
>> >>>>>> github, but if they bring it to our attention, we can add them
>> easily
>> >>>>>> enough.
>> >>>>>>
>> >>>>> As discussed before, being a core developer is a status you
>> >>>>> gain and never lose. There is a clear difference between have
>> >>>>> commit rights to the (current) repo and this status.
>> >>>>>
>> >>>>
>> >>>> Agreed. Again, this was in the (poorly conveyed) context of getting
>> email
>> >>>> addresses for them, or at least being able to contact them.
>> >>>>
>> >>>> Eric
>> >>>>
>> >>>> _______________________________________________
>> >>>> python-committers mailing list
>> >>>> python-committers at python.org
>> >>>> https://mail.python.org/mailman/listinfo/python-committers
>> >>>> Code of Conduct: https://www.python.org/psf/codeofconduct/
>> >>>>
>> >>>
>> >>> _______________________________________________
>> >>> python-committers mailing list
>> >>> python-committers at python.org
>> >>> https://mail.python.org/mailman/listinfo/python-committers
>> >>> Code of Conduct: https://www.python.org/psf/codeofconduct/
>> >>>
>> >>
>> >>
>> >>
>> >> _______________________________________________
>> >> python-committers mailing list
>> >> python-committers at python.org
>> >> https://mail.python.org/mailman/listinfo/python-committers
>> >> Code of Conduct: https://www.python.org/psf/codeofconduct/
>> >>
>> >
>> > --
>> > Marc-Andre Lemburg
>> > eGenix.com
>> >
>> > Professional Python Services directly from the Experts (#1, Aug 03 2018)
>> >>>> Python Projects, Coaching and Consulting ...  http://www.egenix.com/
>> >>>> Python Database Interfaces ...           http://products.egenix.com/
>> >>>> Plone/Zope Database Interfaces ...           http://zope.egenix.com/
>> > ________________________________________________________________________
>> >
>> > ::: We implement business ideas - efficiently in both time and costs :::
>> >
>> >   eGenix.com Software, Skills and Services GmbH  Pastor-Loeh-Str.48
>> <https://maps.google.com/?q=Pastor-Loeh-Str.48+%0D%0A+D-40764+Langenfeld,+Germany&entry=gmail&source=g>
>>
>> <https://maps.google.com/?q=Pastor-Loeh-Str.48+%0D%0A+D-40764+Langenfeld,+Germany&entry=gmail&source=g>>
>>   D-40764 Langenfeld, Germany
>> <https://maps.google.com/?q=Pastor-Loeh-Str.48+%0D%0A+D-40764+Langenfeld,+Germany&entry=gmail&source=g>.
>> CEO Dipl.-Math. Marc-Andre Lemburg
>> >           Registered at Amtsgericht Duesseldorf: HRB 46611
>> >               http://www.egenix.com/company/contact/
>> >                      http://www.malemburg.com/
>> >
>> > _______________________________________________
>> > python-committers mailing list
>> > python-committers at python.org
>> > https://mail.python.org/mailman/listinfo/python-committers
>> > Code of Conduct: https://www.python.org/psf/codeofconduct/
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180804/e00c10b2/attachment-0001.html>

From donald at stufft.io  Sat Aug  4 16:21:05 2018
From: donald at stufft.io (Donald Stufft)
Date: Sat, 4 Aug 2018 16:21:05 -0400
Subject: [python-committers] List of all core developers
In-Reply-To: <CAP1=2W5JQNwrZpPVMJLaxs=Yo0rhXbojVXxS=rcGSWPn=LvK_A@mail.gmail.com>
References: <7c946b1c-6f3c-4ed1-57fe-68e675c03d13@egenix.com>
 <CAGbohnaA-FG-XKZDx6FHJwPx8dh3AMKh=Wrd5awmMLzkerJdzA@mail.gmail.com>
 <bb0e1894-4591-18e8-8539-f4be513c0bbd@egenix.com>
 <CALFfu7DzkfpASsRxxYVHamy4y+Ais7gkQGdQ3yZn9rReOcykHA@mail.gmail.com>
 <CAGbohnZ=rncDghn8rM9J+R2qMuO5ig-7_WwArwaY0gRchJ5i=w@mail.gmail.com>
 <51741053-7e32-5ea2-1d18-b2ca711dda9e@trueblade.com>
 <1fe758c6-01c7-9654-60c7-2ad9c5ec81f2@egenix.com>
 <e5d2e239-bedf-1adc-5978-4bfa0600bf3c@trueblade.com>
 <CACQYzFKARJhNVOMVOpSxPFuY5iM=8dHOPn7_xCDFvV6fwp+5xQ@mail.gmail.com>
 <CAP1=2W5Vs5T4H7Nm0NayQQFGiq7yAX9Pk7XdX6k_Z28P3XxL2A@mail.gmail.com>
 <1a428790-8ede-3b78-e5bb-09029189876b@egenix.com>
 <98343B2C-4F8C-4E78-9904-0686C78ABE5B@stufft.io>
 <CAP1=2W4z87J64N8FrpYi0qr2uC7T1UBAegNfaV0aHiU0TVfv6A@mail.gmail.com>
 <83BE7121-7C6E-4AD4-ADAA-6F368EA900FA@stufft.io>
 <CAP1=2W5JQNwrZpPVMJLaxs=Yo0rhXbojVXxS=rcGSWPn=LvK_A@mail.gmail.com>
Message-ID: <FD9D667E-1AE1-4F29-A348-4D066F8E0780@stufft.io>

Yea to be clear. I just used csv and those fields as an example. I think TOML is a better choice, and we can add whatever fields are useful. 

Part of the devguide build step could be turning that into a nice human facing list (does that satisfy what Marc-Andre is looking for?). We could also have a cronjob that syncs github permissions with that list. 

Sent from my iPhone

> On Aug 4, 2018, at 12:51 PM, Brett Cannon <brett at python.org> wrote:
> 
> 
> 
>> On Fri, Aug 3, 2018, 21:59 Donald Stufft, <donald at stufft.io> wrote:
>> 
>> 
>>> On Aug 3, 2018, at 1:52 PM, Brett Cannon <brett at python.org> wrote:
>>> 
>>> 
>>> 
>>> On Fri, 3 Aug 2018 at 00:44 Donald Stufft <donald at stufft.io> wrote:
>>>> We should probably have a single source of truth for what a core developer is, and all other systems pull from that.
>>> 
>>> Ah, but I think there might be a terminology clash here. Using MALs definition means that you can be a core developer but not have commit privileges due to relinquishing those privileges at some point. So I'm not sure what systems you are referring to that need to know if someone historically happened to be a core developer.
>> 
>> We have that I am aware of right now:
>> 
>> - GitHub
>> - bugs.p.o
>> - python-committers
>> 
>> And it sounds like Marc-Andre is looking to add to it:
>> 
>> - A third party/user facing list of developers, regardless of the technical status of their ability to commit (e.g. even if they don?t have a GitHub account).
>> 
>> 
>> There may be other systems that I can?t recall off the top of my head (is anything still in hg.python.org? I dunno).
> 
> 
> For us, hg.python.org only has the b.p.o code.
> 
>> 
>> As of right now, I believe the list of who a core developer is and has historically been somewhat adhoc based upon who has permissions to commit things.
> 
> 
> Yep.
> 
>> Meaning that as we transition from one system to another we ?lose? the ability to account for people over the years. This would also make it harder for someone to come back, because they?d have to track down someone who knew they were a core developer (and let?s be honest, human memory sucks so sometimes you?re just not sure if someone was or wasn?t).
> 
> 
> Yes, us old-timers aren't perfect. ? If someone couldn't remember we would probably go into the mailing list archives.
> 
> 
>> 
>> So I think it would probably be a good thing if we had one central location that answers the question of who is and isn?t a core developer, that isn?t tied to the ACLs of one particular system that we happen to be using today. Ideally these other related systems (bugs.p.o, Github, etc) are then modified to pull from this thing as the singular source of truth. This could be as simple as a CSV/tom/yaml file sitting in a repository somewhere that lists all of the developers, their status etc, plus scripts that will synchronize access from that to the relevant places.
> 
> 
> It would probably sit in the devguide. The question is how to potentially display this in a readable format? Or maybe we don't care as long as we use a format that makes both humans and computers happy? Otherwise we would have to add a build step to the site. (Personally I say we do it in TOML since it's readable and can still be writable through the GitHub web UI since I am typically the person adding new folks ?; we can then just link to it for people to peruse.)
> 
>> 
>> So for arguments sake, it could be a CSV file with the schema:
>> 
>> Name, Email, Active, bugs.p.o Username, GitHub username
> 
> 
> I would toss into the year joined. I know over in the GitHub issue about this topic that people also don't want to lose mentor/voucher/proposer and any notes about why the person got their commit privileges.
> 
>> 
>> And then a script that could be ran whenever that would check the permissions of the GitHub team for CPython, and ensure that anyone listed there has been added to the GitHub team (and probably anyone who isn?t, has been removed, to ensure that getting in this file is the _way_ you get access). Likewise bugs.p.o could pull from this, and Marc-Andre?s public facing list could as well.
>> 
>> Of course we can get fancier than a simple file somewhere, the key thing is that there is a single source of truth, that isn?t tied to one particular service or tool that we use (unless that tool is dedicated to managing this list of people), because anytime we tie maintaining this list of people to the technical aspects of giving someone an ACL to a particular system, then our list is going to become outdated anytime we switch systems (and some % of people won?t ever make the jump to the new system).
>> 
>>> 
>>> Assuming what you mean is people with commit privileges, then we have the "lovely" complication of usernames being inconsistent for people across systems which is probably what is required to make any centralized list useful for systems to interact with. We could solve this by using a table instead of a list for people to list e.g. their GitHub and b.p.o usernames if people wanted to go that route.
>>>  
>>>> 
>>>> > On Aug 3, 2018, at 3:43 AM, M.-A. Lemburg <mal at egenix.com> wrote:
>>>> > 
>>>> > Please note that the motivation for having a list similar to the
>>>> > one we have for PSF Fellows is not to determine voting eligibility.
>>>> > 
>>>> > This is about having a record of the core developer status available
>>>> > to show to 3rd parties, e.g. to (potential) employers, organizations,
>>>> > government agencies, etc.
>>>> > 
>>>> > Having a place to also record the email addresses for internal
>>>> > use such a voting or sending messages to the whole group
>>>> > is a good idea nonetheless. This mailing list will likely already
>>>> > serve that purpose.
>>>> > 
>>>> > 
>>>> > On 02.08.2018 23:25, Brett Cannon wrote:
>>>> >> On Thu, 2 Aug 2018 at 04:54 Stefan Richthofer <stefan.richthofer at gmail.com>
>>>> >> wrote:
>>>> >> 
>>>> >>> Again, this was in the (poorly conveyed) context of getting email
>>>> >>>> addresses for them, or at least being able to contact them.
>>>> >>>> 
>>>> >>> 
>>>> >>> I always thought there were already at least three places containing the
>>>> >>> necessary email addresses.
>>>> >>> 
>>>> >>> * python-committers should be exactly this mailing list.
>>>> >>> 
>>>> >> 
>>>> >> The list also has email archiving services as well as duplicate emails for
>>>> >> people (e.g. I'm in it twice so that if I accidentally send an email from a
>>>> >> personal email address it doesn't get held up in moderation).
>>>> >> 
>>>> >> 
>>>> >>> * according to https://devguide.python.org/coredev/#issue-tracker it is
>>>> >>> mandatory for core developers to subscribe to the issue tracker which AFAIK
>>>> >>> requires a confirmed email address.
>>>> >>> 
>>>> >> * Every committer clearly must have signed the contributor agreement
>>>> >>> https://www.python.org/psf/contrib/contrib-form/ which also contains a
>>>> >>> mandatory email field
>>>> >>> 
>>>> >>> So why is it still necessary to get email addresses at all?
>>>> >>> 
>>>> >> 
>>>> >> Because none of those necessarily have accurate email addresses at this
>>>> >> point. E.g. even python-committers has had people dropped off due to too
>>>> >> many email rejections. And if we hold a vote for a governance model we will
>>>> >> need a place to send ballots.
>>>> >> 
>>>> >> Now if the vote is open to any core developer (using MAL's definition of it
>>>> >> being a lifetime title), then the subscription list for this mailing list
>>>> >> is probably good enough with some manual grooming as long we are okay with
>>>> >> long-dormant folk who predate this list not voting (which I'm personally
>>>> >> fine with). But if we wanted a way to reach just people with commit
>>>> >> privileges then that's a separate challenge.
>>>> >> 
>>>> >> -Brett
>>>> >> 
>>>> >> 
>>>> >>> 
>>>> >>> 2018-08-02 10:59 GMT+02:00 Eric V. Smith <eric at trueblade.com>:
>>>> >>> 
>>>> >>>> On 8/2/2018 3:32 AM, M.-A. Lemburg wrote:
>>>> >>>> 
>>>> >>>>> On 02.08.2018 03:24, Eric V. Smith wrote:
>>>> >>>>> 
>>>> >>>>>> On 8/1/2018 8:32 PM, Mariatta Wijaya wrote:
>>>> >>>>>> 
>>>> >>>>>>>     I think it would also be a good idea to include core developers
>>>> >>>>>>>     of other Python implementations in such a document, in
>>>> >>>>>>>     separate sections, e.g. for Jython, IronPython, PyPy,
>>>> >>>>>>>     Stackless, etc
>>>> >>>>>>> 
>>>> >>>>>>> 
>>>> >>>>>>> Hmm, I don't think it is should be our (CPython) responsibility to
>>>> >>>>>>> keep track and maintain the list of the core devs of alternate Python
>>>> >>>>>>> implementations. Don't they have their own community / website? They
>>>> >>>>>>> have their own repo, bug tracker, governance model, and everything,
>>>> >>>>>>> right?
>>>> >>>>>>> 
>>>> >>>>>> 
>>>> >>>>>> Agreed. We have a hard enough time keeping track of our own core
>>>> >>>>>> developers.
>>>> >>>>>> 
>>>> >>>>> 
>>>> >>>>> I don't really think we have a hard time doing this. The only
>>>> >>>>> problem is that we never sat down and actually properly recorded
>>>> >>>>> this in one place.
>>>> >>>>> 
>>>> >>>> 
>>>> >>>> I was specifically thinking of a way to stay in touch with core devs, or
>>>> >>>> more specifically a way to send them email. In the past, before we moved to
>>>> >>>> github, I took it upon myself to find email addresses (current or not) for
>>>> >>>> all core devs, and I gave up without much success.
>>>> >>>> 
>>>> >>>> I agree that we could probably come up with a list of names for people
>>>> >>>> who have been given the "core dev" status.
>>>> >>>> 
>>>> >>>> For our core devs, can't we just say that the CPython core devs are
>>>> >>>>>> those with commit bits on the CPython repo? I realize that will
>>>> >>>>>> eliminate some people who have been core developers and never moved to
>>>> >>>>>> github, but if they bring it to our attention, we can add them easily
>>>> >>>>>> enough.
>>>> >>>>>> 
>>>> >>>>> As discussed before, being a core developer is a status you
>>>> >>>>> gain and never lose. There is a clear difference between have
>>>> >>>>> commit rights to the (current) repo and this status.
>>>> >>>>> 
>>>> >>>> 
>>>> >>>> Agreed. Again, this was in the (poorly conveyed) context of getting email
>>>> >>>> addresses for them, or at least being able to contact them.
>>>> >>>> 
>>>> >>>> Eric
>>>> >>>> 
>>>> >>>> _______________________________________________
>>>> >>>> python-committers mailing list
>>>> >>>> python-committers at python.org
>>>> >>>> https://mail.python.org/mailman/listinfo/python-committers
>>>> >>>> Code of Conduct: https://www.python.org/psf/codeofconduct/
>>>> >>>> 
>>>> >>> 
>>>> >>> _______________________________________________
>>>> >>> python-committers mailing list
>>>> >>> python-committers at python.org
>>>> >>> https://mail.python.org/mailman/listinfo/python-committers
>>>> >>> Code of Conduct: https://www.python.org/psf/codeofconduct/
>>>> >>> 
>>>> >> 
>>>> >> 
>>>> >> 
>>>> >> _______________________________________________
>>>> >> python-committers mailing list
>>>> >> python-committers at python.org
>>>> >> https://mail.python.org/mailman/listinfo/python-committers
>>>> >> Code of Conduct: https://www.python.org/psf/codeofconduct/
>>>> >> 
>>>> > 
>>>> > -- 
>>>> > Marc-Andre Lemburg
>>>> > eGenix.com
>>>> > 
>>>> > Professional Python Services directly from the Experts (#1, Aug 03 2018)
>>>> >>>> Python Projects, Coaching and Consulting ...  http://www.egenix.com/
>>>> >>>> Python Database Interfaces ...           http://products.egenix.com/
>>>> >>>> Plone/Zope Database Interfaces ...           http://zope.egenix.com/
>>>> > ________________________________________________________________________
>>>> > 
>>>> > ::: We implement business ideas - efficiently in both time and costs :::
>>>> > 
>>>> >   eGenix.com Software, Skills and Services GmbH  Pastor-Loeh-Str.48
>>>> >    D-40764 Langenfeld, Germany. CEO Dipl.-Math. Marc-Andre Lemburg
>>>> >           Registered at Amtsgericht Duesseldorf: HRB 46611
>>>> >               http://www.egenix.com/company/contact/
>>>> >                      http://www.malemburg.com/
>>>> > 
>>>> > _______________________________________________
>>>> > python-committers mailing list
>>>> > python-committers at python.org
>>>> > https://mail.python.org/mailman/listinfo/python-committers
>>>> > Code of Conduct: https://www.python.org/psf/codeofconduct/
>>>> 
>> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180804/c0b20c7d/attachment-0001.html>

From antoine at python.org  Sat Aug  4 16:26:01 2018
From: antoine at python.org (Antoine Pitrou)
Date: Sat, 4 Aug 2018 22:26:01 +0200
Subject: [python-committers] View logs on VSTS?
In-Reply-To: <CA+3bQGHbt5HkmybZdzxnKtQ3TOEY_mgqb1gQxGHkYZEeniS+Bw@mail.gmail.com>
References: <245748ea-3eaa-d434-13e7-04a91238049e@python.org>
 <CA+3bQGHbt5HkmybZdzxnKtQ3TOEY_mgqb1gQxGHkYZEeniS+Bw@mail.gmail.com>
Message-ID: <cb4cd1c5-0223-b9d7-ac82-49ab1bb9f209@python.org>


Le 04/08/2018 ? 18:19, Steve Dower a ?crit?:
> That looks unrelated.
> 
> In this case I?m guessing the test run timed out and Ctrl+C failed to
> terminate it. For some reason when that happens the logs for the item
> that timed out are not shown, I'd guess because the item is marked
> ?Timeout? rather than ?Failed?.
> 
> Do you see the ?download logs? button? And does that contain the logs?
> It?s a pain, but totally locked up tests like that should be rare?

I can download the logs, but the archive doesn't contain any logs for
the failed step (the one that timed out).

Regards

Antoine.

From ronaldoussoren at mac.com  Sun Aug  5 04:50:33 2018
From: ronaldoussoren at mac.com (Ronald Oussoren)
Date: Sun, 05 Aug 2018 10:50:33 +0200
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <20180804093612.GT22431@ando.pearwood.info>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
 <CA+St6D0+HPez8qcyz-f8W3xAsX_rqUtijxNg_BSqrEmnZ4BCTA@mail.gmail.com>
 <CAGbohnZ-T3BjuxVJmiU9g07RBVzdTh5dwpH4KE=KVTXqUA=Ndw@mail.gmail.com>
 <CA+St6D2LgMEf0npKkj60ydBya2efXKMTjV7qVRDW6mmmFHDUDA@mail.gmail.com>
 <CAGbohnZsdS_=oHtTaUzrGXpNM6GLqVu_WK84xgNLqOOdKyasRA@mail.gmail.com>
 <20180802074949.GI22431@ando.pearwood.info>
 <CACac1F94TGdV9zRxj-uFkivaOUV+r3o07k+Y-BmoF6p8SH-HTA@mail.gmail.com>
 <20180804093612.GT22431@ando.pearwood.info>
Message-ID: <ED798FF6-90B4-4F8B-8F91-112A29A0DD8C@mac.com>



> On 4 Aug 2018, at 11:36, Steven D'Aprano <steve at pearwood.info> wrote:

> When Australia's prime minister disappeared, it took two days to swear 
> in a replacement and less than a month to call a new election.

But that was easy: Most countries have predetermined procedures to deal with such scenarios. 

Ronald

From antoine at python.org  Sun Aug  5 06:18:39 2018
From: antoine at python.org (Antoine Pitrou)
Date: Sun, 5 Aug 2018 12:18:39 +0200
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <ED798FF6-90B4-4F8B-8F91-112A29A0DD8C@mac.com>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
 <CA+St6D0+HPez8qcyz-f8W3xAsX_rqUtijxNg_BSqrEmnZ4BCTA@mail.gmail.com>
 <CAGbohnZ-T3BjuxVJmiU9g07RBVzdTh5dwpH4KE=KVTXqUA=Ndw@mail.gmail.com>
 <CA+St6D2LgMEf0npKkj60ydBya2efXKMTjV7qVRDW6mmmFHDUDA@mail.gmail.com>
 <CAGbohnZsdS_=oHtTaUzrGXpNM6GLqVu_WK84xgNLqOOdKyasRA@mail.gmail.com>
 <20180802074949.GI22431@ando.pearwood.info>
 <CACac1F94TGdV9zRxj-uFkivaOUV+r3o07k+Y-BmoF6p8SH-HTA@mail.gmail.com>
 <20180804093612.GT22431@ando.pearwood.info>
 <ED798FF6-90B4-4F8B-8F91-112A29A0DD8C@mac.com>
Message-ID: <4494ddbd-1060-ea5b-7207-6d872161799a@python.org>


Le 05/08/2018 ? 10:50, Ronald Oussoren via python-committers a ?crit?:
> 
> 
>> On 4 Aug 2018, at 11:36, Steven D'Aprano <steve at pearwood.info> wrote:
> 
>> When Australia's prime minister disappeared, it took two days to swear 
>> in a replacement and less than a month to call a new election.
> 
> But that was easy: Most countries have predetermined procedures to deal with such scenarios. 

Indeed, this is conflating changing leadership (under the same regime
where it's normal to change leaders from time to time) with regime change.

Regards

Antoine.

From mariatta.wijaya at gmail.com  Sun Aug  5 16:13:15 2018
From: mariatta.wijaya at gmail.com (Mariatta Wijaya)
Date: Sun, 5 Aug 2018 13:13:15 -0700
Subject: [python-committers] Reminder of BDFL succession timeline + CFP
In-Reply-To: <4494ddbd-1060-ea5b-7207-6d872161799a@python.org>
References: <CAGbohnbS10irXN9oL4uqFw1Vy6uFrC6FjcMX6ir2p8reeh=+3A@mail.gmail.com>
 <CAPJVwBnF6BBO2m++8Q0_6e0A=RVPVyZkdo6g+MkAkEnnSbwtpQ@mail.gmail.com>
 <CA+St6D0+HPez8qcyz-f8W3xAsX_rqUtijxNg_BSqrEmnZ4BCTA@mail.gmail.com>
 <CAGbohnZ-T3BjuxVJmiU9g07RBVzdTh5dwpH4KE=KVTXqUA=Ndw@mail.gmail.com>
 <CA+St6D2LgMEf0npKkj60ydBya2efXKMTjV7qVRDW6mmmFHDUDA@mail.gmail.com>
 <CAGbohnZsdS_=oHtTaUzrGXpNM6GLqVu_WK84xgNLqOOdKyasRA@mail.gmail.com>
 <20180802074949.GI22431@ando.pearwood.info>
 <CACac1F94TGdV9zRxj-uFkivaOUV+r3o07k+Y-BmoF6p8SH-HTA@mail.gmail.com>
 <20180804093612.GT22431@ando.pearwood.info>
 <ED798FF6-90B4-4F8B-8F91-112A29A0DD8C@mac.com>
 <4494ddbd-1060-ea5b-7207-6d872161799a@python.org>
Message-ID: <CAGbohnaVVKHf_Sq2fZzNJeTPkUXsRGv8NwOzck+Lfu5MFpeAhQ@mail.gmail.com>

Thanks all for voicing your concerns and all the feedback.
So far I hear people opposing the strict deadline because they're afraid it
means we'll be making rush decisions for the sake of meeting deadlines.

Well here are my reasonings of why I'm setting deadlines and timelines:

We all know it, discussions in mailing list can go on forever. And now that
we don't have a BDFL who will shut down and end discussions, these things
can really go literally forever. Therefore we should timebox these
discussions.

I believe that none of us actually want Python without governance and
without decision forever. The Python community is waiting for core
developers to come together and figure out Guido's successor.

For myself, January 1, 2019 is reasonable deadline, it will be 6 months
since Guido announced his permanent vacation.

In separate thread, it seems that we're in agreement that Oct 1, 2018 for
deadline to come up with proposals of governance model.

So then, what needs to happen between Oct 1 to Jan 1? (3 months period?) How
do we go from "here are the proposed governance model" into "we have
selected the successor(s)"?
Clearly, if we want to have decision by Jan 1, people can't still be
arguing about governance model on Dec 31st. If we're going to vote on
things, people need to know when they need to show up to vote. We probably
need someone to volunteer and set up the voting system, or get in touch
with The PSF for setting it up, and maybe account for flexibilities in case
there are last minute technical difficulties and so on. All of these
require coordination and concerted effort.

>From there, I've started breaking down the different phases of how this
will go, and also allowing ample time for people to catch up and read their
emails. For example, in my timeline, I suggested 2 weeks time of voting in
each round. In reality, voting is probably just going to take a few clicks
on a website, not 2 full weeks.

I'm just drawing from my own personal experience of having organize and
coordinate a group of volunteers. What I've learned is that the group will
be more successful when each volunteers know their roles, responsibilities,
the goal of the group, and in a lot of cases, they need to know when they
should deliver and complete their task.

Python core devs are all volunteers, living in different timezones, in
different part of the world, and we all have other commitments to our
employer and family. But right now we all have responsibilities to come up
with a plan of succession for this community. It was the last task Guido
gave to us before retiring as BDFL.

These timelines are not meant for you to rush and make decision last minute
just because there is a deadline.
On contrary, I hope that by knowing these timelines ahead of time, you all
can account for these dates, you can be responsible, and if needed, adjust
and plan ahead your volunteering schedule surrounding these dates.

If you are proposing a governance model, and someone else here have
questions about it, it will be appreciated if you can respond in timely
manner, and not wait 4 months before you respond.

Similarly, if you have question and concern or just want to argue about a
proposed governance model, you should do it sooner, within these timeboxed
periods, and not wait until 2020, and don't wait until last minute either.
You'll need to give time for the proposer to respond to you. (again we all
live in different timezones).

I'm also guessing that not everyone here is planning to come up with 100
different proposals, and not everyone here wants to argue at all. Perhaps
some of you are just waiting for the ballot to arrive in the email?
There is value in knowing in advance of when you need to vote, so you can
plan on watching their mailbox, or alert us if they didn't receive the
ballot.

I hope by knowing these timelines people can be more considerate with each
other, and that they'll be able to express their thoughts more effectively
in emails.

Without clear deadlines, sure there is less pressure of not rushing into
making decisions, but it also allows for discussions to stall forever.
I also don't want people to come up with yet a new proposal every other
week.

So I still would like us to have clear deadlines and timebox this whole
succession process.

"clear" does not need to be "strict". What I will try to do is to post
reminders here, a week before the expected "deadline" and ask if people
need extensions, and we'll extend the dates accordingly. (similar to what
Python release managers normally do).
But maybe the extension will be for only another one week or two, not
forever.
What do people think about this?

It seems like several people (Barry, Brett, Steven) and myself are ok with
January 1, 2019 as the a deadline of choosing the successor.
For those opposing the deadlines, do you have a different date in mind?

Here are my proposed timeboxes again, adjusted to AoE timezone, and
including Barry's guidance of using PEP 8k+ number.
For each of the dates below, we will allow +1-2 weeks of flexibility.

*Oct 1 AoE (2 months from now):* Deadline of coming up with proposals of
governance model.

To be included in the proposal at the minimum:
- explanation and reasoning of the governance model
- expected roles and responsibilities
- candidate for the role need not be included at this time, since we're
only choosing the governance model. Depending on the governance model
chosen, we might have different people to be nominated. There will be a
separate process for nominating the candidate.
- the term of governance: is it for life? 5 years? 10 years?

Who can submit the proposal?
Python core developers. Individual core devs can submit a proposal, or
co-author the proposal with another core dev.

How to submit the proposal?
Proposal should be in a form of a PEP, numbered 8K+, and merged into peps
repo by Oct 1 AoE. Proposals not merged after Oct 1 AoE will not be
considered.

*Oct 1 - Nov 15: Review period. (6 weeks)*
All core developers will review the PEPs, and ask any questions to the PEP
author. This timeline allows for enough time for all core devs to carefully
review each PEPs, and for authors to respond.

In addition, if there is any governance PEP that comes before Oct 1
deadline, you can definitely start reviewing and discussing those. Oct 1
(+1-2 weeks) is just the cutoff for coming up with new proposals.

There will be two parts of this:

*Review phase 1: Oct 1- Nov 1 (1 month):* Allow changes and tweaks to the
proposed PEPs.
This is the period where people can ask questions or argue about the
proposed PEPs.  Again, these dates are meant so you know when you need to
start reading these PEPs, ask and answer questions in timely manner, and
request one week extension if needed.

*Review phase 2: Nov 1 - Nov 15 (2 weeks)*: No more changes to the above
PEPs.
No more discussions. This is what I consider the "cool off" period.
Questions and concerns were meant to be addressed in the previous phase.
This is the final chance to carefully review all governance PEPs, and
formulate your decisions.

*Nov 15 AoE: Voting for new governance model starts, and will go for 2
weeks*
Send reminders for folks to vote.

Who can vote:
Only core developers can vote.

*Vote will be anonymous.*
*We will use the system used to elect PSF board members.*


*Dec 1 AoE: Voting ended*.
The most voted proposal will be accepted.
Depending on the chosen governance model, we'll begin nominating candidates
to fill the role(s).

*Dec 10 AoE Deadline for nominating candidates to fill the role*
Maybe just one PEP to list all the nominations, instead of separate PEPs of
each candidates.

Who can nominate: Python core developers
Who can be nominated: Python core developers

*Dec 15 AoE Voting for new successor starts*
(Depends on the governance model chosen on Dec 1)

*Who can vote:*
*Only core developers can vote.*

*Vote will be anonymous.*
*We will use the system used to elect PSF board members.*

*Jan 1 AoE Voting for new successor ends.* Most voted candidate(s) is
chosen.


Mariatta
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180805/010f9d03/attachment-0001.html>

From fwierzbicki at gmail.com  Sun Aug  5 20:22:23 2018
From: fwierzbicki at gmail.com (fwierzbicki at gmail.com)
Date: Sun, 5 Aug 2018 17:22:23 -0700
Subject: [python-committers] Push rights for new Jython contributors
Message-ID: <CADrh4z+GH3UARFOBY7sDJBqjwFWTCh0tiYxdAvaAGgKxoY3LZQ@mail.gmail.com>

It's been a while since we added a Jython contributor, so I no longer
know what the process would be and we have at least one person we'd
like to add.

Previously, I think the process was:

1) Contributor creates a user on bugs.python.org using their real name.
2) Contributor signs the PSF agreement (not the Jython-specific one,
which is not used anymore).
3) Someone gives contributor push rights to hg.python.org.

Is this still the process for Jython?

Kind regards,

Frank Wierzbicki

From mariatta.wijaya at gmail.com  Tue Aug  7 12:12:18 2018
From: mariatta.wijaya at gmail.com (Mariatta Wijaya)
Date: Tue, 7 Aug 2018 09:12:18 -0700
Subject: [python-committers] Push rights for new Jython contributors
In-Reply-To: <CADrh4z+GH3UARFOBY7sDJBqjwFWTCh0tiYxdAvaAGgKxoY3LZQ@mail.gmail.com>
References: <CADrh4z+GH3UARFOBY7sDJBqjwFWTCh0tiYxdAvaAGgKxoY3LZQ@mail.gmail.com>
Message-ID: <CAGbohnbDjbkmia+KmPD3_k549q4YM3cb3M5O8S3ewH2iJvh97g@mail.gmail.com>

Your question is regarding push access to hg.python.org/jython, right?
Seems like according to Jython's devguide
<http://www.jython.org/devguide/coredev.html#ssh>, you'll need to send the
SSH key to hgaccounts at python.org.
But it also seems to be the same email address we used when adding
committers to hg.python.org/cpython.
Now that we're on GitHub, we don't send over SSH keys anymore.


On Sun, Aug 5, 2018, 5:23 PM fwierzbicki at gmail.com <fwierzbicki at gmail.com>
wrote:

> It's been a while since we added a Jython contributor, so I no longer
> know what the process would be and we have at least one person we'd
> like to add.
>
> Previously, I think the process was:
>
> 1) Contributor creates a user on bugs.python.org using their real name.
> 2) Contributor signs the PSF agreement (not the Jython-specific one,
> which is not used anymore).
> 3) Someone gives contributor push rights to hg.python.org.
>
> Is this still the process for Jython?
>
> Kind regards,
>
> Frank Wierzbicki
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180807/67e5c601/attachment.html>

From mariatta.wijaya at gmail.com  Wed Aug  8 13:02:01 2018
From: mariatta.wijaya at gmail.com (Mariatta Wijaya)
Date: Wed, 8 Aug 2018 10:02:01 -0700
Subject: [python-committers] Organizing an informational PEP on project
 governance options (was Re: Transfer of power)
In-Reply-To: <CAPJVwBkw+jjP=Gb-RY_dG7Ebv8wZ+6Sbxx5GOAUh3-dUSZAOcw@mail.gmail.com>
References: <CAPJVwBkCdrdnYGGK7OUFfNvBgXtrbbrfpo_7JB-OUqEHg_UboQ@mail.gmail.com>
 <CAPJVwBkw+jjP=Gb-RY_dG7Ebv8wZ+6Sbxx5GOAUh3-dUSZAOcw@mail.gmail.com>
Message-ID: <CAGbohnaf5-y7C-NM_3ufUJuFn-vZ+GCaJLqehjCHLKLgMhwUXQ@mail.gmail.com>

Hi Nathaniel,

I know you mentioned my name earlier, and thanks for thinking of me. But
I'm really sorry, I just don't have the bandwidth to help out with this
right now.

Not sure if you've made any progress yet. Since the intention is to collect
information of the various governance models out there, I was thinking
perhaps you can ask non core developers to help out with this effort. So
that way you're not constrained by the limited number of core devs and
their limited free time available.

What do you think?

Mariatta


On Wed, Aug 1, 2018 at 8:17 PM Nathaniel Smith <njs at pobox.com> wrote:

> I'm sorry, I seem to have accidentally licked a cookie [1] here. I'm still
> keen to see this happen and to be a part of it, and have been trying to be
> find the spoons to take the lead on organizing, but it's been a few weeks
> now and that hasn't happened yet [2].
>
> Does anyone else want to take the lead here? A number of people have
> expressed interest in helping or in making introductions to other
> communities, and I think the next step would be to organize some kind of
> kick off meeting to rough out an outline and start divvying up work.
>
> -n
>
> [1] http://communitymgt.wikia.com/wiki/Cookie_Licking
> [2] not to go into too many details, but basically I'm currently sick,
> unemployed, and broke, which isn't a crisis but sorting it out is sucking
> up a lot of energy.
>
> On Jul 13, 2018 04:31, "Nathaniel Smith" <njs at pobox.com> wrote:
>
> On Thu, Jul 12, 2018 at 6:35 PM, ?ukasz Langa <lukasz at langa.pl> wrote:
> > I'm +1 to an Informational PEP around the state of the art in project
> governance.
>
> I think this is a great idea. There's a lot of experience out there on
> different governance models, but of course any given project only uses
> one of them, so knowledge about what works and what doesn't is pretty
> fragmented across the F/OSS community. And this is a really important
> decision for us and our users, so we should do due diligence. For
> example, we should think this through at least as carefully as we
> thought through Github vs. Gitlab :-). A PEP is a good format to start
> doing that.
>
> I volunteer to co-author such a PEP. But I'm not up to doing it on my
> own. So... who else wants to be a co-author? (I'm not going to
> pressure anyone, but Brett, Mariatta, and Carol, please know that your
> names were the first ones that jumped to my mind when thinking about
> this :-).)
>
> What I'm thinking:
>
> - While this might eventually produce some recommendations, the
> immediate goal would just be to collect together different options and
> ideas and point out their trade-offs. I'm guessing most core devs
> aren't interested in becoming experts on open-source governance, so
> the goal here would be to help the broader community get up to speed
> and have a more informed discussion [1].
>
> - As per the general PEP philosophy, I think this is best done by
> having some amount of general discussion on
> python-dev/python-committers, plus a small group of coauthors (say 2-4
> people) who take responsibility for filtering ideas and organizing
> them in a coherent document.
>
> - Places where we'll want to look for ideas:
>   - The thread already happening on python-committers
>   - Whatever books / articles / blog posts / etc. we can find (e.g. I
> know Karl Fogel's Producing OSS book has some good discussion)
>   - Other major projects in a similar position to CPython (e.g.,
> node.js, Rust) -- what do they do, and what parts are they
> happy/not-happy about?
>   - Large Python projects (e.g. Django) -- likewise
>
> If you have suggestions for particularly interesting projects or
> excellent writing on the topic, then this thread would be a good place
> to mention them.
>
> -n
>
> [1] The NumPy project has put a lot of energy into working through
> governance issues over the last few years, and one thing that
> definitely helped was coming up with some "assigned reading" ahead of
> the main sprint where we talked about this. NumPy's problems are/were
> pretty different from CPython's, but I'm imagining this PEP as filling
> a similar role.
>
>
> --
> Nathaniel J. Smith -- https://vorpus.org
>
>
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180808/d79f82f2/attachment.html>

From antoine at python.org  Wed Aug  8 13:39:30 2018
From: antoine at python.org (Antoine Pitrou)
Date: Wed, 8 Aug 2018 19:39:30 +0200
Subject: [python-committers] Organizing an informational PEP on project
 governance options
In-Reply-To: <CAGbohnaf5-y7C-NM_3ufUJuFn-vZ+GCaJLqehjCHLKLgMhwUXQ@mail.gmail.com>
References: <CAPJVwBkCdrdnYGGK7OUFfNvBgXtrbbrfpo_7JB-OUqEHg_UboQ@mail.gmail.com>
 <CAPJVwBkw+jjP=Gb-RY_dG7Ebv8wZ+6Sbxx5GOAUh3-dUSZAOcw@mail.gmail.com>
 <CAGbohnaf5-y7C-NM_3ufUJuFn-vZ+GCaJLqehjCHLKLgMhwUXQ@mail.gmail.com>
Message-ID: <4332c2e6-1f55-c8da-5ce6-b913398ae53e@python.org>


Hi all,

I contacted Nathaniel and the people who had mentioned interest in
private, so as not to lose momentum and try to move this forward.  So
far only Doug responded.  If anyone else wants to participate, feel free
to contact me / us (either on-list or in private).

I think we need at least 2 or 3 core developers on this, and of course
we can also invite non-core developers.

Regards

Antoine.


Le 08/08/2018 ? 19:02, Mariatta Wijaya a ?crit?:
> Hi Nathaniel,
> 
> I know you mentioned my name earlier, and thanks for thinking of me. But
> I'm really sorry, I just don't have the bandwidth to help out with this
> right now.
> 
> Not sure if you've made any progress yet. Since the intention is to
> collect information of the various governance models out there, I was
> thinking perhaps you can ask non core developers to help out with this
> effort. So that way you're not constrained by the limited number of core
> devs and their limited free time available.
> 
> What do you think?
> 
> Mariatta
> 
> 
> On Wed, Aug 1, 2018 at 8:17 PM Nathaniel Smith <njs at pobox.com
> <mailto:njs at pobox.com>> wrote:
> 
>     I'm sorry, I seem to have accidentally licked a cookie [1] here. I'm
>     still keen to see this happen and to be a part of it, and have been
>     trying to be find the spoons to take the lead on organizing, but
>     it's been a few weeks now and that hasn't happened yet [2].
> 
>     Does anyone else want to take the lead here? A number of people have
>     expressed interest in helping or in making introductions to other
>     communities, and I think the next step would be to organize some
>     kind of kick off meeting to rough out an outline and start divvying
>     up work.
> 
>     -n
> 
>     [1]?http://communitymgt.wikia.com/wiki/Cookie_Licking
>     [2] not to go into too many details, but basically I'm currently
>     sick, unemployed, and broke, which isn't a crisis but sorting it out
>     is sucking up a lot of energy.

From yselivanov.ml at gmail.com  Wed Aug  8 13:44:15 2018
From: yselivanov.ml at gmail.com (Yury Selivanov)
Date: Wed, 8 Aug 2018 13:44:15 -0400
Subject: [python-committers] Organizing an informational PEP on project
 governance options
In-Reply-To: <4332c2e6-1f55-c8da-5ce6-b913398ae53e@python.org>
References: <CAPJVwBkCdrdnYGGK7OUFfNvBgXtrbbrfpo_7JB-OUqEHg_UboQ@mail.gmail.com>
 <CAPJVwBkw+jjP=Gb-RY_dG7Ebv8wZ+6Sbxx5GOAUh3-dUSZAOcw@mail.gmail.com>
 <CAGbohnaf5-y7C-NM_3ufUJuFn-vZ+GCaJLqehjCHLKLgMhwUXQ@mail.gmail.com>
 <4332c2e6-1f55-c8da-5ce6-b913398ae53e@python.org>
Message-ID: <CA+St6D0AKy69NCt4Xwe=EEYJdYTr4FPUhocfMn2_pd6WeXsS_Q@mail.gmail.com>

Hi Antoine,

I'll try to find some time and help. I'm not sure how much time I can
contribute exactly, but I at least can help with a review and maybe
brainstorm. Count me in.

Yury
On Wed, Aug 8, 2018 at 1:39 PM Antoine Pitrou <antoine at python.org> wrote:
>
>
> Hi all,
>
> I contacted Nathaniel and the people who had mentioned interest in
> private, so as not to lose momentum and try to move this forward.  So
> far only Doug responded.  If anyone else wants to participate, feel free
> to contact me / us (either on-list or in private).
>
> I think we need at least 2 or 3 core developers on this, and of course
> we can also invite non-core developers.
>
> Regards
>
> Antoine.
>
>
> Le 08/08/2018 ? 19:02, Mariatta Wijaya a ?crit :
> > Hi Nathaniel,
> >
> > I know you mentioned my name earlier, and thanks for thinking of me. But
> > I'm really sorry, I just don't have the bandwidth to help out with this
> > right now.
> >
> > Not sure if you've made any progress yet. Since the intention is to
> > collect information of the various governance models out there, I was
> > thinking perhaps you can ask non core developers to help out with this
> > effort. So that way you're not constrained by the limited number of core
> > devs and their limited free time available.
> >
> > What do you think?
> >
> > Mariatta
> >
> >
> > On Wed, Aug 1, 2018 at 8:17 PM Nathaniel Smith <njs at pobox.com
> > <mailto:njs at pobox.com>> wrote:
> >
> >     I'm sorry, I seem to have accidentally licked a cookie [1] here. I'm
> >     still keen to see this happen and to be a part of it, and have been
> >     trying to be find the spoons to take the lead on organizing, but
> >     it's been a few weeks now and that hasn't happened yet [2].
> >
> >     Does anyone else want to take the lead here? A number of people have
> >     expressed interest in helping or in making introductions to other
> >     communities, and I think the next step would be to organize some
> >     kind of kick off meeting to rough out an outline and start divvying
> >     up work.
> >
> >     -n
> >
> >     [1] http://communitymgt.wikia.com/wiki/Cookie_Licking
> >     [2] not to go into too many details, but basically I'm currently
> >     sick, unemployed, and broke, which isn't a crisis but sorting it out
> >     is sucking up a lot of energy.
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/



-- 
         Yury

From eric at trueblade.com  Sun Aug 12 09:22:07 2018
From: eric at trueblade.com (Eric V. Smith)
Date: Sun, 12 Aug 2018 09:22:07 -0400
Subject: [python-committers] How to retry backport?
Message-ID: <3481689e-4431-5485-ce6b-86640eaf64b4@trueblade.com>

https://github.com/python/cpython/pull/8745

This failed (I think travis, but can't tell now). I thought I could 
close it and re-open it to get it to retry, but apparently not. When I 
closed it, the backport branch was deleted. At this stage, how do I get 
the backport to try again?

I have spotty internet access, so it might take me a while to try this 
again.

Thanks.

Eric


From berker.peksag at gmail.com  Sun Aug 12 10:22:47 2018
From: berker.peksag at gmail.com (=?UTF-8?Q?Berker_Peksa=C4=9F?=)
Date: Sun, 12 Aug 2018 17:22:47 +0300
Subject: [python-committers] How to retry backport?
In-Reply-To: <3481689e-4431-5485-ce6b-86640eaf64b4@trueblade.com>
References: <3481689e-4431-5485-ce6b-86640eaf64b4@trueblade.com>
Message-ID: <CAF4280LSNUNLNPaHg2_CoiQCnYNQ8euyogch7Ny1oRz0VP4Vkw@mail.gmail.com>

On Sun, Aug 12, 2018 at 4:22 PM, Eric V. Smith <eric at trueblade.com> wrote:
> https://github.com/python/cpython/pull/8745
>
> This failed (I think travis, but can't tell now). I thought I could close it
> and re-open it to get it to retry, but apparently not. When I closed it, the
> backport branch was deleted. At this stage, how do I get the backport to try
> again?

I've just reapplied the "needs backport to 3.7" label and the bot
opened https://github.com/python/cpython/pull/8746

--Berker

From eric at trueblade.com  Sun Aug 12 13:50:39 2018
From: eric at trueblade.com (Eric V. Smith)
Date: Sun, 12 Aug 2018 11:50:39 -0600
Subject: [python-committers] How to retry backport?
In-Reply-To: <CAF4280LSNUNLNPaHg2_CoiQCnYNQ8euyogch7Ny1oRz0VP4Vkw@mail.gmail.com>
References: <3481689e-4431-5485-ce6b-86640eaf64b4@trueblade.com>
 <CAF4280LSNUNLNPaHg2_CoiQCnYNQ8euyogch7Ny1oRz0VP4Vkw@mail.gmail.com>
Message-ID: <6D8AD4C2-DE77-4109-BC9A-3FD438486CDB@trueblade.com>

Ah. Thanks!

--
Eric

> On Aug 12, 2018, at 8:22 AM, Berker Peksa? <berker.peksag at gmail.com> wrote:
> 
>> On Sun, Aug 12, 2018 at 4:22 PM, Eric V. Smith <eric at trueblade.com> wrote:
>> https://github.com/python/cpython/pull/8745
>> 
>> This failed (I think travis, but can't tell now). I thought I could close it
>> and re-open it to get it to retry, but apparently not. When I closed it, the
>> backport branch was deleted. At this stage, how do I get the backport to try
>> again?
> 
> I've just reapplied the "needs backport to 3.7" label and the bot
> opened https://github.com/python/cpython/pull/8746
> 
> --Berker
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/


From tjreedy at udel.edu  Sun Aug 12 17:43:43 2018
From: tjreedy at udel.edu (Terry Reedy)
Date: Sun, 12 Aug 2018 17:43:43 -0400
Subject: [python-committers] How to retry backport?
In-Reply-To: <3481689e-4431-5485-ce6b-86640eaf64b4@trueblade.com>
References: <3481689e-4431-5485-ce6b-86640eaf64b4@trueblade.com>
Message-ID: <72cf6ff0-e96c-c856-513e-a3170a664c17@udel.edu>

On 8/12/2018 9:22 AM, Eric V. Smith wrote:
> https://github.com/python/cpython/pull/8745
> 
> This failed (I think travis, but can't tell now).

When Travis fails, it is often just one of its two required subtests. 
At the far right of the summary page, at the end of each test line, is a 
little, not terribly obvious, 'restart' button for the test.

> I thought I could 
> close it and re-open it to get it to retry, but apparently not.

When that works, all tests are restarted, even if successful before.

Terry

From larry at hastings.org  Mon Aug 13 05:49:17 2018
From: larry at hastings.org (Larry Hastings)
Date: Mon, 13 Aug 2018 02:49:17 -0700
Subject: [python-committers] Winding down 3.4
Message-ID: <55df745c-bf49-9849-0e64-b54b797ca0f1@hastings.org>



We of the core dev community commit to supporting Python releases for 
five years.? Releases get eighteen months of active bug fixes, followed 
by three and a half years of security fixes.? Python 3.4 turns 5 next 
March--at which point we'll stop supporting it, and I'll retire as 3.4 
release manager.

My plan is to make one final release on or around its fifth birthday 
containing the last round of security fixes.? That's about seven months 
from now.? Nothing has been merged since the releases of 3.4.9 and 3.5.6 
last week, and there are no open PRs against either of those releases.

But!? There are still a couple languishing "critical" bugs:

    "shutil copy* unsafe on POSIX - they preserve setuid/setgit bits"
    https://bugs.python.org/issue17180

    "XML vulnerabilities in Python"
    https://bugs.python.org/issue17239

    "fflush called on pointer to potentially closed file" (Windows only)
    https://bugs.python.org/issue19050

It'd be nice to resolve all those issues, one way or another, before we 
retire 3.4.


See you next March,


//arry/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180813/d8c842c3/attachment.html>

From antoine at python.org  Mon Aug 13 05:55:32 2018
From: antoine at python.org (Antoine Pitrou)
Date: Mon, 13 Aug 2018 11:55:32 +0200
Subject: [python-committers] Winding down 3.4
In-Reply-To: <55df745c-bf49-9849-0e64-b54b797ca0f1@hastings.org>
References: <55df745c-bf49-9849-0e64-b54b797ca0f1@hastings.org>
Message-ID: <f5d4fa80-7cfa-08e1-d2c2-96d015be99dc@python.org>


Le 13/08/2018 ? 11:49, Larry Hastings a ?crit?:
> 
> 
> We of the core dev community commit to supporting Python releases for
> five years.? Releases get eighteen months of active bug fixes, followed
> by three and a half years of security fixes.? Python 3.4 turns 5 next
> March--at which point we'll stop supporting it, and I'll retire as 3.4
> release manager.
> 
> My plan is to make one final release on or around its fifth birthday
> containing the last round of security fixes.? That's about seven months
> from now.? Nothing has been merged since the releases of 3.4.9 and 3.5.6
> last week, and there are no open PRs against either of those releases.
> 
> But!? There are still a couple languishing "critical" bugs:
> 
>     "shutil copy* unsafe on POSIX - they preserve setuid/setgit bits"
>     https://bugs.python.org/issue17180
> 
>     "XML vulnerabilities in Python"
>     https://bugs.python.org/issue17239
> 
>     "fflush called on pointer to potentially closed file" (Windows only)
>     https://bugs.python.org/issue19050
> 
> It'd be nice to resolve all those issues, one way or another, before we
> retire 3.4.

So that 3.4 dies in good health?

Regards

Antoine.

From steve.dower at python.org  Mon Aug 13 11:04:08 2018
From: steve.dower at python.org (Steve Dower)
Date: Mon, 13 Aug 2018 08:04:08 -0700
Subject: [python-committers] Winding down 3.4
In-Reply-To: <f5d4fa80-7cfa-08e1-d2c2-96d015be99dc@python.org>
References: <55df745c-bf49-9849-0e64-b54b797ca0f1@hastings.org>
 <f5d4fa80-7cfa-08e1-d2c2-96d015be99dc@python.org>
Message-ID: <mailman.27.1534172648.29263.python-committers@python.org>

?So that 3.4 dies in good health??

More like getting all its evil deeds off its chest on the death bed, I think :)

Top-posted from my Windows 10 phone

From: Antoine Pitrou
Sent: Monday, 13 August 2018 2:59
To: Larry Hastings; python-committers; Python-Dev
Subject: Re: [python-committers] Winding down 3.4


Le 13/08/2018 ? 11:49, Larry Hastings a ?crit?:
> 
> 
> We of the core dev community commit to supporting Python releases for
> five years.? Releases get eighteen months of active bug fixes, followed
> by three and a half years of security fixes.? Python 3.4 turns 5 next
> March--at which point we'll stop supporting it, and I'll retire as 3.4
> release manager.
> 
> My plan is to make one final release on or around its fifth birthday
> containing the last round of security fixes.? That's about seven months
> from now.? Nothing has been merged since the releases of 3.4.9 and 3.5.6
> last week, and there are no open PRs against either of those releases.
> 
> But!? There are still a couple languishing "critical" bugs:
> 
>     "shutil copy* unsafe on POSIX - they preserve setuid/setgit bits"
>     https://bugs.python.org/issue17180
> 
>     "XML vulnerabilities in Python"
>     https://bugs.python.org/issue17239
> 
>     "fflush called on pointer to potentially closed file" (Windows only)
>     https://bugs.python.org/issue19050
> 
> It'd be nice to resolve all those issues, one way or another, before we
> retire 3.4.

So that 3.4 dies in good health?

Regards

Antoine.
_______________________________________________
python-committers mailing list
python-committers at python.org
https://mail.python.org/mailman/listinfo/python-committers
Code of Conduct: https://www.python.org/psf/codeofconduct/

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180813/7084d32e/attachment.html>

From brian at python.org  Wed Aug 15 09:50:19 2018
From: brian at python.org (Brian Curtin)
Date: Wed, 15 Aug 2018 09:50:19 -0400
Subject: [python-committers] MSDN Subscriptions/Renewals
Message-ID: <CAD+XWwo6Dfy0=kwb1KmW9pNXA7BM0sOMZJfBzMNU+=xOeSjDZg@mail.gmail.com>

Hey everyone,

I've had a few people reach out to me recently (or not so recently; sorry
about that) about renewals for their MSDN subscriptions. If yours is
expired or soon to expire, please send me the email address you're using to
login, your full name, and your mailing address, and after I've received a
bunch of responses I'll send them over and you should get an email from
Microsoft in a few days.

NOTE: If you've contacted me in the last while and haven't received a
response, please respond here. I'm sorry for leaving you hanging.

If you've never had a subscription but would like one, please send me the
email address you'll use as a login, your full name, and your mailing
address. This will give you access to Microsoft's Developer Network, which
includes access to things like Visual Studio and Windows licenses that we
can use for working on Python.

Thanks for everyone's work on Python!

Brian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180815/92428e76/attachment.html>

From steve.dower at python.org  Wed Aug 15 11:18:19 2018
From: steve.dower at python.org (Steve Dower)
Date: Wed, 15 Aug 2018 08:18:19 -0700
Subject: [python-committers] MSDN Subscriptions/Renewals
In-Reply-To: <CAD+XWwo6Dfy0=kwb1KmW9pNXA7BM0sOMZJfBzMNU+=xOeSjDZg@mail.gmail.com>
References: <CAD+XWwo6Dfy0=kwb1KmW9pNXA7BM0sOMZJfBzMNU+=xOeSjDZg@mail.gmail.com>
Message-ID: <075f4882-e2fd-875d-f77c-6b8be487494e@python.org>

On 15Aug2018 0650, Brian Curtin wrote:
> This will give you access to Microsoft's Developer 
> Network, which includes access to things like Visual Studio and Windows 
> licenses that we can use for working on Python.

Just to clarify one thing: you don't need a special license to get 
Visual Studio Community Edition to work on Python, even within a big 
company - it's free for open source work, and has everything we need.

But request the MSDN Subscription anyway. It looks good to have a lot of 
demand coming from the Python community :) (plus it should include a 
chunk of Azure time if you need VMs, and probably some VSTS bonuses 
these days though I haven't checked that).

> Thanks for everyone's work on Python!

+1, and thanks Brian for continuing to coordinate this!

Cheers,
Steve

From jim.baker at python.org  Wed Aug 15 12:33:14 2018
From: jim.baker at python.org (Jim Baker)
Date: Wed, 15 Aug 2018 10:33:14 -0600
Subject: [python-committers] MSDN Subscriptions/Renewals
In-Reply-To: <075f4882-e2fd-875d-f77c-6b8be487494e@python.org>
References: <CAD+XWwo6Dfy0=kwb1KmW9pNXA7BM0sOMZJfBzMNU+=xOeSjDZg@mail.gmail.com>
 <075f4882-e2fd-875d-f77c-6b8be487494e@python.org>
Message-ID: <CAOhO=aOLQFmiHYZHAn66UyAiwetMbkXCF_socPjPP6znzGsh6w@mail.gmail.com>

Brian,

Thanks again for helping here!

Two additional experience stories on why MSDN is valuable for those of
working on the Python language:

   - Some of us otherwise don't run Windows devices, but would like to
   support Windows, across potentially a range of versions and natural
   languages ? and their encodings. In particular, we have used MSDN to ensure
   that Jython runs quite reasonably well on Windows. (This was a big focus in
   the Jython 2.7.0 release in fact, and continues to be the case.)
   - I also used an Excel download from MSDN to verify that Jython code
   going against Apache POI (https://poi.apache.org/) worked correctly with
   both Windows and Excel; and therefore was able to write up this experience
   with Josh Juneau for an article in the Nov/Dec 2015 issue of Java Magazine.

- Jim

On Wed, Aug 15, 2018 at 9:18 AM, Steve Dower <steve.dower at python.org> wrote:

> On 15Aug2018 0650, Brian Curtin wrote:
>
>> This will give you access to Microsoft's Developer Network, which
>> includes access to things like Visual Studio and Windows licenses that we
>> can use for working on Python.
>>
>
> Just to clarify one thing: you don't need a special license to get Visual
> Studio Community Edition to work on Python, even within a big company -
> it's free for open source work, and has everything we need.
>
> But request the MSDN Subscription anyway. It looks good to have a lot of
> demand coming from the Python community :) (plus it should include a chunk
> of Azure time if you need VMs, and probably some VSTS bonuses these days
> though I haven't checked that).
>
> Thanks for everyone's work on Python!
>>
>
> +1, and thanks Brian for continuing to coordinate this!
>
> Cheers,
> Steve
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180815/67b21ae9/attachment.html>

From vstinner at redhat.com  Mon Aug 20 08:52:28 2018
From: vstinner at redhat.com (Victor Stinner)
Date: Mon, 20 Aug 2018 14:52:28 +0200
Subject: [python-committers] Winding down 3.4
In-Reply-To: <55df745c-bf49-9849-0e64-b54b797ca0f1@hastings.org>
References: <55df745c-bf49-9849-0e64-b54b797ca0f1@hastings.org>
Message-ID: <CA+3bQGH0AbaWGyCNRHZ3E_TOS_mXGxWi0+SmT6-irZEAuaTqUg@mail.gmail.com>

> "shutil copy* unsafe on POSIX - they preserve setuid/setgit bits"
> https://bugs.python.org/issue17180

There is no fix. A fix may break the backward compatibility. Is it really
worth it for the last 3.4 release?

> "XML vulnerabilities in Python"
> https://bugs.python.org/issue17239

Bug inactive since 2015. I don't expect that anyone will step in next weeks
with a wonderful solution to all XML issues. I suggest to ignore this one
as well, this issue is as old as XML support in Python and I am not aware
of any victim of these issues.

Obviously, it would be "nice" to see a fix for these issues but it seems
like core devs are more interested to work on other topics and other
security issues.


> "fflush called on pointer to potentially closed file" (Windows only)
> https://bugs.python.org/issue19050

It seems like two core devs are opposed to fix this issue.

--

There are open security issues on the HTTP server and urllib. I am more
concerned by these issues, but it's hard to fix them, there is a risk of
introducing regressions.

Victor
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180820/581125e3/attachment.html>

From vstinner at redhat.com  Mon Aug 20 18:19:50 2018
From: vstinner at redhat.com (Victor Stinner)
Date: Tue, 21 Aug 2018 00:19:50 +0200
Subject: [python-committers] MSDN Subscriptions/Renewals
In-Reply-To: <075f4882-e2fd-875d-f77c-6b8be487494e@python.org>
References: <CAD+XWwo6Dfy0=kwb1KmW9pNXA7BM0sOMZJfBzMNU+=xOeSjDZg@mail.gmail.com>
 <075f4882-e2fd-875d-f77c-6b8be487494e@python.org>
Message-ID: <CA+3bQGH9qkH+JQDWGaXptEcTbVc_e62C7Tc5vZYv8jk-=X8wtQ@mail.gmail.com>

Steve wrote:
> Just to clarify one thing: you don't need a special license to get Visual
Studio Community Edition to work on Python, even within a big company -
it's free for open source work, and has everything we need.

My employer gave me a laptop without Windows license. It is likely the case
for Apple fans as well. MSDN provide a legal Windows license which is
required to develop on Windows ;-)

Victor
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180821/8b916951/attachment.html>

From larry at hastings.org  Tue Aug 21 01:36:00 2018
From: larry at hastings.org (Larry Hastings)
Date: Mon, 20 Aug 2018 22:36:00 -0700
Subject: [python-committers] Winding down 3.4
In-Reply-To: <CA+3bQGH0AbaWGyCNRHZ3E_TOS_mXGxWi0+SmT6-irZEAuaTqUg@mail.gmail.com>
References: <55df745c-bf49-9849-0e64-b54b797ca0f1@hastings.org>
 <CA+3bQGH0AbaWGyCNRHZ3E_TOS_mXGxWi0+SmT6-irZEAuaTqUg@mail.gmail.com>
Message-ID: <c0fd7257-e2d3-c133-5f94-7b99e06cedce@hastings.org>


If they're really all wontfix, maybe we should mark them as wontfix, 
thus giving 3.4 a sendoff worthy of its heroic stature.

Godspeed, and may a flight of angels sing thee to thy rest,


//arry/

On 08/20/2018 05:52 AM, Victor Stinner wrote:
> > "shutil copy* unsafe on POSIX - they preserve setuid/setgit bits"
> > https://bugs.python.org/issue17180
>
> There is no fix. A fix may break the backward compatibility. Is it 
> really worth it for the last 3.4 release?
>
> > "XML vulnerabilities in Python"
> > https://bugs.python.org/issue17239
>
> Bug inactive since 2015. I don't expect that anyone will step in next 
> weeks with a wonderful solution to all XML issues. I suggest to ignore 
> this one as well, this issue is as old as XML support in Python and I 
> am not aware of any victim of these issues.
>
> Obviously, it would be "nice" to see a fix for these issues but it 
> seems like core devs are more interested to work on other topics and 
> other security issues.
>
>
> > "fflush called on pointer to potentially closed file" (Windows only)
> > https://bugs.python.org/issue19050
>
> It seems like two core devs are opposed to fix this issue.
>
> --
>
> There are open security issues on the HTTP server and urllib. I am 
> more concerned by these issues, but it's hard to fix them, there is a 
> risk of introducing regressions.
>
> Victor 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180820/8f19e58a/attachment.html>

