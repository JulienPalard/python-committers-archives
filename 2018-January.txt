From brett at python.org  Mon Jan  1 14:03:11 2018
From: brett at python.org (Brett Cannon)
Date: Mon, 01 Jan 2018 19:03:11 +0000
Subject: [python-committers] Travis-CI breakdown
In-Reply-To: <75dd4dd4-ac38-ce11-74e1-ae4c1ab4c4bb@python.org>
References: <75dd4dd4-ac38-ce11-74e1-ae4c1ab4c4bb@python.org>
Message-ID: <CAP1=2W4cCHiKwRCF=sY8S4=7Ya33m9sQ3cDheYiLVi=KmVfo5A@mail.gmail.com>

Donald has always been our intermediary as he has connections over there.

Also realize that Circle CI came forward on the core-workflow mailing list
asking if we were willing to switch, but I didn't hear back after saying
what we would probably need to make the switch.

On Sun, Dec 31, 2017, 12:37 Antoine Pitrou, <antoine at python.org> wrote:

>
> Hi,
>
> Do we have a contact over at Travis-CI?  Their Linux build
> infrastructure has become crazily slow lately, something is clearly
> going wrong.
>
> Regards
>
> Antoine.
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180101/f1fd013d/attachment.html>

From antoine at python.org  Mon Jan  1 16:51:10 2018
From: antoine at python.org (Antoine Pitrou)
Date: Mon, 1 Jan 2018 22:51:10 +0100
Subject: [python-committers] Travis-CI breakdown
In-Reply-To: <CAP1=2W4cCHiKwRCF=sY8S4=7Ya33m9sQ3cDheYiLVi=KmVfo5A@mail.gmail.com>
References: <75dd4dd4-ac38-ce11-74e1-ae4c1ab4c4bb@python.org>
 <CAP1=2W4cCHiKwRCF=sY8S4=7Ya33m9sQ3cDheYiLVi=KmVfo5A@mail.gmail.com>
Message-ID: <e4296b90-53af-962b-cd70-3f96d30a2e14@python.org>


Travis-CI seem to be acting on it now.
https://github.com/travis-ci/travis-ci/issues/8991#issuecomment-354673133

Regards

Antoine.


Le 01/01/2018 ? 20:03, Brett Cannon a ?crit?:
> Donald has always been our intermediary as he has connections over there.
> 
> Also realize that Circle CI came forward on the core-workflow mailing
> list asking if we were willing to switch, but I didn't hear back after
> saying what we would probably need to make the switch.
> 
> On Sun, Dec 31, 2017, 12:37 Antoine Pitrou, <antoine at python.org
> <mailto:antoine at python.org>> wrote:
> 
> 
>     Hi,
> 
>     Do we have a contact over at Travis-CI?? Their Linux build
>     infrastructure has become crazily slow lately, something is clearly
>     going wrong.
> 
>     Regards
> 
>     Antoine.
>     _______________________________________________
>     python-committers mailing list
>     python-committers at python.org <mailto:python-committers at python.org>
>     https://mail.python.org/mailman/listinfo/python-committers
>     Code of Conduct: https://www.python.org/psf/codeofconduct/
> 

From eric at trueblade.com  Sat Jan  6 11:43:40 2018
From: eric at trueblade.com (Eric V. Smith)
Date: Sat, 6 Jan 2018 11:43:40 -0500
Subject: [python-committers] How to force Travis to re-run?
Message-ID: <fc482938-ef4c-643d-15e2-a7e54bba3974@trueblade.com>

I'm trying to merge this: https://github.com/python/cpython/pull/5113

Travis failed, but not due to something in this PR (looks like a random 
networking failure). How do I trigger the Travis check to re-run? Or I 
guess just skipping it would be okay as a last resort, but I'd really 
like to try re-running it first.

Thanks.
Eric.

From eric at trueblade.com  Sat Jan  6 11:48:56 2018
From: eric at trueblade.com (Eric V. Smith)
Date: Sat, 6 Jan 2018 11:48:56 -0500
Subject: [python-committers] How to force Travis to re-run?
In-Reply-To: <CAFRnB2XGXg_Jkm21irwpbk_Y4jovpaP1-CNF6yKSCbxYDF0nCg@mail.gmail.com>
References: <fc482938-ef4c-643d-15e2-a7e54bba3974@trueblade.com>
 <CAFRnB2XGXg_Jkm21irwpbk_Y4jovpaP1-CNF6yKSCbxYDF0nCg@mail.gmail.com>
Message-ID: <2230aca4-d408-f754-d3ab-7746ce1d6ab4@trueblade.com>

Thanks, Alex. I'll check that next time. And thanks for kicking it off 
for me.

Eric.

On 1/6/2018 11:45 AM, Alex Gaynor wrote:
> If you look at the travis-ui, do you see little "restart" arrows 
> (example attached)? Those are what do it -- I went ahead and restarted 
> the failed job on this one.
> 
> Alex
> 
> On Sat, Jan 6, 2018 at 11:43 AM, Eric V. Smith <eric at trueblade.com 
> <mailto:eric at trueblade.com>> wrote:
> 
>     I'm trying to merge this:
>     https://github.com/python/cpython/pull/5113
>     <https://github.com/python/cpython/pull/5113>
> 
>     Travis failed, but not due to something in this PR (looks like a
>     random networking failure). How do I trigger the Travis check to
>     re-run? Or I guess just skipping it would be okay as a last resort,
>     but I'd really like to try re-running it first.
> 
>     Thanks.
>     Eric.
>     _______________________________________________
>     python-committers mailing list
>     python-committers at python.org <mailto:python-committers at python.org>
>     https://mail.python.org/mailman/listinfo/python-committers
>     <https://mail.python.org/mailman/listinfo/python-committers>
>     Code of Conduct: https://www.python.org/psf/codeofconduct/
>     <https://www.python.org/psf/codeofconduct/>
> 
> 
> 
> 
> -- 
> "I disapprove of what you say, but I will defend to the death your right 
> to say it." -- Evelyn Beatrice Hall (summarizing Voltaire)
> "The people's good is the highest law." -- Cicero
> GPG Key fingerprint:?D1B3 ADC0 E023 8CA6
> 


From alex.gaynor at gmail.com  Sat Jan  6 11:45:44 2018
From: alex.gaynor at gmail.com (Alex Gaynor)
Date: Sat, 6 Jan 2018 11:45:44 -0500
Subject: [python-committers] How to force Travis to re-run?
In-Reply-To: <fc482938-ef4c-643d-15e2-a7e54bba3974@trueblade.com>
References: <fc482938-ef4c-643d-15e2-a7e54bba3974@trueblade.com>
Message-ID: <CAFRnB2XGXg_Jkm21irwpbk_Y4jovpaP1-CNF6yKSCbxYDF0nCg@mail.gmail.com>

If you look at the travis-ui, do you see little "restart" arrows (example
attached)? Those are what do it -- I went ahead and restarted the failed
job on this one.

Alex

On Sat, Jan 6, 2018 at 11:43 AM, Eric V. Smith <eric at trueblade.com> wrote:

> I'm trying to merge this: https://github.com/python/cpython/pull/5113
>
> Travis failed, but not due to something in this PR (looks like a random
> networking failure). How do I trigger the Travis check to re-run? Or I
> guess just skipping it would be okay as a last resort, but I'd really like
> to try re-running it first.
>
> Thanks.
> Eric.
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>



-- 
"I disapprove of what you say, but I will defend to the death your right to
say it." -- Evelyn Beatrice Hall (summarizing Voltaire)
"The people's good is the highest law." -- Cicero
GPG Key fingerprint: D1B3 ADC0 E023 8CA6
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180106/ffd997ed/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Screen Shot 2018-01-06 at 11.45.20 AM.png
Type: image/png
Size: 7298 bytes
Desc: not available
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180106/ffd997ed/attachment.png>

From antoine at python.org  Sat Jan  6 13:59:16 2018
From: antoine at python.org (Antoine Pitrou)
Date: Sat, 6 Jan 2018 19:59:16 +0100
Subject: [python-committers] Security: please enable 2-factor
 authentication on GitHub and your email
In-Reply-To: <CAMpsgwY7AHmty+fQsCu=4vNP33yh2TgQxRU5_yE6TtWi1ETKxQ@mail.gmail.com>
References: <CAMpsgwY7AHmty+fQsCu=4vNP33yh2TgQxRU5_yE6TtWi1ETKxQ@mail.gmail.com>
Message-ID: <c231db54-8001-8a13-3f73-d8da46bb9d90@python.org>


Hi,

So, for the record (even though this discussion has petered out), I've
just bought a U2F key and it doesn't work on Ubuntu Firefox (though it
works on Chromium).  So it's pretty much unusable for me.

Regards

Antoine.

From alex.gaynor at gmail.com  Sat Jan  6 14:00:57 2018
From: alex.gaynor at gmail.com (Alex Gaynor)
Date: Sat, 6 Jan 2018 14:00:57 -0500
Subject: [python-committers] Security: please enable 2-factor
 authentication on GitHub and your email
In-Reply-To: <c231db54-8001-8a13-3f73-d8da46bb9d90@python.org>
References: <CAMpsgwY7AHmty+fQsCu=4vNP33yh2TgQxRU5_yE6TtWi1ETKxQ@mail.gmail.com>
 <c231db54-8001-8a13-3f73-d8da46bb9d90@python.org>
Message-ID: <CAFRnB2XVz6ah0+Qz=7RCj00gGzux1oF5F7t0wWEYTVbi9p_+-Q@mail.gmail.com>

Hey Antoine,

Assuming you're on Firefox57, it requires a pref -- once the WebAuthn spec
is finalized we'll drop the pref --
https://mobile.twitter.com/jamespugjones/status/912314952232267777

Alex

On Sat, Jan 6, 2018 at 1:59 PM, Antoine Pitrou <antoine at python.org> wrote:

>
> Hi,
>
> So, for the record (even though this discussion has petered out), I've
> just bought a U2F key and it doesn't work on Ubuntu Firefox (though it
> works on Chromium).  So it's pretty much unusable for me.
>
> Regards
>
> Antoine.
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>



-- 
"I disapprove of what you say, but I will defend to the death your right to
say it." -- Evelyn Beatrice Hall (summarizing Voltaire)
"The people's good is the highest law." -- Cicero
GPG Key fingerprint: D1B3 ADC0 E023 8CA6
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180106/d6baa91f/attachment.html>

From kushaldas at gmail.com  Sat Jan  6 14:01:34 2018
From: kushaldas at gmail.com (Kushal Das)
Date: Sun, 7 Jan 2018 00:31:34 +0530
Subject: [python-committers] Security: please enable 2-factor
 authentication on GitHub and your email
In-Reply-To: <c231db54-8001-8a13-3f73-d8da46bb9d90@python.org>
References: <CAMpsgwY7AHmty+fQsCu=4vNP33yh2TgQxRU5_yE6TtWi1ETKxQ@mail.gmail.com>
 <c231db54-8001-8a13-3f73-d8da46bb9d90@python.org>
Message-ID: <CAAzeMbyPxQ4395zxow-PuJ_iD=OJU2NKr0rSqhSTUK0RJmKDeg@mail.gmail.com>

On Sun, Jan 7, 2018 at 12:29 AM, Antoine Pitrou <antoine at python.org> wrote:
>
> Hi,
>
> So, for the record (even though this discussion has petered out), I've
> just bought a U2F key and it doesn't work on Ubuntu Firefox (though it
> works on Chromium).  So it's pretty much unusable for me.
>
You need the latest version of the Firefox, I guess that is 57.

Kushal
-- 
Staff, Freedom of the Press Foundation
CPython Core Developer
Director, Python Software Foundation
https://kushaldas.in

From antoine at python.org  Sat Jan  6 14:04:40 2018
From: antoine at python.org (Antoine Pitrou)
Date: Sat, 6 Jan 2018 20:04:40 +0100
Subject: [python-committers] Security: please enable 2-factor
 authentication on GitHub and your email
In-Reply-To: <CAFRnB2XVz6ah0+Qz=7RCj00gGzux1oF5F7t0wWEYTVbi9p_+-Q@mail.gmail.com>
References: <CAMpsgwY7AHmty+fQsCu=4vNP33yh2TgQxRU5_yE6TtWi1ETKxQ@mail.gmail.com>
 <c231db54-8001-8a13-3f73-d8da46bb9d90@python.org>
 <CAFRnB2XVz6ah0+Qz=7RCj00gGzux1oF5F7t0wWEYTVbi9p_+-Q@mail.gmail.com>
Message-ID: <5d5b6c94-5e2c-3d8d-00d0-24b76cc7c685@python.org>


Le 06/01/2018 ? 20:00, Alex Gaynor a ?crit?:
> Hey Antoine,
> 
> Assuming you're on Firefox57, it requires a pref -- once the WebAuthn
> spec is finalized we'll drop the pref
> --?https://mobile.twitter.com/jamespugjones/status/912314952232267777

Yes, I already did so...  I'm using
https://demo.yubico.com/u2f?tab=register and get the following error
(yes, apparently their server is using Python somehow? and it's running
under /root):

"""
Registration failed!

Make sure you have a U2F device connected, and try again.

 Traceback (most recent call last):
  File "/root/python-u2flib-server-demo/examples/yubiauth_server.py",
line 161, in __call__
    raise Exception("FIDO Client error: %s" % error)
Exception: FIDO Client error: 1 (OTHER ERROR)
"""

I have AppArmor enabled on Firefox, I may try to disable it.

Regards

Antoine.

From antoine at python.org  Sat Jan  6 14:20:12 2018
From: antoine at python.org (Antoine Pitrou)
Date: Sat, 6 Jan 2018 20:20:12 +0100
Subject: [python-committers] Security: please enable 2-factor
 authentication on GitHub and your email
In-Reply-To: <5d5b6c94-5e2c-3d8d-00d0-24b76cc7c685@python.org>
References: <CAMpsgwY7AHmty+fQsCu=4vNP33yh2TgQxRU5_yE6TtWi1ETKxQ@mail.gmail.com>
 <c231db54-8001-8a13-3f73-d8da46bb9d90@python.org>
 <CAFRnB2XVz6ah0+Qz=7RCj00gGzux1oF5F7t0wWEYTVbi9p_+-Q@mail.gmail.com>
 <5d5b6c94-5e2c-3d8d-00d0-24b76cc7c685@python.org>
Message-ID: <88b692b7-5b02-442f-2a9a-4f7cb2926e52@python.org>


Le 06/01/2018 ? 20:04, Antoine Pitrou a ?crit?:
> 
> I have AppArmor enabled on Firefox, I may try to disable it.

... Nothing changed unfortunately.

Regards

Antoine.

From barry at python.org  Sat Jan  6 14:42:12 2018
From: barry at python.org (Barry Warsaw)
Date: Sat, 6 Jan 2018 14:42:12 -0500
Subject: [python-committers] Security: please enable 2-factor
 authentication on GitHub and your email
In-Reply-To: <CAFRnB2XVz6ah0+Qz=7RCj00gGzux1oF5F7t0wWEYTVbi9p_+-Q@mail.gmail.com>
References: <CAMpsgwY7AHmty+fQsCu=4vNP33yh2TgQxRU5_yE6TtWi1ETKxQ@mail.gmail.com>
 <c231db54-8001-8a13-3f73-d8da46bb9d90@python.org>
 <CAFRnB2XVz6ah0+Qz=7RCj00gGzux1oF5F7t0wWEYTVbi9p_+-Q@mail.gmail.com>
Message-ID: <674BAB3D-53AE-454B-8792-9EA04D144EDB@python.org>

On Jan 6, 2018, at 14:00, Alex Gaynor <alex.gaynor at gmail.com> wrote:
> 
> Hey Antoine,
> 
> Assuming you're on Firefox57, it requires a pref -- once the WebAuthn spec is finalized we'll drop the pref -- https://mobile.twitter.com/jamespugjones/status/912314952232267777

Oh wow, this is exciting!  I?ve been annoyed by the lack of support for my Yubikey in FF57, but I just enabled these and quick check by logging into GH seems to show that it works, at least for some sites.  Thanks for the link.

-Barry

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180106/a1603368/attachment.sig>

From mariatta.wijaya at gmail.com  Sat Jan  6 13:32:09 2018
From: mariatta.wijaya at gmail.com (Mariatta Wijaya)
Date: Sat, 6 Jan 2018 10:32:09 -0800
Subject: [python-committers] How to force Travis to re-run?
In-Reply-To: <fc482938-ef4c-643d-15e2-a7e54bba3974@trueblade.com>
References: <fc482938-ef4c-643d-15e2-a7e54bba3974@trueblade.com>
Message-ID: <CAGbohnarprRJ825ydWSY3-aqRyEJ3m+mmfg-Qf6yBx8hTdxr_Q@mail.gmail.com>

If you click the "Details" link to travis ci, there's a "Restart build"
button that looks subtle and took me a while to find it.
Attaching screenshot with annotation of where it is.

Alternatively, closing and re-opening the PR will also trigger travis.

Mariatta Wijaya

On Sat, Jan 6, 2018 at 8:43 AM, Eric V. Smith <eric at trueblade.com> wrote:

> I'm trying to merge this: https://github.com/python/cpython/pull/5113
>
> Travis failed, but not due to something in this PR (looks like a random
> networking failure). How do I trigger the Travis check to re-run? Or I
> guess just skipping it would be okay as a last resort, but I'd really like
> to try re-running it first.
>
> Thanks.
> Eric.
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180106/39d21e1b/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: RestartTravis.png
Type: image/png
Size: 137061 bytes
Desc: not available
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180106/39d21e1b/attachment-0001.png>

From antoine at python.org  Sun Jan  7 11:42:44 2018
From: antoine at python.org (Antoine Pitrou)
Date: Sun, 7 Jan 2018 17:42:44 +0100
Subject: [python-committers] Security: please enable 2-factor
 authentication on GitHub and your email
In-Reply-To: <674BAB3D-53AE-454B-8792-9EA04D144EDB@python.org>
References: <CAMpsgwY7AHmty+fQsCu=4vNP33yh2TgQxRU5_yE6TtWi1ETKxQ@mail.gmail.com>
 <c231db54-8001-8a13-3f73-d8da46bb9d90@python.org>
 <CAFRnB2XVz6ah0+Qz=7RCj00gGzux1oF5F7t0wWEYTVbi9p_+-Q@mail.gmail.com>
 <674BAB3D-53AE-454B-8792-9EA04D144EDB@python.org>
Message-ID: <19266534-8d68-fd41-702d-fc18bff3a76d@python.org>


It turns out that is a bug with Ubuntu's package for Firefox.  It works
fine with the upstream build... :-(

https://bugs.launchpad.net/ubuntu/+source/firefox/+bug/1741768

Regards

Antoine.


Le 06/01/2018 ? 20:42, Barry Warsaw a ?crit?:
> On Jan 6, 2018, at 14:00, Alex Gaynor <alex.gaynor at gmail.com> wrote:
>>
>> Hey Antoine,
>>
>> Assuming you're on Firefox57, it requires a pref -- once the WebAuthn spec is finalized we'll drop the pref -- https://mobile.twitter.com/jamespugjones/status/912314952232267777
> 
> Oh wow, this is exciting!  I?ve been annoyed by the lack of support for my Yubikey in FF57, but I just enabled these and quick check by logging into GH seems to show that it works, at least for some sites.  Thanks for the link.
> 
> -Barry
> 

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 473 bytes
Desc: OpenPGP digital signature
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180107/80266e12/attachment.sig>

From alex.gaynor at gmail.com  Sun Jan  7 11:43:28 2018
From: alex.gaynor at gmail.com (Alex Gaynor)
Date: Sun, 7 Jan 2018 11:43:28 -0500
Subject: [python-committers] Security: please enable 2-factor
 authentication on GitHub and your email
In-Reply-To: <19266534-8d68-fd41-702d-fc18bff3a76d@python.org>
References: <CAMpsgwY7AHmty+fQsCu=4vNP33yh2TgQxRU5_yE6TtWi1ETKxQ@mail.gmail.com>
 <c231db54-8001-8a13-3f73-d8da46bb9d90@python.org>
 <CAFRnB2XVz6ah0+Qz=7RCj00gGzux1oF5F7t0wWEYTVbi9p_+-Q@mail.gmail.com>
 <674BAB3D-53AE-454B-8792-9EA04D144EDB@python.org>
 <19266534-8d68-fd41-702d-fc18bff3a76d@python.org>
Message-ID: <CAFRnB2Xn9RrN=M=bZ2y1hgNdiwZwtVPfqqmxdCbwyS1N3ZQ58g@mail.gmail.com>

Thanks -- I'll pass it along to the team working on U2F at Mozilla.

Alex

On Sun, Jan 7, 2018 at 11:42 AM, Antoine Pitrou <antoine at python.org> wrote:

>
> It turns out that is a bug with Ubuntu's package for Firefox.  It works
> fine with the upstream build... :-(
>
> https://bugs.launchpad.net/ubuntu/+source/firefox/+bug/1741768
>
> Regards
>
> Antoine.
>
>
> Le 06/01/2018 ? 20:42, Barry Warsaw a ?crit :
> > On Jan 6, 2018, at 14:00, Alex Gaynor <alex.gaynor at gmail.com> wrote:
> >>
> >> Hey Antoine,
> >>
> >> Assuming you're on Firefox57, it requires a pref -- once the WebAuthn
> spec is finalized we'll drop the pref -- https://mobile.twitter.com/
> jamespugjones/status/912314952232267777
> >
> > Oh wow, this is exciting!  I?ve been annoyed by the lack of support for
> my Yubikey in FF57, but I just enabled these and quick check by logging
> into GH seems to show that it works, at least for some sites.  Thanks for
> the link.
> >
> > -Barry
> >
>
>


-- 
"I disapprove of what you say, but I will defend to the death your right to
say it." -- Evelyn Beatrice Hall (summarizing Voltaire)
"The people's good is the highest law." -- Cicero
GPG Key fingerprint: D1B3 ADC0 E023 8CA6
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180107/3fff6ea7/attachment.html>

From nad at python.org  Tue Jan  9 10:48:01 2018
From: nad at python.org (Ned Deily)
Date: Tue, 9 Jan 2018 10:48:01 -0500
Subject: [python-committers] [RELEASE] Python 3.7.0a4 is now available for
 testing
Message-ID: <A105C079-9B46-478E-82C2-41047082498E@python.org>

Python 3.7.0a4 is the last of four planned alpha releases of Python 3.7,
the next feature release of Python.  During the alpha phase, Python 3.7
remains under heavy development: additional features will be added
and existing features may be modified or deleted.  Please keep in mind
that this is a preview release and its use is not recommended for
production environments.  The next preview release, 3.7.0b1, is planned
for 2018-01-29. You can find Python 3.7.0a4 and more information here:

    https://www.python.org/downloads/release/python-370a4/

--
  Ned Deily
  nad at python.org -- []


From brett at python.org  Wed Jan 10 15:45:34 2018
From: brett at python.org (Brett Cannon)
Date: Wed, 10 Jan 2018 20:45:34 +0000
Subject: [python-committers] AppVeyor is now required to pass on PRs
Message-ID: <CAP1=2W5eVY0dWNYaLkxhSF0_w9RDhtsJ8md9ePiP-nz9+DWW5w@mail.gmail.com>

I just switched it on to help make sure we don't break on Windows just
before hitting beta. If it turns out AppVeyor isn't stable enough I will
switch it back off.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180110/6f7edc89/attachment.html>

From antoine at python.org  Mon Jan 15 17:41:55 2018
From: antoine at python.org (Antoine Pitrou)
Date: Mon, 15 Jan 2018 23:41:55 +0100
Subject: [python-committers] AppVeyor is now required to pass on PRs
In-Reply-To: <CAP1=2W5eVY0dWNYaLkxhSF0_w9RDhtsJ8md9ePiP-nz9+DWW5w@mail.gmail.com>
References: <CAP1=2W5eVY0dWNYaLkxhSF0_w9RDhtsJ8md9ePiP-nz9+DWW5w@mail.gmail.com>
Message-ID: <cf56b4d2-44a1-a1c8-ed8f-2acc0280ab96@python.org>


Hi Brett,

Stability doesn't appear to be a problem, but we have much less
parallelism on AppVeyor than we do on Travis-CI.  This may make waiting
times longer than they used to be.

Apparently 3.6 builds (and perhaps 2.7) trigger two sequential AppVeyor
jobs:
https://ci.appveyor.com/project/python/cpython/build/3.6build10551

Regards

Antoine.


Le 10/01/2018 ? 21:45, Brett Cannon a ?crit?:
> I just switched it on to help make sure we don't break on Windows just
> before hitting beta. If it turns out AppVeyor isn't stable enough I will
> switch it back off.
> 
> 
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
> 

From brett at python.org  Mon Jan 15 19:47:55 2018
From: brett at python.org (Brett Cannon)
Date: Tue, 16 Jan 2018 00:47:55 +0000
Subject: [python-committers] AppVeyor is now required to pass on PRs
In-Reply-To: <cf56b4d2-44a1-a1c8-ed8f-2acc0280ab96@python.org>
References: <CAP1=2W5eVY0dWNYaLkxhSF0_w9RDhtsJ8md9ePiP-nz9+DWW5w@mail.gmail.com>
 <cf56b4d2-44a1-a1c8-ed8f-2acc0280ab96@python.org>
Message-ID: <CAP1=2W6d6Cj_vndWtekjY7z_+8CQrs11oKXM1uHXe2Y46=Ycyg@mail.gmail.com>

On Mon, 15 Jan 2018 at 14:42 Antoine Pitrou <antoine at python.org> wrote:

>
> Hi Brett,
>
> Stability doesn't appear to be a problem, but we have much less
> parallelism on AppVeyor than we do on Travis-CI.  This may make waiting
> times longer than they used to be.
>
> Apparently 3.6 builds (and perhaps 2.7) trigger two sequential AppVeyor
> jobs:
> https://ci.appveyor.com/project/python/cpython/build/3.6build10551


If the wait times become an issue for anyone then let me know and we can
re-evaluate the situation.

-Brett


>
>
> Regards
>
> Antoine.
>
>
> Le 10/01/2018 ? 21:45, Brett Cannon a ?crit :
> > I just switched it on to help make sure we don't break on Windows just
> > before hitting beta. If it turns out AppVeyor isn't stable enough I will
> > switch it back off.
> >
> >
> > _______________________________________________
> > python-committers mailing list
> > python-committers at python.org
> > https://mail.python.org/mailman/listinfo/python-committers
> > Code of Conduct: https://www.python.org/psf/codeofconduct/
> >
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180116/39f3c2c4/attachment.html>

From steve.dower at python.org  Mon Jan 15 20:49:34 2018
From: steve.dower at python.org (Steve Dower)
Date: Tue, 16 Jan 2018 12:49:34 +1100
Subject: [python-committers] AppVeyor is now required to pass on PRs
In-Reply-To: <CAP1=2W6d6Cj_vndWtekjY7z_+8CQrs11oKXM1uHXe2Y46=Ycyg@mail.gmail.com>
References: <CAP1=2W5eVY0dWNYaLkxhSF0_w9RDhtsJ8md9ePiP-nz9+DWW5w@mail.gmail.com>
 <cf56b4d2-44a1-a1c8-ed8f-2acc0280ab96@python.org>
 <CAP1=2W6d6Cj_vndWtekjY7z_+8CQrs11oKXM1uHXe2Y46=Ycyg@mail.gmail.com>
Message-ID: <mailman.30.1516067377.2623.python-committers@python.org>

Python 3 runs builds against the old MSVC (14.0) and the current one (14.1). I?m happy to fully drop support for the older one and remove those builds, but there was a bit of push back when first proposed. (Both toolsets produce binary compatible outputs, but the newer one has better library/compiler support and we may break people who don?t want to upgrade if we use it.)

Top-posted from my Windows phone

From: Brett Cannon
Sent: Tuesday, January 16, 2018 11:49
To: Antoine Pitrou
Cc: python-committers
Subject: Re: [python-committers] AppVeyor is now required to pass on PRs


On Mon, 15 Jan 2018 at 14:42 Antoine Pitrou <antoine at python.org> wrote:

Hi Brett,

Stability doesn't appear to be a problem, but we have much less
parallelism on AppVeyor than we do on Travis-CI.? This may make waiting
times longer than they used to be.

Apparently 3.6 builds (and perhaps 2.7) trigger two sequential AppVeyor
jobs:
https://ci.appveyor.com/project/python/cpython/build/3.6build10551

If the wait times become an issue for anyone then let me know and we can re-evaluate the situation.

-Brett
?


Regards

Antoine.


Le 10/01/2018 ? 21:45, Brett Cannon a ?crit?:
> I just switched it on to help make sure we don't break on Windows just
> before hitting beta. If it turns out AppVeyor isn't stable enough I will
> switch it back off.
>
>
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
_______________________________________________
python-committers mailing list
python-committers at python.org
https://mail.python.org/mailman/listinfo/python-committers
Code of Conduct: https://www.python.org/psf/codeofconduct/

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180116/cccb1899/attachment.html>

From victor.stinner at gmail.com  Tue Jan 16 19:36:30 2018
From: victor.stinner at gmail.com (Victor Stinner)
Date: Wed, 17 Jan 2018 01:36:30 +0100
Subject: [python-committers] Current Travis CI "job backlog incident"
Message-ID: <CAMpsgwZVN7R-UeAOE9Zu_fX9w=NScidZtKEfX-uKy8twfZo0+A@mail.gmail.com>

Hi,

FYI Travis CI is sick tonight:

https://www.traviscistatus.com/
Jan 17, 00:26 UTC : Update - We are still investigating the job
backlog incident.

Victor

From xdegaye at gmail.com  Wed Jan 17 09:07:49 2018
From: xdegaye at gmail.com (Xavier de Gaye)
Date: Wed, 17 Jan 2018 15:07:49 +0100
Subject: [python-committers] AppVeyor is now required to pass on PRs
In-Reply-To: <cf56b4d2-44a1-a1c8-ed8f-2acc0280ab96@python.org>
References: <CAP1=2W5eVY0dWNYaLkxhSF0_w9RDhtsJ8md9ePiP-nz9+DWW5w@mail.gmail.com>
 <cf56b4d2-44a1-a1c8-ed8f-2acc0280ab96@python.org>
Message-ID: <3569be04-ed9a-6e0a-21d1-63d0e95fd94d@gmail.com>

FWIW two Appveyor Python builds recently failed (network errors while fetching external libraries):

https://ci.appveyor.com/project/python/cpython/build/3.7build10631
https://ci.appveyor.com/project/python/cpython/build/3.7build10636

Xavier

From victor.stinner at gmail.com  Thu Jan 18 17:57:53 2018
From: victor.stinner at gmail.com (Victor Stinner)
Date: Thu, 18 Jan 2018 23:57:53 +0100
Subject: [python-committers] Pablo Galindo Salgado got bug triage permission,
 mentored by Victor
Message-ID: <CAMpsgwYjLxVUbCXU_owQV=7c6S4STRY=8KS1uZgcHd-VqZ8faw@mail.gmail.com>

Hi,

To recognize the good contributions of Pablo Galindo Salgado, I gave
him the bug triage permission on bugs.python.org.

Pablo already got 8 commits merged into master since September 2017. He is
working on non-trivial topics like designing an API to expose
posix_spawn() in the os module:
https://mail.python.org/pipermail/python-dev/2018-January/151661.html

He also fixed a timeout rounding issue, for example:
https://github.com/python/cpython/commit/59af94fa61bf90adbe624508e909b5d6ef6e8464

I will mentor Pablo during 1 month as explained in my proposed process:
https://github.com/vstinner/misc/blob/master/cpython/pep-core_dev_process.rst

Congrats Pablo!

Note: I added Pablo in CC of this email.

Victor

From jcea at jcea.es  Sat Jan 20 14:19:27 2018
From: jcea at jcea.es (Jesus Cea)
Date: Sat, 20 Jan 2018 20:19:27 +0100
Subject: [python-committers] Python workflow quirks with mercurial and
 hg-git extension
Message-ID: <fe27399c-c9c3-7753-9876-f510aac51652@jcea.es>

I plan to come back to python development (about time!) but I truly
hates git. I am experimenting with mercurial + hg-git extension and it
is quite usable (after the initial painfully slow clone time), but I am
having small quirks that I would like to iron out with a fellow more
experienced or also interested in this approach.

Anybody out there?.

If this is considered off-topic, please let me know.

-- 
Jes?s Cea Avi?n                         _/_/      _/_/_/        _/_/_/
jcea at jcea.es - http://www.jcea.es/     _/_/    _/_/  _/_/    _/_/  _/_/
Twitter: @jcea                        _/_/    _/_/          _/_/_/_/_/
jabber / xmpp:jcea at jabber.org  _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 473 bytes
Desc: OpenPGP digital signature
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180120/27de9a6e/attachment.sig>

From larry at hastings.org  Mon Jan 22 05:33:01 2018
From: larry at hastings.org (Larry Hastings)
Date: Mon, 22 Jan 2018 02:33:01 -0800
Subject: [python-committers] Slipping Python 3.5.5rc1 and 3.4.8rc1 because
 of a Travis CI issue--can someone make Travis CI happy?
Message-ID: <cad476da-01f8-7a80-5b0b-183132cef8a3@hastings.org>



I have three PRs for Python 3.5.5rc1:

    https://github.com/python/cpython/pull/4656
    https://github.com/python/cpython/pull/5197
    https://github.com/python/cpython/pull/5201

I can't merge them because Travis CI is unhappy.? All three CI tests 
fail in the same way, reporting this error:

    The command "pyenv global system 3.5" failed and exited with 1 during .

Since Travis CI is a "required check", Github won't let me merge the 
PR.? Yes I could manually merge the patches by hand but I'm hoping it 
doesn't come to that.

I'm slipping 3.4.8rc1 because I prefer to do both releases at once.

I'm hoping this problem will be resolved quickly; if we only slip the 
RCs by a day or two I won't slip the final releases (in about two weeks).


PLS SND HALP,


//arry/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180122/fd018fcd/attachment.html>

From victor.stinner at gmail.com  Mon Jan 22 05:57:11 2018
From: victor.stinner at gmail.com (Victor Stinner)
Date: Mon, 22 Jan 2018 11:57:11 +0100
Subject: [python-committers] [Python-Dev] Slipping Python 3.5.5rc1 and
 3.4.8rc1 because of a Travis CI issue--can someone make Travis CI happy?
In-Reply-To: <cad476da-01f8-7a80-5b0b-183132cef8a3@hastings.org>
References: <cad476da-01f8-7a80-5b0b-183132cef8a3@hastings.org>
Message-ID: <CAMpsgwZCE94NJ=2zK9KH=wrFm-5wiQCbNVDnHbrL1j08syp1cA@mail.gmail.com>

I created an issue with more information:
https://bugs.python.org/issue32620

Victor

2018-01-22 11:33 GMT+01:00 Larry Hastings <larry at hastings.org>:
>
>
> I have three PRs for Python 3.5.5rc1:
>
> https://github.com/python/cpython/pull/4656
> https://github.com/python/cpython/pull/5197
> https://github.com/python/cpython/pull/5201
>
> I can't merge them because Travis CI is unhappy.  All three CI tests fail in
> the same way, reporting this error:
>
> The command "pyenv global system 3.5" failed and exited with 1 during .
>
> Since Travis CI is a "required check", Github won't let me merge the PR.
> Yes I could manually merge the patches by hand but I'm hoping it doesn't
> come to that.
>
> I'm slipping 3.4.8rc1 because I prefer to do both releases at once.
>
> I'm hoping this problem will be resolved quickly; if we only slip the RCs by
> a day or two I won't slip the final releases (in about two weeks).
>
>
> PLS SND HALP,
>
>
> /arry
>
> _______________________________________________
> Python-Dev mailing list
> Python-Dev at python.org
> https://mail.python.org/mailman/listinfo/python-dev
> Unsubscribe:
> https://mail.python.org/mailman/options/python-dev/victor.stinner%40gmail.com
>

From brett at python.org  Mon Jan 22 10:51:37 2018
From: brett at python.org (Brett Cannon)
Date: Mon, 22 Jan 2018 15:51:37 +0000
Subject: [python-committers] [Python-Dev] Slipping Python 3.5.5rc1 and
 3.4.8rc1 because of a Travis CI issue--can someone make Travis CI happy?
In-Reply-To: <cad476da-01f8-7a80-5b0b-183132cef8a3@hastings.org>
References: <cad476da-01f8-7a80-5b0b-183132cef8a3@hastings.org>
Message-ID: <CAP1=2W4e02jW-2zyfDbTqC9uDmj3mVDhVWVE+MSKQbTnh5P-yg@mail.gmail.com>

I can switch off the requirement that holds admins to having to pass the
same status checks as everyone else (there's still a big warning when you
exercise this power), that way you can override the merge if you want. Not
sure if you want to ignore the CI in that case as well.

On Mon, 22 Jan 2018 at 02:33 Larry Hastings <larry at hastings.org> wrote:

>
>
> I have three PRs for Python 3.5.5rc1:
>
> https://github.com/python/cpython/pull/4656
> https://github.com/python/cpython/pull/5197
> https://github.com/python/cpython/pull/5201
>
> I can't merge them because Travis CI is unhappy.  All three CI tests fail
> in the same way, reporting this error:
>
> The command "pyenv global system 3.5" failed and exited with 1 during .
>
> Since Travis CI is a "required check", Github won't let me merge the PR.
> Yes I could manually merge the patches by hand but I'm hoping it doesn't
> come to that.
>
> I'm slipping 3.4.8rc1 because I prefer to do both releases at once.
>
> I'm hoping this problem will be resolved quickly; if we only slip the RCs
> by a day or two I won't slip the final releases (in about two weeks).
>
>
> PLS SND HALP,
>
>
> */arry*
> _______________________________________________
> Python-Dev mailing list
> Python-Dev at python.org
> https://mail.python.org/mailman/listinfo/python-dev
> Unsubscribe:
> https://mail.python.org/mailman/options/python-dev/brett%40python.org
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180122/666b1902/attachment.html>

From larry at hastings.org  Mon Jan 22 20:33:47 2018
From: larry at hastings.org (Larry Hastings)
Date: Mon, 22 Jan 2018 17:33:47 -0800
Subject: [python-committers] [Python-Dev] Slipping Python 3.5.5rc1 and
 3.4.8rc1 because of a Travis CI issue--can someone make Travis CI happy?
In-Reply-To: <CAP1=2W4e02jW-2zyfDbTqC9uDmj3mVDhVWVE+MSKQbTnh5P-yg@mail.gmail.com>
References: <cad476da-01f8-7a80-5b0b-183132cef8a3@hastings.org>
 <CAP1=2W4e02jW-2zyfDbTqC9uDmj3mVDhVWVE+MSKQbTnh5P-yg@mail.gmail.com>
Message-ID: <471aaabb-37f5-4c55-119d-c2574bc1ad64@hastings.org>



On 01/22/2018 07:51 AM, Brett Cannon wrote:
> I can switch off the requirement that holds admins to having to pass 
> the same status checks as everyone else (there's still a big warning 
> when you exercise this power), that way you can override the merge if 
> you want. Not sure if you want to ignore the CI in that case as well.

Yes, please.? I'll make you a deal: I'll download and apply the patches 
manually and run the test suite.? I'll only merge if the patch doesn't 
cause test failures.

It'd be swell if we could actually fix the builds on Travis CI 
naturally.? I assume that will happen eventually, but I don't want to 
hold up the rc's for that.

Thanks,


//arry/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180122/da748bcd/attachment.html>

From ncoghlan at gmail.com  Mon Jan 22 21:09:30 2018
From: ncoghlan at gmail.com (Nick Coghlan)
Date: Tue, 23 Jan 2018 12:09:30 +1000
Subject: [python-committers] [Python-Dev] Slipping Python 3.5.5rc1 and
 3.4.8rc1 because of a Travis CI issue--can someone make Travis CI happy?
In-Reply-To: <CAMpsgwZCE94NJ=2zK9KH=wrFm-5wiQCbNVDnHbrL1j08syp1cA@mail.gmail.com>
References: <cad476da-01f8-7a80-5b0b-183132cef8a3@hastings.org>
 <CAMpsgwZCE94NJ=2zK9KH=wrFm-5wiQCbNVDnHbrL1j08syp1cA@mail.gmail.com>
Message-ID: <CADiSq7e17+sAX=9LtSLfD9GhbGFpXdnvy8AwBs8t48N2xpHQpg@mail.gmail.com>

On 22 January 2018 at 20:57, Victor Stinner <victor.stinner at gmail.com> wrote:
> I created an issue with more information:
> https://bugs.python.org/issue32620

We shouldn't be requiring a pre-existing Python to build CPython
anyway, so it would be nice if we could just delete that step
entirely.

Cheers,
Nick.

-- 
Nick Coghlan   |   ncoghlan at gmail.com   |   Brisbane, Australia

From stefan at bytereef.org  Tue Jan 23 05:28:44 2018
From: stefan at bytereef.org (Stefan Krah)
Date: Tue, 23 Jan 2018 11:28:44 +0100
Subject: [python-committers] Official way to check out a tag?
Message-ID: <20180123102844.GA6393@bytereef.org>


Hello,

what is the official way to checkout a tag for debugging?  I did:

   git checkout v3.6.0


This just worked in mercurial, but doing the above results in a
compile error:

   threadmodule.c:1355: multiple definition of `PyInit__thread'



Stefan Krah





From antoine at python.org  Tue Jan 23 05:29:49 2018
From: antoine at python.org (Antoine Pitrou)
Date: Tue, 23 Jan 2018 11:29:49 +0100
Subject: [python-committers] Official way to check out a tag?
In-Reply-To: <20180123102844.GA6393@bytereef.org>
References: <20180123102844.GA6393@bytereef.org>
Message-ID: <58554aae-80a8-bc99-a197-85aa492abb42@python.org>


Le 23/01/2018 ? 11:28, Stefan Krah a ?crit?:
> 
> Hello,
> 
> what is the official way to checkout a tag for debugging?  I did:
> 
>    git checkout v3.6.0
> 
> 
> This just worked in mercurial, but doing the above results in a
> compile error:
> 
>    threadmodule.c:1355: multiple definition of `PyInit__thread'

Did you try "make distclean"?

Regards

Antoine.

From stefan at bytereef.org  Tue Jan 23 05:38:24 2018
From: stefan at bytereef.org (Stefan Krah)
Date: Tue, 23 Jan 2018 11:38:24 +0100
Subject: [python-committers] Official way to check out a tag?
In-Reply-To: <58554aae-80a8-bc99-a197-85aa492abb42@python.org>
References: <20180123102844.GA6393@bytereef.org>
 <58554aae-80a8-bc99-a197-85aa492abb42@python.org>
Message-ID: <20180123103824.GA15453@bytereef.org>

On Tue, Jan 23, 2018 at 11:29:49AM +0100, Antoine Pitrou wrote:
> > This just worked in mercurial, but doing the above results in a
> > compile error:
> > 
> >    threadmodule.c:1355: multiple definition of `PyInit__thread'
> 
> Did you try "make distclean"?

Thanks, that works!  I assumed that I mishandled git and completely overlooked
the easier solution. :-)


Stefan Krah




From victor.stinner at gmail.com  Tue Jan 23 05:42:04 2018
From: victor.stinner at gmail.com (Victor Stinner)
Date: Tue, 23 Jan 2018 11:42:04 +0100
Subject: [python-committers] Official way to check out a tag?
In-Reply-To: <58554aae-80a8-bc99-a197-85aa492abb42@python.org>
References: <20180123102844.GA6393@bytereef.org>
 <58554aae-80a8-bc99-a197-85aa492abb42@python.org>
Message-ID: <CAMpsgwZ5A-MHxHdf9Yd6+0SvacptZsNN_RRwY+WHsktvK6eKKg@mail.gmail.com>

2018-01-23 11:29 GMT+01:00 Antoine Pitrou <antoine at python.org>:
> Did you try "make distclean"?

Oh by the way, it took me year to discover the cool *builtin* Git function:

* "git clean -ndx" shows all untracked files and directories
* "git clean -fdx" removes all untracked files and directories

BE CAREFUL: "git clean -fdx" really removes anything not tracked by
Git, including your local files and all your local directories.

You may use "make clean" or even "make distclean" before "git clean
-ndx" to better see what will be removed.

In short, "git clean -fdx" *behaves* as "cd ..; rm -rf python; git
clone https://github.com/python/cpython python; cd python", without
the need to download everything again ;-)

When I have a local patch like test.patch, I move it to the parent
directory, run git clean, and move back the file.

Victor

From larry at hastings.org  Tue Jan 23 09:52:12 2018
From: larry at hastings.org (Larry Hastings)
Date: Tue, 23 Jan 2018 06:52:12 -0800
Subject: [python-committers] [RELEASED] Python 3.4.8rc1 and Python 3.5.5rc1
 are now available
Message-ID: <91bc5411-3a98-ef11-fc25-ee3fa75941ba@hastings.org>


On behalf of the Python development community, I'm pleased to announce 
the availability of Python 3.4.8rc1 and Python 3.5.5rc1.

Both Python 3.4 and 3.5 are in "security fixes only" mode. Both versions 
only accept security fixes, not conventional bug fixes, and both 
releases are source-only.


You can find Python 3.4.8rc1 here:

    https://www.python.org/downloads/release/python-348rc1/


And you can find Python 3.5.5rc1 here:

    https://www.python.org/downloads/release/python-355rc1/



Happy Pythoning,


//arry/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180123/1b35a9d5/attachment-0001.html>

From victor.stinner at gmail.com  Wed Jan 24 13:11:32 2018
From: victor.stinner at gmail.com (Victor Stinner)
Date: Wed, 24 Jan 2018 19:11:32 +0100
Subject: [python-committers] AppVeyor is now required to pass on PRs
In-Reply-To: <CAP1=2W5eVY0dWNYaLkxhSF0_w9RDhtsJ8md9ePiP-nz9+DWW5w@mail.gmail.com>
References: <CAP1=2W5eVY0dWNYaLkxhSF0_w9RDhtsJ8md9ePiP-nz9+DWW5w@mail.gmail.com>
Message-ID: <CAMpsgwYBRkf57jsKPTnQ7-EHe2hrfN31+bH4Mgub8uRYSaTdLg@mail.gmail.com>

Hi,

AppVeyor usually takes between 30 min and 1 hour to check a PR,
whereas Travis CI takes between 10 and 20 minutes (in average,
ignoring rare cases when it's broken). AppVeyor queue is regulary
busy.

Sometimes, I know that my PR is right, because the fix is obvious.
Sometimes, the PR has no impact on Windows. In these cases, the slow
AppVeyor CI can be annoying since it prevents me to merge a PR.

What do you think of making AppVeyor optional again? Careful core
developers should wait for AppVeyor, except if they know that Windows
doesn't matter for a specific PR.

Victor

2018-01-10 21:45 GMT+01:00 Brett Cannon <brett at python.org>:
> I just switched it on to help make sure we don't break on Windows just
> before hitting beta. If it turns out AppVeyor isn't stable enough I will
> switch it back off.
>
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>

From ethan at stoneleaf.us  Wed Jan 24 13:47:08 2018
From: ethan at stoneleaf.us (Ethan Furman)
Date: Wed, 24 Jan 2018 10:47:08 -0800
Subject: [python-committers] Python workflow quirks with mercurial and
 hg-git extension
In-Reply-To: <fe27399c-c9c3-7753-9876-f510aac51652@jcea.es>
References: <fe27399c-c9c3-7753-9876-f510aac51652@jcea.es>
Message-ID: <5A68D4AC.50703@stoneleaf.us>

On 01/20/2018 11:19 AM, Jesus Cea wrote:
> I plan to come back to python development (about time!) but I truly
> hates git. I am experimenting with mercurial + hg-git extension and it
> is quite usable (after the initial painfully slow clone time), but I am
> having small quirks that I would like to iron out with a fellow more
> experienced or also interested in this approach.
>
> Anybody out there?.

Not experienced, but interested!

--
~Ethan~


From yselivanov.ml at gmail.com  Wed Jan 24 18:23:23 2018
From: yselivanov.ml at gmail.com (Yury Selivanov)
Date: Wed, 24 Jan 2018 18:23:23 -0500
Subject: [python-committers] Let's give commit privileges to Nathaniel J.
 Smith
Message-ID: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>

Hi,

I want to propose granting commit privileges to Nathaniel J. Smith.
He's interested in the idea of becoming a core developer, and given
the quality of his contributionsI think he won't need any extensive
mentoring (although I'll be happy to assist Nathaniel in the
beginning).

Nathaniel has been a prolific PEP author:

* Single-authored: PEP 465 Matrix Multiplication (accepted), PEP 521,
PEP 533, PEP 568;

* Co-authored: PEP 513 (active), PEP 516, PEP 517 (accepted), PEP 518
(accepted), PEP 522.

* Many PEPs mention his name in acknowledgements.

He also has a few sufficiently complex patches committed, some of
which touch complex areas like ceval loop and signals handling:

* bpo-32591: Add native coroutine origin tracking
* bpo-30579: Allow TracebackType creation and tb_next mutation from Python
* bpo-30050: Allow disabling full buffer warnings in signal.set_wakeup_fd
* bpo-30039: Don't run signal handlers while resuming a yield from stack
* bpo-30038: fix race condition in signal delivery + wakeup fd
* etc

He's been very active on python-dev, python-ideas, bugs.python.org and
github. Here's an example where Nathaniel's research helped us to make
a right decision to fix a broken socket object API:
https://bugs.python.org/msg308450.

He helped me quite a bit with the design of PEP 550 and PEP 567, and
he's doing some interesting work in the async/await area.

So... let's make it happen? :)

Yury

From eric at trueblade.com  Wed Jan 24 18:29:18 2018
From: eric at trueblade.com (Eric V. Smith)
Date: Wed, 24 Jan 2018 18:29:18 -0500
Subject: [python-committers] Let's give commit privileges to Nathaniel
 J. Smith
In-Reply-To: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
References: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
Message-ID: <96e747a9-946b-e6a0-ecb3-69e405bf7843@trueblade.com>

On 1/24/2018 6:23 PM, Yury Selivanov wrote:
> Hi,
> 
> I want to propose granting commit privileges to Nathaniel J. Smith.
> He's interested in the idea of becoming a core developer, and given
> the quality of his contributionsI think he won't need any extensive
> mentoring (although I'll be happy to assist Nathaniel in the
> beginning).

+1. I actually thought he was a committer already.

Eric

From antoine at python.org  Wed Jan 24 18:32:37 2018
From: antoine at python.org (Antoine Pitrou)
Date: Thu, 25 Jan 2018 00:32:37 +0100
Subject: [python-committers] Let's give commit privileges to Nathaniel
 J. Smith
In-Reply-To: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
References: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
Message-ID: <4a5087a8-bfaf-d6d7-5e15-ef55351003a7@python.org>


+1 from me as well.


Le 25/01/2018 ? 00:23, Yury Selivanov a ?crit?:
> Hi,
> 
> I want to propose granting commit privileges to Nathaniel J. Smith.
> He's interested in the idea of becoming a core developer, and given
> the quality of his contributionsI think he won't need any extensive
> mentoring (although I'll be happy to assist Nathaniel in the
> beginning).
> 
> Nathaniel has been a prolific PEP author:
> 
> * Single-authored: PEP 465 Matrix Multiplication (accepted), PEP 521,
> PEP 533, PEP 568;
> 
> * Co-authored: PEP 513 (active), PEP 516, PEP 517 (accepted), PEP 518
> (accepted), PEP 522.
> 
> * Many PEPs mention his name in acknowledgements.
> 
> He also has a few sufficiently complex patches committed, some of
> which touch complex areas like ceval loop and signals handling:
> 
> * bpo-32591: Add native coroutine origin tracking
> * bpo-30579: Allow TracebackType creation and tb_next mutation from Python
> * bpo-30050: Allow disabling full buffer warnings in signal.set_wakeup_fd
> * bpo-30039: Don't run signal handlers while resuming a yield from stack
> * bpo-30038: fix race condition in signal delivery + wakeup fd
> * etc
> 
> He's been very active on python-dev, python-ideas, bugs.python.org and
> github. Here's an example where Nathaniel's research helped us to make
> a right decision to fix a broken socket object API:
> https://bugs.python.org/msg308450.
> 
> He helped me quite a bit with the design of PEP 550 and PEP 567, and
> he's doing some interesting work in the async/await area.
> 
> So... let's make it happen? :)
> 
> Yury
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
> 

From willingc at gmail.com  Wed Jan 24 18:43:26 2018
From: willingc at gmail.com (Carol Willing)
Date: Wed, 24 Jan 2018 15:43:26 -0800
Subject: [python-committers] Let's give commit privileges to Nathaniel
 J. Smith
In-Reply-To: <4a5087a8-bfaf-d6d7-5e15-ef55351003a7@python.org>
References: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
 <4a5087a8-bfaf-d6d7-5e15-ef55351003a7@python.org>
Message-ID: <C98B727F-A9A5-4AB8-9494-8F3E1B05C627@gmail.com>

+1, Nathaniel would be a nice addition.

> On Jan 24, 2018, at 3:32 PM, Antoine Pitrou <antoine at python.org> wrote:
> 
> 
> +1 from me as well.
> 
> 
> Le 25/01/2018 ? 00:23, Yury Selivanov a ?crit :
>> Hi,
>> 
>> I want to propose granting commit privileges to Nathaniel J. Smith.
>> He's interested in the idea of becoming a core developer, and given
>> the quality of his contributionsI think he won't need any extensive
>> mentoring (although I'll be happy to assist Nathaniel in the
>> beginning).
>> 
>> Nathaniel has been a prolific PEP author:
>> 
>> * Single-authored: PEP 465 Matrix Multiplication (accepted), PEP 521,
>> PEP 533, PEP 568;
>> 
>> * Co-authored: PEP 513 (active), PEP 516, PEP 517 (accepted), PEP 518
>> (accepted), PEP 522.
>> 
>> * Many PEPs mention his name in acknowledgements.
>> 
>> He also has a few sufficiently complex patches committed, some of
>> which touch complex areas like ceval loop and signals handling:
>> 
>> * bpo-32591: Add native coroutine origin tracking
>> * bpo-30579: Allow TracebackType creation and tb_next mutation from Python
>> * bpo-30050: Allow disabling full buffer warnings in signal.set_wakeup_fd
>> * bpo-30039: Don't run signal handlers while resuming a yield from stack
>> * bpo-30038: fix race condition in signal delivery + wakeup fd
>> * etc
>> 
>> He's been very active on python-dev, python-ideas, bugs.python.org and
>> github. Here's an example where Nathaniel's research helped us to make
>> a right decision to fix a broken socket object API:
>> https://bugs.python.org/msg308450.
>> 
>> He helped me quite a bit with the design of PEP 550 and PEP 567, and
>> he's doing some interesting work in the async/await area.
>> 
>> So... let's make it happen? :)
>> 
>> Yury
>> _______________________________________________
>> python-committers mailing list
>> python-committers at python.org
>> https://mail.python.org/mailman/listinfo/python-committers
>> Code of Conduct: https://www.python.org/psf/codeofconduct/
>> 
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/


From guido at python.org  Wed Jan 24 18:45:14 2018
From: guido at python.org (Guido van Rossum)
Date: Wed, 24 Jan 2018 15:45:14 -0800
Subject: [python-committers] Let's give commit privileges to Nathaniel
 J. Smith
In-Reply-To: <C98B727F-A9A5-4AB8-9494-8F3E1B05C627@gmail.com>
References: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
 <4a5087a8-bfaf-d6d7-5e15-ef55351003a7@python.org>
 <C98B727F-A9A5-4AB8-9494-8F3E1B05C627@gmail.com>
Message-ID: <CAP7+vJKkx6FTPj4hDZ4pUi8DrMZ0Jx2hipog0oAJDCdv40BQPg@mail.gmail.com>

Indeed!

On Wed, Jan 24, 2018 at 3:43 PM, Carol Willing <willingc at gmail.com> wrote:

> +1, Nathaniel would be a nice addition.
>
> > On Jan 24, 2018, at 3:32 PM, Antoine Pitrou <antoine at python.org> wrote:
> >
> >
> > +1 from me as well.
> >
> >
> > Le 25/01/2018 ? 00:23, Yury Selivanov a ?crit :
> >> Hi,
> >>
> >> I want to propose granting commit privileges to Nathaniel J. Smith.
> >> He's interested in the idea of becoming a core developer, and given
> >> the quality of his contributionsI think he won't need any extensive
> >> mentoring (although I'll be happy to assist Nathaniel in the
> >> beginning).
> >>
> >> Nathaniel has been a prolific PEP author:
> >>
> >> * Single-authored: PEP 465 Matrix Multiplication (accepted), PEP 521,
> >> PEP 533, PEP 568;
> >>
> >> * Co-authored: PEP 513 (active), PEP 516, PEP 517 (accepted), PEP 518
> >> (accepted), PEP 522.
> >>
> >> * Many PEPs mention his name in acknowledgements.
> >>
> >> He also has a few sufficiently complex patches committed, some of
> >> which touch complex areas like ceval loop and signals handling:
> >>
> >> * bpo-32591: Add native coroutine origin tracking
> >> * bpo-30579: Allow TracebackType creation and tb_next mutation from
> Python
> >> * bpo-30050: Allow disabling full buffer warnings in
> signal.set_wakeup_fd
> >> * bpo-30039: Don't run signal handlers while resuming a yield from stack
> >> * bpo-30038: fix race condition in signal delivery + wakeup fd
> >> * etc
> >>
> >> He's been very active on python-dev, python-ideas, bugs.python.org and
> >> github. Here's an example where Nathaniel's research helped us to make
> >> a right decision to fix a broken socket object API:
> >> https://bugs.python.org/msg308450.
> >>
> >> He helped me quite a bit with the design of PEP 550 and PEP 567, and
> >> he's doing some interesting work in the async/await area.
> >>
> >> So... let's make it happen? :)
> >>
> >> Yury
> >> _______________________________________________
> >> python-committers mailing list
> >> python-committers at python.org
> >> https://mail.python.org/mailman/listinfo/python-committers
> >> Code of Conduct: https://www.python.org/psf/codeofconduct/
> >>
> > _______________________________________________
> > python-committers mailing list
> > python-committers at python.org
> > https://mail.python.org/mailman/listinfo/python-committers
> > Code of Conduct: https://www.python.org/psf/codeofconduct/
>
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>



-- 
--Guido van Rossum (python.org/~guido)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180124/317ffe56/attachment.html>

From barry at python.org  Wed Jan 24 18:47:38 2018
From: barry at python.org (Barry Warsaw)
Date: Wed, 24 Jan 2018 18:47:38 -0500
Subject: [python-committers] Let's give commit privileges to Nathaniel
 J. Smith
In-Reply-To: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
References: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
Message-ID: <3F4E6700-B12D-4B43-B74A-4F8E4C832EF4@python.org>

On Jan 24, 2018, at 18:23, Yury Selivanov <yselivanov.ml at gmail.com> wrote:
> 
> I want to propose granting commit privileges to Nathaniel J. Smith.

Wait, he?s not already?!  +1 of course.

-Barry

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180124/b1ae2db6/attachment.sig>

From andrew.svetlov at gmail.com  Wed Jan 24 18:50:44 2018
From: andrew.svetlov at gmail.com (Andrew Svetlov)
Date: Wed, 24 Jan 2018 23:50:44 +0000
Subject: [python-committers] Let's give commit privileges to Nathaniel
 J. Smith
In-Reply-To: <3F4E6700-B12D-4B43-B74A-4F8E4C832EF4@python.org>
References: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
 <3F4E6700-B12D-4B43-B74A-4F8E4C832EF4@python.org>
Message-ID: <CAL3CFcXLH9-90M-7SxDhGPEF8D0ctVEwfNggT4hzkHyxC9=CmQ@mail.gmail.com>

+1.

On Thu, Jan 25, 2018 at 1:47 AM Barry Warsaw <barry at python.org> wrote:

> On Jan 24, 2018, at 18:23, Yury Selivanov <yselivanov.ml at gmail.com> wrote:
> >
> > I want to propose granting commit privileges to Nathaniel J. Smith.
>
> Wait, he?s not already?!  +1 of course.
>
> -Barry
>
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-- 
Thanks,
Andrew Svetlov
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180124/b9e5b723/attachment.html>

From victor.stinner at gmail.com  Wed Jan 24 19:00:49 2018
From: victor.stinner at gmail.com (Victor Stinner)
Date: Thu, 25 Jan 2018 01:00:49 +0100
Subject: [python-committers] Let's give commit privileges to Nathaniel
 J. Smith
In-Reply-To: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
References: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
Message-ID: <CAMpsgwb4FuZF7RmtiB5YeDWae8DbS72wCTY+wrHNFX8r1B9exw@mail.gmail.com>

+1

Impressive list of contributions!

Victor

2018-01-25 0:23 GMT+01:00 Yury Selivanov <yselivanov.ml at gmail.com>:
> Hi,
>
> I want to propose granting commit privileges to Nathaniel J. Smith.
> He's interested in the idea of becoming a core developer, and given
> the quality of his contributionsI think he won't need any extensive
> mentoring (although I'll be happy to assist Nathaniel in the
> beginning).
>
> Nathaniel has been a prolific PEP author:
>
> * Single-authored: PEP 465 Matrix Multiplication (accepted), PEP 521,
> PEP 533, PEP 568;
>
> * Co-authored: PEP 513 (active), PEP 516, PEP 517 (accepted), PEP 518
> (accepted), PEP 522.
>
> * Many PEPs mention his name in acknowledgements.
>
> He also has a few sufficiently complex patches committed, some of
> which touch complex areas like ceval loop and signals handling:
>
> * bpo-32591: Add native coroutine origin tracking
> * bpo-30579: Allow TracebackType creation and tb_next mutation from Python
> * bpo-30050: Allow disabling full buffer warnings in signal.set_wakeup_fd
> * bpo-30039: Don't run signal handlers while resuming a yield from stack
> * bpo-30038: fix race condition in signal delivery + wakeup fd
> * etc
>
> He's been very active on python-dev, python-ideas, bugs.python.org and
> github. Here's an example where Nathaniel's research helped us to make
> a right decision to fix a broken socket object API:
> https://bugs.python.org/msg308450.
>
> He helped me quite a bit with the design of PEP 550 and PEP 567, and
> he's doing some interesting work in the async/await area.
>
> So... let's make it happen? :)
>
> Yury
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/

From senthil at uthcode.com  Wed Jan 24 19:13:26 2018
From: senthil at uthcode.com (Senthil Kumaran)
Date: Wed, 24 Jan 2018 16:13:26 -0800
Subject: [python-committers] Let's give commit privileges to Nathaniel
 J. Smith
In-Reply-To: <4a5087a8-bfaf-d6d7-5e15-ef55351003a7@python.org>
References: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
 <4a5087a8-bfaf-d6d7-5e15-ef55351003a7@python.org>
Message-ID: <CAPOVWOTNf98OyY4tsSWjze7UJnmcXy08SbcUpUbfqRs5EKSxDA@mail.gmail.com>

+1

I have been following the discussions in python-dev and find his
contributions very productive.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180124/7fdb62f7/attachment.html>

From tjreedy at udel.edu  Wed Jan 24 19:48:01 2018
From: tjreedy at udel.edu (Terry Reedy)
Date: Wed, 24 Jan 2018 19:48:01 -0500
Subject: [python-committers] Let's give commit privileges to Nathaniel
 J. Smith
In-Reply-To: <96e747a9-946b-e6a0-ecb3-69e405bf7843@trueblade.com>
References: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
 <96e747a9-946b-e6a0-ecb3-69e405bf7843@trueblade.com>
Message-ID: <5558f0cd-973f-178e-4ae4-a4f03e8043eb@udel.edu>

On 1/24/2018 6:29 PM, Eric V. Smith wrote:
> On 1/24/2018 6:23 PM, Yury Selivanov wrote:
>> Hi,
>>
>> I want to propose granting commit privileges to Nathaniel J. Smith.
>> He's interested in the idea of becoming a core developer, and given
>> the quality of his contributionsI think he won't need any extensive
>> mentoring (although I'll be happy to assist Nathaniel in the
>> beginning).
> 
> +1. I actually thought he was a committer already.

+1 I definitely thought he might be.

From ethan at stoneleaf.us  Wed Jan 24 20:41:40 2018
From: ethan at stoneleaf.us (Ethan Furman)
Date: Wed, 24 Jan 2018 17:41:40 -0800
Subject: [python-committers] Let's give commit privileges to Nathaniel
 J. Smith
In-Reply-To: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
References: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
Message-ID: <5A6935D4.3040602@stoneleaf.us>

On 01/24/2018 03:23 PM, Yury Selivanov wrote:

> I want to propose granting commit privileges to Nathaniel J. Smith.

I also thought he was already.  Definitely +1 !

--
~Ethan~


From steve.dower at python.org  Wed Jan 24 22:51:48 2018
From: steve.dower at python.org (Steve Dower)
Date: Thu, 25 Jan 2018 14:51:48 +1100
Subject: [python-committers] Python workflow quirks with mercurial and
 hg-git extension
In-Reply-To: <5A68D4AC.50703@stoneleaf.us>
References: <fe27399c-c9c3-7753-9876-f510aac51652@jcea.es>
 <5A68D4AC.50703@stoneleaf.us>
Message-ID: <bbc5ff39-dafe-8863-8a64-e33cb4ed9fc3@python.org>

On 25Jan2018 0547, Ethan Furman wrote:
> On 01/20/2018 11:19 AM, Jesus Cea wrote:
>> I plan to come back to python development (about time!) but I truly
>> hates git. I am experimenting with mercurial + hg-git extension and it
>> is quite usable (after the initial painfully slow clone time), but I am
>> having small quirks that I would like to iron out with a fellow more
>> experienced or also interested in this approach.
>>
>> Anybody out there?.
> 
> Not experienced, but interested!

Experienced enough to have given up on using hg-git for CPython and now
I just suffer git. (Those who have ever discussed workflow with me know
that's a really big deal!)

The main thing that annoyed me was the different EOL handling: Mercurial
applies the correction on update/checkout, while git does it on commit
(or perhaps the other way around, either way, it broke many PRs).
Perhaps this affects me more than most because I'm using Windows, but
commits through hg-git would leave CRLF endings in files that git would
have already translated to LF, and so the CRLF endings would show up as
changes in the PR.

The excessive clone time was also painful. I suspect dulwich could do
with some optimisation.

Perhaps these are issues that could be fixed in hg-git? If so, I'd
happily switch back to it. But at least with the backport bot doing a
great job (thanks Mariatta!) I don't have to deal with too much
switching in git.

I suspect your quirks are different from these, but feel free to give me
the details and I'll let you know if I saw them and/or worked around
them. I still use hg-git for many of my other repos.

Cheers,
Steve


From mal at egenix.com  Thu Jan 25 03:05:44 2018
From: mal at egenix.com (M.-A. Lemburg)
Date: Thu, 25 Jan 2018 09:05:44 +0100
Subject: [python-committers] Let's give commit privileges to Nathaniel
 J. Smith
In-Reply-To: <CAMpsgwb4FuZF7RmtiB5YeDWae8DbS72wCTY+wrHNFX8r1B9exw@mail.gmail.com>
References: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
 <CAMpsgwb4FuZF7RmtiB5YeDWae8DbS72wCTY+wrHNFX8r1B9exw@mail.gmail.com>
Message-ID: <fd32ddcb-2c47-e481-47fb-7fe06783c595@egenix.com>

+1

On 25.01.2018 01:00, Victor Stinner wrote:
> +1
> 
> Impressive list of contributions!
> 
> Victor
> 
> 2018-01-25 0:23 GMT+01:00 Yury Selivanov <yselivanov.ml at gmail.com>:
>> Hi,
>>
>> I want to propose granting commit privileges to Nathaniel J. Smith.
>> He's interested in the idea of becoming a core developer, and given
>> the quality of his contributionsI think he won't need any extensive
>> mentoring (although I'll be happy to assist Nathaniel in the
>> beginning).
>>
>> Nathaniel has been a prolific PEP author:
>>
>> * Single-authored: PEP 465 Matrix Multiplication (accepted), PEP 521,
>> PEP 533, PEP 568;
>>
>> * Co-authored: PEP 513 (active), PEP 516, PEP 517 (accepted), PEP 518
>> (accepted), PEP 522.
>>
>> * Many PEPs mention his name in acknowledgements.
>>
>> He also has a few sufficiently complex patches committed, some of
>> which touch complex areas like ceval loop and signals handling:
>>
>> * bpo-32591: Add native coroutine origin tracking
>> * bpo-30579: Allow TracebackType creation and tb_next mutation from Python
>> * bpo-30050: Allow disabling full buffer warnings in signal.set_wakeup_fd
>> * bpo-30039: Don't run signal handlers while resuming a yield from stack
>> * bpo-30038: fix race condition in signal delivery + wakeup fd
>> * etc
>>
>> He's been very active on python-dev, python-ideas, bugs.python.org and
>> github. Here's an example where Nathaniel's research helped us to make
>> a right decision to fix a broken socket object API:
>> https://bugs.python.org/msg308450.
>>
>> He helped me quite a bit with the design of PEP 550 and PEP 567, and
>> he's doing some interesting work in the async/await area.
>>
>> So... let's make it happen? :)
>>
>> Yury
>> _______________________________________________
>> python-committers mailing list
>> python-committers at python.org
>> https://mail.python.org/mailman/listinfo/python-committers
>> Code of Conduct: https://www.python.org/psf/codeofconduct/
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
> 

-- 
Marc-Andre Lemburg
eGenix.com

Professional Python Services directly from the Experts (#1, Jan 25 2018)
>>> Python Projects, Coaching and Consulting ...  http://www.egenix.com/
>>> Python Database Interfaces ...           http://products.egenix.com/
>>> Plone/Zope Database Interfaces ...           http://zope.egenix.com/
________________________________________________________________________

::: We implement business ideas - efficiently in both time and costs :::

   eGenix.com Software, Skills and Services GmbH  Pastor-Loeh-Str.48
    D-40764 Langenfeld, Germany. CEO Dipl.-Math. Marc-Andre Lemburg
           Registered at Amtsgericht Duesseldorf: HRB 46611
               http://www.egenix.com/company/contact/
                      http://www.malemburg.com/


From songofacandy at gmail.com  Thu Jan 25 03:17:47 2018
From: songofacandy at gmail.com (INADA Naoki)
Date: Thu, 25 Jan 2018 17:17:47 +0900
Subject: [python-committers] Let's give commit privileges to Nathaniel
 J. Smith
In-Reply-To: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
References: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
Message-ID: <CAEfz+TzRi_kwwpXenYPom14WyAw-eXSgLJtQk9J08yD=NPFuNQ@mail.gmail.com>

+1

-- 
INADA Naoki  <songofacandy at gmail.com>

From victor.stinner at gmail.com  Thu Jan 25 03:36:36 2018
From: victor.stinner at gmail.com (Victor Stinner)
Date: Thu, 25 Jan 2018 09:36:36 +0100
Subject: [python-committers] Mentoring and promoting contributors (was:
 Let's give commit privileges to Nathaniel J. Smith)
Message-ID: <CAMpsgwZgGrrBPQ=f10TiWjLj=NGrfteJuNfpwwsEOeVp-7JmHw@mail.gmail.com>

Hi,

2018-01-25 0:29 GMT+01:00 Eric V. Smith <eric at trueblade.com>:
> +1. I actually thought [Nathaniel Smith] was a committer already.

By the way, if you notice an active contributor is good candidate to
become a core dev in the long term, you may start the process that I
described here:
https://github.com/vstinner/misc/blob/master/cpython/pep-core_dev_process.rst

My proposed process is made of small steps to build a trust
relationship and to train contributors until they produce
"commit-ready change".

For you, the main requirement is time, be available to review changes
and answers to questions by email :-)

Last weeks, I looked at contributors who got the most commits merged
into master in the last 6 months. That's how I selected Cheryl
Sabella, Sanyam Khurana and Pablo Galindo Salgado.

I also asked two contributors if they would like to become core, but
they declined my offer.


I added a new section in my process document: ? "Becoming A Core
Developer Is Not a Goal". I'm not sure that it's the best title ever.

"""
CPython isn't the easiest place to start. The development process is
rather enterprisy with long release cycles (release every 18 months)
and rigid backwards compatibility policy. CPython also support many
different platforms and CPU architectures.

Are you sure that CPython itself is the best project for you?
Depending on your interests and skills, you may enjoy better to
contribute to another Python project with lower backward compatibility
constraints and a faster release cycle.

Being a CPython core developer involves responsibilities and usually
requires a lot of time. Long-term commitment is also a major
expectation, even if it's not a strict requirement. Becoming a core
developer should not be seen as a recognition of a contributor work,
but more as a constraint :-) Merging a change implies becoming
responsible regressions, backward compatibility, security, etc. of
this code.

It is perfectly fine to contribute to CPython without being a core
developer. In most cases, not being able to merge your own work is not
a blocker issue.
"""

I'm not sure about this sentence: "Becoming a core developer should
not be seen as a recognition of a contributor work, but more as a
constraint :-)". My intent is to discourage people who "want to become
a core dev" for the bad reasons (to become famous? I don't know
exactly) without understanding the expected responsibilities.

Victor

From p.f.moore at gmail.com  Thu Jan 25 03:41:49 2018
From: p.f.moore at gmail.com (Paul Moore)
Date: Thu, 25 Jan 2018 08:41:49 +0000
Subject: [python-committers] Let's give commit privileges to Nathaniel
 J. Smith
In-Reply-To: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
References: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
Message-ID: <CACac1F8ryN5B1wU7uSZo7edDWkCSHvR8UO=5dPrR=_OV_QiUHw@mail.gmail.com>

+1 from me also. He's been involved in a lot of distutils-sig stuff as
well, and his contributions have always been well thought out and
useful.
Paul

On 24 January 2018 at 23:23, Yury Selivanov <yselivanov.ml at gmail.com> wrote:
> Hi,
>
> I want to propose granting commit privileges to Nathaniel J. Smith.
> He's interested in the idea of becoming a core developer, and given
> the quality of his contributionsI think he won't need any extensive
> mentoring (although I'll be happy to assist Nathaniel in the
> beginning).
>
> Nathaniel has been a prolific PEP author:
>
> * Single-authored: PEP 465 Matrix Multiplication (accepted), PEP 521,
> PEP 533, PEP 568;
>
> * Co-authored: PEP 513 (active), PEP 516, PEP 517 (accepted), PEP 518
> (accepted), PEP 522.
>
> * Many PEPs mention his name in acknowledgements.
>
> He also has a few sufficiently complex patches committed, some of
> which touch complex areas like ceval loop and signals handling:
>
> * bpo-32591: Add native coroutine origin tracking
> * bpo-30579: Allow TracebackType creation and tb_next mutation from Python
> * bpo-30050: Allow disabling full buffer warnings in signal.set_wakeup_fd
> * bpo-30039: Don't run signal handlers while resuming a yield from stack
> * bpo-30038: fix race condition in signal delivery + wakeup fd
> * etc
>
> He's been very active on python-dev, python-ideas, bugs.python.org and
> github. Here's an example where Nathaniel's research helped us to make
> a right decision to fix a broken socket object API:
> https://bugs.python.org/msg308450.
>
> He helped me quite a bit with the design of PEP 550 and PEP 567, and
> he's doing some interesting work in the async/await area.
>
> So... let's make it happen? :)
>
> Yury
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/

From xdegaye at gmail.com  Thu Jan 25 07:29:27 2018
From: xdegaye at gmail.com (Xavier de Gaye)
Date: Thu, 25 Jan 2018 13:29:27 +0100
Subject: [python-committers] core developer status
Message-ID: <22ed7c8e-5415-c1ca-13e4-ea40dbacb54c@gmail.com>

I have decided for personal reasons to stop contributing to CPython as a core developer, that does not mean I will stop contributing to CPython. So please remove me from the list of core developers 
and revoke all my access rights. Thank you.

Xavier

From jcea at jcea.es  Thu Jan 25 09:18:09 2018
From: jcea at jcea.es (Jesus Cea)
Date: Thu, 25 Jan 2018 15:18:09 +0100
Subject: [python-committers] Requirements to get the "bug triage"
 permission?
In-Reply-To: <CAMpsgwYJQ5umQmJv2zy7bGCvNDfSh0=5Ww1bvW8Jg=JHBvdj=g@mail.gmail.com>
References: <CAMpsgwaN1WttbV4KXMmD=sieCCVPUkg3OMnxQOamGycu=GLmRQ@mail.gmail.com>
 <20171120181245.6238C131001D@webabinitio.net>
 <CACBhJdFBtbAFOSNjXWR4Hm_xn6y04y69MHKFptsSXd7yG3i=+g@mail.gmail.com>
 <CAMpsgwYQ-rZ_2S82kQeYW_i44CxiWoUSF-7mBTNeEfh-=MDFWg@mail.gmail.com>
 <CACBhJdGAs1hBM3wM2CGqaGgOhFp2cAyjfxPgeByTbLUmBJW-VQ@mail.gmail.com>
 <CAMpsgwYJQ5umQmJv2zy7bGCvNDfSh0=5Ww1bvW8Jg=JHBvdj=g@mail.gmail.com>
Message-ID: <84e52cae-1b27-e6de-8cf1-e929975a3420@jcea.es>

On 06/12/17 23:17, Victor Stinner wrote:
> My problem is that we don't have a long list of "awards" in Python:
> the triage bit and the commit bit...
> 
> I had some ideas to create badges, but before I come with something
> concrete, I'm trying to build something with what we already have ;-)

I have been a few weeks thinking about OpenBadges and CPython
development. Not for gamification but for recognition.

In the mood to consider this?

-- 
Jes?s Cea Avi?n                         _/_/      _/_/_/        _/_/_/
jcea at jcea.es - http://www.jcea.es/     _/_/    _/_/  _/_/    _/_/  _/_/
Twitter: @jcea                        _/_/    _/_/          _/_/_/_/_/
jabber / xmpp:jcea at jabber.org  _/_/  _/_/    _/_/          _/_/  _/_/
"Things are not so easy"      _/_/  _/_/    _/_/  _/_/    _/_/  _/_/
"My name is Dump, Core Dump"   _/_/_/        _/_/_/      _/_/  _/_/
"El amor es poner tu felicidad en la felicidad de otro" - Leibniz

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 473 bytes
Desc: OpenPGP digital signature
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180125/dc48f52d/attachment.sig>

From victor.stinner at gmail.com  Thu Jan 25 09:47:19 2018
From: victor.stinner at gmail.com (Victor Stinner)
Date: Thu, 25 Jan 2018 15:47:19 +0100
Subject: [python-committers] Requirements to get the "bug triage"
 permission?
In-Reply-To: <84e52cae-1b27-e6de-8cf1-e929975a3420@jcea.es>
References: <CAMpsgwaN1WttbV4KXMmD=sieCCVPUkg3OMnxQOamGycu=GLmRQ@mail.gmail.com>
 <20171120181245.6238C131001D@webabinitio.net>
 <CACBhJdFBtbAFOSNjXWR4Hm_xn6y04y69MHKFptsSXd7yG3i=+g@mail.gmail.com>
 <CAMpsgwYQ-rZ_2S82kQeYW_i44CxiWoUSF-7mBTNeEfh-=MDFWg@mail.gmail.com>
 <CACBhJdGAs1hBM3wM2CGqaGgOhFp2cAyjfxPgeByTbLUmBJW-VQ@mail.gmail.com>
 <CAMpsgwYJQ5umQmJv2zy7bGCvNDfSh0=5Ww1bvW8Jg=JHBvdj=g@mail.gmail.com>
 <84e52cae-1b27-e6de-8cf1-e929975a3420@jcea.es>
Message-ID: <CAMpsgwZ2AM-AKUmfKLa+cQ_eS49B7ykDUC=q7ES7Kdrgto4byQ@mail.gmail.com>

2018-01-25 15:18 GMT+01:00 Jesus Cea <jcea at jcea.es>:
> On 06/12/17 23:17, Victor Stinner wrote:
>> My problem is that we don't have a long list of "awards" in Python:
>> the triage bit and the commit bit...
>>
>> I had some ideas to create badges, but before I come with something
>> concrete, I'm trying to build something with what we already have ;-)
>
> I have been a few weeks thinking about OpenBadges and CPython
> development. Not for gamification but for recognition.
>
> In the mood to consider this?

Hi Jesus,

Which kind of badges do you suggest?

Victor

From ezio.melotti at gmail.com  Thu Jan 25 10:33:32 2018
From: ezio.melotti at gmail.com (Ezio Melotti)
Date: Thu, 25 Jan 2018 16:33:32 +0100
Subject: [python-committers] Let's give commit privileges to Nathaniel
 J. Smith
In-Reply-To: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
References: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
Message-ID: <CACBhJdFjrmuaQajZTmw_05S4yerjNDRvSjMcQHZyK3Bza6YSBA@mail.gmail.com>

+1

On Thu, Jan 25, 2018 at 12:23 AM, Yury Selivanov
<yselivanov.ml at gmail.com> wrote:
> Hi,
>
> I want to propose granting commit privileges to Nathaniel J. Smith.
> He's interested in the idea of becoming a core developer, and given
> the quality of his contributionsI think he won't need any extensive
> mentoring (although I'll be happy to assist Nathaniel in the
> beginning).
>
> Nathaniel has been a prolific PEP author:
>
> * Single-authored: PEP 465 Matrix Multiplication (accepted), PEP 521,
> PEP 533, PEP 568;
>
> * Co-authored: PEP 513 (active), PEP 516, PEP 517 (accepted), PEP 518
> (accepted), PEP 522.
>
> * Many PEPs mention his name in acknowledgements.
>
> He also has a few sufficiently complex patches committed, some of
> which touch complex areas like ceval loop and signals handling:
>
> * bpo-32591: Add native coroutine origin tracking
> * bpo-30579: Allow TracebackType creation and tb_next mutation from Python
> * bpo-30050: Allow disabling full buffer warnings in signal.set_wakeup_fd
> * bpo-30039: Don't run signal handlers while resuming a yield from stack
> * bpo-30038: fix race condition in signal delivery + wakeup fd
> * etc
>
> He's been very active on python-dev, python-ideas, bugs.python.org and
> github. Here's an example where Nathaniel's research helped us to make
> a right decision to fix a broken socket object API:
> https://bugs.python.org/msg308450.
>
> He helped me quite a bit with the design of PEP 550 and PEP 567, and
> he's doing some interesting work in the async/await area.
>
> So... let's make it happen? :)
>
> Yury
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/

From yselivanov.ml at gmail.com  Thu Jan 25 12:00:43 2018
From: yselivanov.ml at gmail.com (Yury Selivanov)
Date: Thu, 25 Jan 2018 12:00:43 -0500
Subject: [python-committers] Let's give commit privileges to Nathaniel
 J. Smith
In-Reply-To: <CACBhJdFjrmuaQajZTmw_05S4yerjNDRvSjMcQHZyK3Bza6YSBA@mail.gmail.com>
References: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
 <CACBhJdFjrmuaQajZTmw_05S4yerjNDRvSjMcQHZyK3Bza6YSBA@mail.gmail.com>
Message-ID: <CA+St6D3U0Xp2wh34WfEUyzHpuTjHbXGLvE0Czz=f_2TgEFxfpA@mail.gmail.com>

Alright, it's decided!  I now envy Nathaniel a bit, so many people +1-ed!

I've added Nathaniel to devguide/developers.rst, and I believe Victor
has already elevated his permissions on the bug tracker.

Can someone with admin permissions on github.com/python invite
Nathaniel to the Core Developers team?

Yury

On Thu, Jan 25, 2018 at 10:33 AM, Ezio Melotti <ezio.melotti at gmail.com> wrote:
> +1
>
> On Thu, Jan 25, 2018 at 12:23 AM, Yury Selivanov
> <yselivanov.ml at gmail.com> wrote:
>> Hi,
>>
>> I want to propose granting commit privileges to Nathaniel J. Smith.
>> He's interested in the idea of becoming a core developer, and given
>> the quality of his contributionsI think he won't need any extensive
>> mentoring (although I'll be happy to assist Nathaniel in the
>> beginning).
>>
>> Nathaniel has been a prolific PEP author:
>>
>> * Single-authored: PEP 465 Matrix Multiplication (accepted), PEP 521,
>> PEP 533, PEP 568;
>>
>> * Co-authored: PEP 513 (active), PEP 516, PEP 517 (accepted), PEP 518
>> (accepted), PEP 522.
>>
>> * Many PEPs mention his name in acknowledgements.
>>
>> He also has a few sufficiently complex patches committed, some of
>> which touch complex areas like ceval loop and signals handling:
>>
>> * bpo-32591: Add native coroutine origin tracking
>> * bpo-30579: Allow TracebackType creation and tb_next mutation from Python
>> * bpo-30050: Allow disabling full buffer warnings in signal.set_wakeup_fd
>> * bpo-30039: Don't run signal handlers while resuming a yield from stack
>> * bpo-30038: fix race condition in signal delivery + wakeup fd
>> * etc
>>
>> He's been very active on python-dev, python-ideas, bugs.python.org and
>> github. Here's an example where Nathaniel's research helped us to make
>> a right decision to fix a broken socket object API:
>> https://bugs.python.org/msg308450.
>>
>> He helped me quite a bit with the design of PEP 550 and PEP 567, and
>> he's doing some interesting work in the async/await area.
>>
>> So... let's make it happen? :)
>>
>> Yury
>> _______________________________________________
>> python-committers mailing list
>> python-committers at python.org
>> https://mail.python.org/mailman/listinfo/python-committers
>> Code of Conduct: https://www.python.org/psf/codeofconduct/

From brett at python.org  Thu Jan 25 12:56:41 2018
From: brett at python.org (Brett Cannon)
Date: Thu, 25 Jan 2018 17:56:41 +0000
Subject: [python-committers] Let's give commit privileges to Nathaniel
 J. Smith
In-Reply-To: <CA+St6D3U0Xp2wh34WfEUyzHpuTjHbXGLvE0Czz=f_2TgEFxfpA@mail.gmail.com>
References: <CA+St6D1+e8LMZN7-aC64UHR0sgDYmky341d3BSDp3QajY1ETTg@mail.gmail.com>
 <CACBhJdFjrmuaQajZTmw_05S4yerjNDRvSjMcQHZyK3Bza6YSBA@mail.gmail.com>
 <CA+St6D3U0Xp2wh34WfEUyzHpuTjHbXGLvE0Czz=f_2TgEFxfpA@mail.gmail.com>
Message-ID: <CAP1=2W5gfQCw9yGUPBViW7+CLSXg1zUprjBXAphPtoRM4sOruA@mail.gmail.com>

Done, making Nathaniel the 90th member of the current core team! He also
needs to send a subscription request for python-committers.

On Thu, 25 Jan 2018 at 09:24 Yury Selivanov <yselivanov.ml at gmail.com> wrote:

> Alright, it's decided!  I now envy Nathaniel a bit, so many people +1-ed!
>
> I've added Nathaniel to devguide/developers.rst, and I believe Victor
> has already elevated his permissions on the bug tracker.
>
> Can someone with admin permissions on github.com/python invite
> Nathaniel to the Core Developers team?
>
> Yury
>
> On Thu, Jan 25, 2018 at 10:33 AM, Ezio Melotti <ezio.melotti at gmail.com>
> wrote:
> > +1
> >
> > On Thu, Jan 25, 2018 at 12:23 AM, Yury Selivanov
> > <yselivanov.ml at gmail.com> wrote:
> >> Hi,
> >>
> >> I want to propose granting commit privileges to Nathaniel J. Smith.
> >> He's interested in the idea of becoming a core developer, and given
> >> the quality of his contributionsI think he won't need any extensive
> >> mentoring (although I'll be happy to assist Nathaniel in the
> >> beginning).
> >>
> >> Nathaniel has been a prolific PEP author:
> >>
> >> * Single-authored: PEP 465 Matrix Multiplication (accepted), PEP 521,
> >> PEP 533, PEP 568;
> >>
> >> * Co-authored: PEP 513 (active), PEP 516, PEP 517 (accepted), PEP 518
> >> (accepted), PEP 522.
> >>
> >> * Many PEPs mention his name in acknowledgements.
> >>
> >> He also has a few sufficiently complex patches committed, some of
> >> which touch complex areas like ceval loop and signals handling:
> >>
> >> * bpo-32591: Add native coroutine origin tracking
> >> * bpo-30579: Allow TracebackType creation and tb_next mutation from
> Python
> >> * bpo-30050: Allow disabling full buffer warnings in
> signal.set_wakeup_fd
> >> * bpo-30039: Don't run signal handlers while resuming a yield from stack
> >> * bpo-30038: fix race condition in signal delivery + wakeup fd
> >> * etc
> >>
> >> He's been very active on python-dev, python-ideas, bugs.python.org and
> >> github. Here's an example where Nathaniel's research helped us to make
> >> a right decision to fix a broken socket object API:
> >> https://bugs.python.org/msg308450.
> >>
> >> He helped me quite a bit with the design of PEP 550 and PEP 567, and
> >> he's doing some interesting work in the async/await area.
> >>
> >> So... let's make it happen? :)
> >>
> >> Yury
> >> _______________________________________________
> >> python-committers mailing list
> >> python-committers at python.org
> >> https://mail.python.org/mailman/listinfo/python-committers
> >> Code of Conduct: https://www.python.org/psf/codeofconduct/
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180125/6a07180f/attachment.html>

From brett at python.org  Thu Jan 25 12:59:25 2018
From: brett at python.org (Brett Cannon)
Date: Thu, 25 Jan 2018 17:59:25 +0000
Subject: [python-committers] core developer status
In-Reply-To: <22ed7c8e-5415-c1ca-13e4-ea40dbacb54c@gmail.com>
References: <22ed7c8e-5415-c1ca-13e4-ea40dbacb54c@gmail.com>
Message-ID: <CAP1=2W4-Qy18tN7WzQKbWGzErkBueOcMXZK4GLyhBMDAsT6jPg@mail.gmail.com>

I have removed your access on GitHub and unsubscribed you from
python-committers. Sorry to see you go, Xavier, but look forward to
continuing to work with you on PRs!

On Thu, 25 Jan 2018 at 04:29 Xavier de Gaye <xdegaye at gmail.com> wrote:

> I have decided for personal reasons to stop contributing to CPython as a
> core developer, that does not mean I will stop contributing to CPython. So
> please remove me from the list of core developers
> and revoke all my access rights. Thank you.
>
> Xavier
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180125/14c6dbdb/attachment.html>

From zachary.ware+pydev at gmail.com  Thu Jan 25 13:09:48 2018
From: zachary.ware+pydev at gmail.com (Zachary Ware)
Date: Thu, 25 Jan 2018 12:09:48 -0600
Subject: [python-committers] core developer status
In-Reply-To: <CAP1=2W4-Qy18tN7WzQKbWGzErkBueOcMXZK4GLyhBMDAsT6jPg@mail.gmail.com>
References: <22ed7c8e-5415-c1ca-13e4-ea40dbacb54c@gmail.com>
 <CAP1=2W4-Qy18tN7WzQKbWGzErkBueOcMXZK4GLyhBMDAsT6jPg@mail.gmail.com>
Message-ID: <CAKJDb-PY2dVqLwcVpJeNn_1b0d0PR-ixSgBr7kMAEcpzwSChUw@mail.gmail.com>

On Thu, Jan 25, 2018 at 11:59 AM, Brett Cannon <brett at python.org> wrote:
> I have removed your access on GitHub and unsubscribed you from
> python-committers.

Also flipped the 'is_committer' bit to off on the bug tracker.

> Sorry to see you go, Xavier, but look forward to
> continuing to work with you on PRs!

Completely agreed!

-- 
Zach

From brett at python.org  Thu Jan 25 13:52:02 2018
From: brett at python.org (Brett Cannon)
Date: Thu, 25 Jan 2018 18:52:02 +0000
Subject: [python-committers] AppVeyor is now required to pass on PRs
In-Reply-To: <CAMpsgwYBRkf57jsKPTnQ7-EHe2hrfN31+bH4Mgub8uRYSaTdLg@mail.gmail.com>
References: <CAP1=2W5eVY0dWNYaLkxhSF0_w9RDhtsJ8md9ePiP-nz9+DWW5w@mail.gmail.com>
 <CAMpsgwYBRkf57jsKPTnQ7-EHe2hrfN31+bH4Mgub8uRYSaTdLg@mail.gmail.com>
Message-ID: <CAP1=2W48XQpn7fJU1HboB0r025PDAfsR-igchv_HbwqA=z9ODg@mail.gmail.com>

On Wed, 24 Jan 2018 at 10:12 Victor Stinner <victor.stinner at gmail.com>
wrote:

> Hi,
>
> AppVeyor usually takes between 30 min and 1 hour to check a PR,
> whereas Travis CI takes between 10 and 20 minutes (in average,
> ignoring rare cases when it's broken). AppVeyor queue is regulary
> busy.
>
> Sometimes, I know that my PR is right, because the fix is obvious.
> Sometimes, the PR has no impact on Windows. In these cases, the slow
> AppVeyor CI can be annoying since it prevents me to merge a PR.
>
> What do you think of making AppVeyor optional again? Careful core
> developers should wait for AppVeyor, except if they know that Windows
> doesn't matter for a specific PR.
>

No one has spoken up so I guess everyone else is okay with the delay ATM.
My worry with flipping it off and trusting ourselves this close to the beta
is the last time I did that people didn't wait and we landed breaking
changes. So unless other people speak up that the delay is a hindrance I'm
inclined to leave it until we at least get past the beta.

-Brett


>
> Victor
>
> 2018-01-10 21:45 GMT+01:00 Brett Cannon <brett at python.org>:
> > I just switched it on to help make sure we don't break on Windows just
> > before hitting beta. If it turns out AppVeyor isn't stable enough I will
> > switch it back off.
> >
> > _______________________________________________
> > python-committers mailing list
> > python-committers at python.org
> > https://mail.python.org/mailman/listinfo/python-committers
> > Code of Conduct: https://www.python.org/psf/codeofconduct/
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180125/cd99145c/attachment.html>

From mariatta.wijaya at gmail.com  Thu Jan 25 14:04:17 2018
From: mariatta.wijaya at gmail.com (Mariatta Wijaya)
Date: Thu, 25 Jan 2018 11:04:17 -0800
Subject: [python-committers] AppVeyor is now required to pass on PRs
In-Reply-To: <CAP1=2W48XQpn7fJU1HboB0r025PDAfsR-igchv_HbwqA=z9ODg@mail.gmail.com>
References: <CAP1=2W5eVY0dWNYaLkxhSF0_w9RDhtsJ8md9ePiP-nz9+DWW5w@mail.gmail.com>
 <CAMpsgwYBRkf57jsKPTnQ7-EHe2hrfN31+bH4Mgub8uRYSaTdLg@mail.gmail.com>
 <CAP1=2W48XQpn7fJU1HboB0r025PDAfsR-igchv_HbwqA=z9ODg@mail.gmail.com>
Message-ID: <CAGbohnajBR4ebyH0nGhHkf-j5KbTt_BbWAmC9CGnuK2cRpUGhw@mail.gmail.com>

I'm fine with the delay. I've been thinking to implement the bot that will
remind us when all the CI has been completed.
So we don't have to wait, and won't forget about it.

Currently miss-islington does this only for the backport PRs made by
miss-islington.
I think it'll be useful to do that on other PRs too.
(yes I'm aware GitLab does this but we are on GitHub)

Mariatta Wijaya
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180125/99ec53b9/attachment.html>

From tjreedy at udel.edu  Thu Jan 25 15:27:17 2018
From: tjreedy at udel.edu (Terry Reedy)
Date: Thu, 25 Jan 2018 15:27:17 -0500
Subject: [python-committers] AppVeyor is now required to pass on PRs
In-Reply-To: <CAP1=2W48XQpn7fJU1HboB0r025PDAfsR-igchv_HbwqA=z9ODg@mail.gmail.com>
References: <CAP1=2W5eVY0dWNYaLkxhSF0_w9RDhtsJ8md9ePiP-nz9+DWW5w@mail.gmail.com>
 <CAMpsgwYBRkf57jsKPTnQ7-EHe2hrfN31+bH4Mgub8uRYSaTdLg@mail.gmail.com>
 <CAP1=2W48XQpn7fJU1HboB0r025PDAfsR-igchv_HbwqA=z9ODg@mail.gmail.com>
Message-ID: <809f69f2-5554-d232-a4ca-ec048bc7d756@udel.edu>

On 1/25/2018 1:52 PM, Brett Cannon wrote:
> 
> 
> On Wed, 24 Jan 2018 at 10:12 Victor Stinner <victor.stinner at gmail.com 
> <mailto:victor.stinner at gmail.com>> wrote:

>     AppVeyor usually takes between 30 min and 1 hour to check a PR,

Yesterday, AppVeyor surprised me by finishing in about 6 minutes, 
handily beating Travis.  I wonder whether this was a fluke, or if 
something changed somewhere.  Or was it the luck of no backlog.

> No one has spoken up so I guess everyone else is okay with the delay 
> ATM. My worry with flipping it off and trusting ourselves this close to 
> the beta is the last time I did that people didn't wait and we landed 
> breaking changes. So unless other people speak up that the delay is a 
> hindrance I'm inclined to leave it until we at least get past the beta.

Since I develop and test on Windows, I don't usually need the AppVeyor 
test*, but for patches developed on *nix, it is needed.

* Even then, there was one IDLE test change that interfered with another 
test, only on Windows.

Terry

From victor.stinner at gmail.com  Thu Jan 25 16:31:58 2018
From: victor.stinner at gmail.com (Victor Stinner)
Date: Thu, 25 Jan 2018 22:31:58 +0100
Subject: [python-committers] AppVeyor is now required to pass on PRs
In-Reply-To: <CAGbohnajBR4ebyH0nGhHkf-j5KbTt_BbWAmC9CGnuK2cRpUGhw@mail.gmail.com>
References: <CAP1=2W5eVY0dWNYaLkxhSF0_w9RDhtsJ8md9ePiP-nz9+DWW5w@mail.gmail.com>
 <CAMpsgwYBRkf57jsKPTnQ7-EHe2hrfN31+bH4Mgub8uRYSaTdLg@mail.gmail.com>
 <CAP1=2W48XQpn7fJU1HboB0r025PDAfsR-igchv_HbwqA=z9ODg@mail.gmail.com>
 <CAGbohnajBR4ebyH0nGhHkf-j5KbTt_BbWAmC9CGnuK2cRpUGhw@mail.gmail.com>
Message-ID: <CAMpsgwYfK2icr=cuOHkTeHnvy25Y3qLCXE2F8jQWQ1ANMAAWSw@mail.gmail.com>

Hi,

The best would be able to have a bot merging a pull request once tests
pass and a core developer asked a merge. I'm not talking about the
current approval using review, but something new, like adding a
special comment like "Merge". Such comment would only merge if it's
written by a core developer.

Each time I approve a backport PR created by miss-ilington with "LGTM,
good bot", I hope secretly that the PR will be merged automatically
once CI tests pass ;-)

Is it possible to write a bot which merges a PR?

Victor

2018-01-25 20:04 GMT+01:00 Mariatta Wijaya <mariatta.wijaya at gmail.com>:
> I'm fine with the delay. I've been thinking to implement the bot that will
> remind us when all the CI has been completed.
> So we don't have to wait, and won't forget about it.
>
> Currently miss-islington does this only for the backport PRs made by
> miss-islington.
> I think it'll be useful to do that on other PRs too.
> (yes I'm aware GitLab does this but we are on GitHub)
>
> Mariatta Wijaya
>

From mariatta.wijaya at gmail.com  Thu Jan 25 16:49:14 2018
From: mariatta.wijaya at gmail.com (Mariatta Wijaya)
Date: Thu, 25 Jan 2018 13:49:14 -0800
Subject: [python-committers] AppVeyor is now required to pass on PRs
In-Reply-To: <CAMpsgwYfK2icr=cuOHkTeHnvy25Y3qLCXE2F8jQWQ1ANMAAWSw@mail.gmail.com>
References: <CAP1=2W5eVY0dWNYaLkxhSF0_w9RDhtsJ8md9ePiP-nz9+DWW5w@mail.gmail.com>
 <CAMpsgwYBRkf57jsKPTnQ7-EHe2hrfN31+bH4Mgub8uRYSaTdLg@mail.gmail.com>
 <CAP1=2W48XQpn7fJU1HboB0r025PDAfsR-igchv_HbwqA=z9ODg@mail.gmail.com>
 <CAGbohnajBR4ebyH0nGhHkf-j5KbTt_BbWAmC9CGnuK2cRpUGhw@mail.gmail.com>
 <CAMpsgwYfK2icr=cuOHkTeHnvy25Y3qLCXE2F8jQWQ1ANMAAWSw@mail.gmail.com>
Message-ID: <CAGbohnbWW=YHPBXU1onOw7wDkNykoUGXCM4DNo3avuqyiL=PRw@mail.gmail.com>

>
> Is it possible to write a bot which merges a PR?


Yes it is possible, and we sort of discussing the same thing in python-dev
[1] :)

Each time I approve a backport PR created by miss-ilington with "LGTM,
> good bot", I hope secretly that the PR will be merged automatically
> once CI tests pass ;-)


You should have filed a feature request! :D
To make it happen, I'll need miss-islington be promoted and given write
access to CPython.
Currently miss-islington can't merge.

[1] https://mail.python.org/pipermail/python-dev/2018-January/151899.html

Mariatta Wijaya
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180125/babdc12b/attachment-0001.html>

From tjreedy at udel.edu  Thu Jan 25 18:43:12 2018
From: tjreedy at udel.edu (Terry Reedy)
Date: Thu, 25 Jan 2018 18:43:12 -0500
Subject: [python-committers] AppVeyor is now required to pass on PRs
In-Reply-To: <CAMpsgwYfK2icr=cuOHkTeHnvy25Y3qLCXE2F8jQWQ1ANMAAWSw@mail.gmail.com>
References: <CAP1=2W5eVY0dWNYaLkxhSF0_w9RDhtsJ8md9ePiP-nz9+DWW5w@mail.gmail.com>
 <CAMpsgwYBRkf57jsKPTnQ7-EHe2hrfN31+bH4Mgub8uRYSaTdLg@mail.gmail.com>
 <CAP1=2W48XQpn7fJU1HboB0r025PDAfsR-igchv_HbwqA=z9ODg@mail.gmail.com>
 <CAGbohnajBR4ebyH0nGhHkf-j5KbTt_BbWAmC9CGnuK2cRpUGhw@mail.gmail.com>
 <CAMpsgwYfK2icr=cuOHkTeHnvy25Y3qLCXE2F8jQWQ1ANMAAWSw@mail.gmail.com>
Message-ID: <e4e2f7e6-071f-8a46-d09c-fda8a03d5bdb@udel.edu>

On 1/25/2018 4:31 PM, Victor Stinner wrote:
> Hi,
> 
> The best would be able to have a bot merging a pull request once tests
> pass and a core developer asked a merge. I'm not talking about the
> current approval using review, but something new, like adding a
> special comment like "Merge". Such comment would only merge if it's
> written by a core developer.
> 
> Each time I approve a backport PR created by miss-ilington with "LGTM,
> good bot", I hope secretly that the PR will be merged automatically
> once CI tests pass ;-)

Great idea.  At this point, pressing the button is, for me at least, a 
formality.

tjr

From ethan at stoneleaf.us  Fri Jan 26 01:28:57 2018
From: ethan at stoneleaf.us (Ethan Furman)
Date: Thu, 25 Jan 2018 22:28:57 -0800
Subject: [python-committers] trivial tag on GitHub?
Message-ID: <5A6ACAA9.1000603@stoneleaf.us>

I created a new pull request to add a forgotten news entry, and now it's going through all the pre-checks, etc.

I seem to recall we could add a "trivial" tag to an issue to skip those.  Is that still true, and if so, how?

--
~Ethan~

From tjreedy at udel.edu  Fri Jan 26 03:45:11 2018
From: tjreedy at udel.edu (Terry Reedy)
Date: Fri, 26 Jan 2018 03:45:11 -0500
Subject: [python-committers] trivial tag on GitHub?
In-Reply-To: <5A6ACAA9.1000603@stoneleaf.us>
References: <5A6ACAA9.1000603@stoneleaf.us>
Message-ID: <d23bc8a5-477c-dee2-1f6b-d2eac1bee588@udel.edu>

On 1/26/2018 1:28 AM, Ethan Furman wrote:
> I created a new pull request to add a forgotten news entry, and now it's 
> going through all the pre-checks, etc.
> 
> I seem to recall we could add a "trivial" tag to an issue to skip 
> those.? Is that still true, and if so, how?

'trivial' was replaced by 'skip issue', to skip the bpo issue number 
check, and 'skip news', to skip the news check.  A PR to provide 
forgotten news entry should pass the news check and should have a bpo 
number (the same one in the news entry).



From ethan at stoneleaf.us  Fri Jan 26 09:47:51 2018
From: ethan at stoneleaf.us (Ethan Furman)
Date: Fri, 26 Jan 2018 06:47:51 -0800
Subject: [python-committers] trivial tag on GitHub?
In-Reply-To: <d23bc8a5-477c-dee2-1f6b-d2eac1bee588@udel.edu>
References: <5A6ACAA9.1000603@stoneleaf.us>
 <d23bc8a5-477c-dee2-1f6b-d2eac1bee588@udel.edu>
Message-ID: <5A6B3F97.5060401@stoneleaf.us>

On 01/26/2018 12:45 AM, Terry Reedy wrote:
> On 1/26/2018 1:28 AM, Ethan Furman wrote:

>> I created a new pull request to add a forgotten news entry, and now it's going through all the pre-checks, etc.
>>
>> I seem to recall we could add a "trivial" tag to an issue to skip those.?  Is that still true, and if so, how?
>
> 'trivial' was replaced by 'skip issue', to skip the bpo issue number check, and 'skip news', to skip the news check.  A
> PR to provide forgotten news entry should pass the news check and should have a bpo number (the same one in the news
> entry).

So when the original PR didn't have a news entry, what should I have seen to alert me to that?  And should this thread 
be on the Workflow list?

--
~Ethan~

From mariatta.wijaya at gmail.com  Fri Jan 26 12:28:25 2018
From: mariatta.wijaya at gmail.com (Mariatta Wijaya)
Date: Fri, 26 Jan 2018 09:28:25 -0800
Subject: [python-committers] trivial tag on GitHub?
In-Reply-To: <5A6B3F97.5060401@stoneleaf.us>
References: <5A6ACAA9.1000603@stoneleaf.us>
 <d23bc8a5-477c-dee2-1f6b-d2eac1bee588@udel.edu>
 <5A6B3F97.5060401@stoneleaf.us>
Message-ID: <CAGbohnbhkJm=TTR=zHfibehLRMv6RJpyN3pckgsEimRLGO4r0w@mail.gmail.com>

> So when the original PR didn't have a news entry, what should I have seen
> to alert me to that?


If a news entry is missing from the PR, the CI check at the bottom of the
PR will fail.
You should see the following:

bedevere/news -- No news entry in Misc/NEWS.d/next/ or "skip news" label
found

An example can be seen here (at least at the time I write this email)
https://github.com/python/cpython/pull/5347
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180126/28c83f3f/attachment.html>

From christian at python.org  Fri Jan 26 14:47:14 2018
From: christian at python.org (Christian Heimes)
Date: Fri, 26 Jan 2018 20:47:14 +0100
Subject: [python-committers] ssl module will require OpenSSL 1.0.2
Message-ID: <ac38f3a3-31a3-b609-ec78-f9ba2be1769d@python.org>

For your information,

my ssl module improvement "Let OpenSSL verify hostname and IP address"
will land either today or tomorrow. I'm just waiting for Alex to give me
the final ACK on PR https://github.com/python/cpython/pull/3462.

Once the PR has landed, several issues with hostname and IP address
verification will be solved. Python 3.7 will use OpenSSL's recommended
API to match hostnames. The API is OpenSSL 1.0.2+ only. OpenSSL 0.9.8
and 1.0.1 are no longer supported.

LibreSSL does not yet implement these APIs yet, see
https://github.com/libressl-portable/portable/issues/381 for my upstream
bug and
https://mail.python.org/pipermail/python-dev/2018-January/151824.html
for Python-dev discussion.


I also like to get https://github.com/python/cpython/pull/5259 into 3.7.
The PR adds support for OpenSSL's new API to set minimum and maximum TLS
protocol version. It's require for compatibility with future versions of
Debian. Debian has used the new APIs to disable TLS 1.0 and 1.1, see
https://bugs.python.org/issue31453.


PR https://github.com/python/cpython/pull/5162 implements PEP 543
Certificate and PrivateKey classes, but it's not finished yet. The code
works but it lacks tests and documentation.


My remaining TLS PRs are either bug fixes or can wait for 3.8. I'll
merge them after beta 1 has been released.

Christian

From ethan at stoneleaf.us  Fri Jan 26 16:05:18 2018
From: ethan at stoneleaf.us (Ethan Furman)
Date: Fri, 26 Jan 2018 13:05:18 -0800
Subject: [python-committers] trivial tag on GitHub?
In-Reply-To: <CAGbohnbhkJm=TTR=zHfibehLRMv6RJpyN3pckgsEimRLGO4r0w@mail.gmail.com>
References: <5A6ACAA9.1000603@stoneleaf.us>
 <d23bc8a5-477c-dee2-1f6b-d2eac1bee588@udel.edu>
 <5A6B3F97.5060401@stoneleaf.us>
 <CAGbohnbhkJm=TTR=zHfibehLRMv6RJpyN3pckgsEimRLGO4r0w@mail.gmail.com>
Message-ID: <5A6B980E.7040607@stoneleaf.us>

On 01/26/2018 09:28 AM, Mariatta Wijaya wrote:

>     So when the original PR didn't have a news entry, what should I have seen to alert me to that?
>
> If a news entry is missing from the PR, the CI check at the bottom of the PR will fail.
> You should see the following:
>
> bedevere/news -- No news entry in Misc/NEWS.d/next/ or "skip news" label found
>
> An example can be seen here (at least at the time I write this email)
> https://github.com/python/cpython/pull/5347

Okay, I see it in your example.  Here's the PR I'm talking about:

   https://github.com/python/cpython/pull/5103

I see no NEWS commit, and no "missing news" alert.  Did I misstep somewhere?

--
~Ethan~

From nad at python.org  Fri Jan 26 16:09:04 2018
From: nad at python.org (Ned Deily)
Date: Fri, 26 Jan 2018 16:09:04 -0500
Subject: [python-committers] trivial tag on GitHub?
In-Reply-To: <5A6B980E.7040607@stoneleaf.us>
References: <5A6ACAA9.1000603@stoneleaf.us>
 <d23bc8a5-477c-dee2-1f6b-d2eac1bee588@udel.edu>
 <5A6B3F97.5060401@stoneleaf.us>
 <CAGbohnbhkJm=TTR=zHfibehLRMv6RJpyN3pckgsEimRLGO4r0w@mail.gmail.com>
 <5A6B980E.7040607@stoneleaf.us>
Message-ID: <07AD0A16-4BB0-416C-9D05-96740081CBCE@python.org>

On Jan 26, 2018, at 16:05, Ethan Furman <ethan at stoneleaf.us> wrote:
> On 01/26/2018 09:28 AM, Mariatta Wijaya wrote:
> 
>>    So when the original PR didn't have a news entry, what should I have seen to alert me to that?
>> 
>> If a news entry is missing from the PR, the CI check at the bottom of the PR will fail.
>> You should see the following:
>> 
>> bedevere/news -- No news entry in Misc/NEWS.d/next/ or "skip news" label found
>> 
>> An example can be seen here (at least at the time I write this email)
>> https://github.com/python/cpython/pull/5347
> 
> Okay, I see it in your example.  Here's the PR I'm talking about:
> 
>  https://github.com/python/cpython/pull/5103
> 
> I see no NEWS commit, and no "missing news" alert.  Did I misstep somewhere?

It's all the way at the bottom, generated by blurb:

   Misc/NEWS.d/next/Library/2018-01-04-14-45-33.bpo-29237.zenYA6.rst

https://github.com/python/cpython/pull/5103/files

--
  Ned Deily
  nad at python.org -- []


From ethan at stoneleaf.us  Fri Jan 26 16:21:03 2018
From: ethan at stoneleaf.us (Ethan Furman)
Date: Fri, 26 Jan 2018 13:21:03 -0800
Subject: [python-committers] trivial tag on GitHub?
In-Reply-To: <07AD0A16-4BB0-416C-9D05-96740081CBCE@python.org>
References: <5A6ACAA9.1000603@stoneleaf.us>
 <d23bc8a5-477c-dee2-1f6b-d2eac1bee588@udel.edu>
 <5A6B3F97.5060401@stoneleaf.us>
 <CAGbohnbhkJm=TTR=zHfibehLRMv6RJpyN3pckgsEimRLGO4r0w@mail.gmail.com>
 <5A6B980E.7040607@stoneleaf.us>
 <07AD0A16-4BB0-416C-9D05-96740081CBCE@python.org>
Message-ID: <5A6B9BBF.8060000@stoneleaf.us>

On 01/26/2018 01:09 PM, Ned Deily wrote:
> On Jan 26, 2018, at 16:05, Ethan Furman <ethan at stoneleaf.us> wrote:
>> On 01/26/2018 09:28 AM, Mariatta Wijaya wrote:
>>
>>>     So when the original PR didn't have a news entry, what should I have seen to alert me to that?
>>>
>>> If a news entry is missing from the PR, the CI check at the bottom of the PR will fail.
>>> You should see the following:
>>>
>>> bedevere/news -- No news entry in Misc/NEWS.d/next/ or "skip news" label found
>>>
>>> An example can be seen here (at least at the time I write this email)
>>> https://github.com/python/cpython/pull/5347
>>
>> Okay, I see it in your example.  Here's the PR I'm talking about:
>>
>>   https://github.com/python/cpython/pull/5103
>>
>> I see no NEWS commit, and no "missing news" alert.  Did I misstep somewhere?
>
> It's all the way at the bottom, generated by blurb:
>
>     Misc/NEWS.d/next/Library/2018-01-04-14-45-33.bpo-29237.zenYA6.rst
>
> https://github.com/python/cpython/pull/5103/files

Ah, thanks Ned, and everyone.  So the takeaway is if I see something totally incomprehensible, it's probably the NEWS 
file.  Also, I can't merge without a NEWS file.  Good things.  ;)

--
~Ethan~

From victor.stinner at gmail.com  Fri Jan 26 17:03:28 2018
From: victor.stinner at gmail.com (Victor Stinner)
Date: Fri, 26 Jan 2018 23:03:28 +0100
Subject: [python-committers] ssl module will require OpenSSL 1.0.2
In-Reply-To: <ac38f3a3-31a3-b609-ec78-f9ba2be1769d@python.org>
References: <ac38f3a3-31a3-b609-ec78-f9ba2be1769d@python.org>
Message-ID: <CAMpsgwZJpKfKoNpoNSJj0cCqvRPdAKkdPYnXzrDJ93L-GBTkfw@mail.gmail.com>

2018-01-26 20:47 GMT+01:00 Christian Heimes <christian at python.org>:
> LibreSSL does not yet implement these APIs yet

Does it mean that Python 3.7 will not support OpenBSD anymore? Well,
it's not like OpenBSD support is perfect, but there are only few
issues on OpenBSD.

Does other operating systems use LibreSSL as their system SSL library
(instead of OpenSSL)?

Victor

From christian at python.org  Fri Jan 26 17:09:24 2018
From: christian at python.org (Christian Heimes)
Date: Fri, 26 Jan 2018 23:09:24 +0100
Subject: [python-committers] ssl module will require OpenSSL 1.0.2
In-Reply-To: <CAMpsgwZJpKfKoNpoNSJj0cCqvRPdAKkdPYnXzrDJ93L-GBTkfw@mail.gmail.com>
References: <ac38f3a3-31a3-b609-ec78-f9ba2be1769d@python.org>
 <CAMpsgwZJpKfKoNpoNSJj0cCqvRPdAKkdPYnXzrDJ93L-GBTkfw@mail.gmail.com>
Message-ID: <3f17dd23-5e0d-3e41-b4bb-294e3c23bb83@python.org>

On 2018-01-26 23:03, Victor Stinner wrote:
> 2018-01-26 20:47 GMT+01:00 Christian Heimes <christian at python.org>:
>> LibreSSL does not yet implement these APIs yet
> 
> Does it mean that Python 3.7 will not support OpenBSD anymore? Well,
> it's not like OpenBSD support is perfect, but there are only few
> issues on OpenBSD.
> 
> Does other operating systems use LibreSSL as their system SSL library
> (instead of OpenSSL)?

OpenBSD is still supported. But you either have to install OpenSSL, live
without SSL support or get LibreSSL fixed. Python's test suite is
passing without ssl available.


From victor.stinner at gmail.com  Fri Jan 26 17:13:40 2018
From: victor.stinner at gmail.com (Victor Stinner)
Date: Fri, 26 Jan 2018 23:13:40 +0100
Subject: [python-committers] ssl module will require OpenSSL 1.0.2
In-Reply-To: <3f17dd23-5e0d-3e41-b4bb-294e3c23bb83@python.org>
References: <ac38f3a3-31a3-b609-ec78-f9ba2be1769d@python.org>
 <CAMpsgwZJpKfKoNpoNSJj0cCqvRPdAKkdPYnXzrDJ93L-GBTkfw@mail.gmail.com>
 <3f17dd23-5e0d-3e41-b4bb-294e3c23bb83@python.org>
Message-ID: <CAMpsgwYfHkPB3jJ6+NDUU_UC1jfLfbwKS8uuNHF6Rohbd--FAw@mail.gmail.com>

2018-01-26 23:09 GMT+01:00 Christian Heimes <christian at python.org>:
> OpenBSD is still supported. But you either have to install OpenSSL, live
> without SSL support or get LibreSSL fixed. Python's test suite is
> passing without ssl available.

(Sure, if LibreSSL is fixed, the issue goes away, but right now
https://github.com/libressl-portable/portable/issues/381 is still
open.)

I'm not sure that it's possible to easily install OpenSSL on OpenBSD.
OpenBSD is linked to the team who wrote LibreSSL and OpenBSD replaced
OpenSSL with LibreSSL.

Python without ssl also means Python without pip. Python without
pip... well, it's more limited than Python with pip :-)

Victor

From christian at python.org  Fri Jan 26 17:25:18 2018
From: christian at python.org (Christian Heimes)
Date: Fri, 26 Jan 2018 23:25:18 +0100
Subject: [python-committers] ssl module will require OpenSSL 1.0.2
In-Reply-To: <CAMpsgwYfHkPB3jJ6+NDUU_UC1jfLfbwKS8uuNHF6Rohbd--FAw@mail.gmail.com>
References: <ac38f3a3-31a3-b609-ec78-f9ba2be1769d@python.org>
 <CAMpsgwZJpKfKoNpoNSJj0cCqvRPdAKkdPYnXzrDJ93L-GBTkfw@mail.gmail.com>
 <3f17dd23-5e0d-3e41-b4bb-294e3c23bb83@python.org>
 <CAMpsgwYfHkPB3jJ6+NDUU_UC1jfLfbwKS8uuNHF6Rohbd--FAw@mail.gmail.com>
Message-ID: <27a0c7aa-7022-05e5-bc2a-8ed6ef3a0aec@python.org>

On 2018-01-26 23:13, Victor Stinner wrote:
> 2018-01-26 23:09 GMT+01:00 Christian Heimes <christian at python.org>:
>> OpenBSD is still supported. But you either have to install OpenSSL, live
>> without SSL support or get LibreSSL fixed. Python's test suite is
>> passing without ssl available.
> 
> (Sure, if LibreSSL is fixed, the issue goes away, but right now
> https://github.com/libressl-portable/portable/issues/381 is still
> open.)
> 
> I'm not sure that it's possible to easily install OpenSSL on OpenBSD.
> OpenBSD is linked to the team who wrote LibreSSL and OpenBSD replaced
> OpenSSL with LibreSSL.
> 
> Python without ssl also means Python without pip. Python without
> pip... well, it's more limited than Python with pip :-)

We never officially supported LibreSSL, so we aren't breaking any
promise. I supported LibreSSL as a best-effort approach.

You can still have TLS support with extra packages. Python requests and
pip can also use PyOpenSSL.

Christian


From christian at cheimes.de  Fri Jan 26 17:19:40 2018
From: christian at cheimes.de (Christian Heimes)
Date: Fri, 26 Jan 2018 23:19:40 +0100
Subject: [python-committers] ssl module will require OpenSSL 1.0.2
In-Reply-To: <3f17dd23-5e0d-3e41-b4bb-294e3c23bb83@python.org>
References: <ac38f3a3-31a3-b609-ec78-f9ba2be1769d@python.org>
 <CAMpsgwZJpKfKoNpoNSJj0cCqvRPdAKkdPYnXzrDJ93L-GBTkfw@mail.gmail.com>
 <3f17dd23-5e0d-3e41-b4bb-294e3c23bb83@python.org>
Message-ID: <a399d1ff-7ee5-f70b-9b70-dc21f85f94e9@cheimes.de>

On 2018-01-26 23:09, Christian Heimes wrote:
> On 2018-01-26 23:03, Victor Stinner wrote:
>> 2018-01-26 20:47 GMT+01:00 Christian Heimes <christian at python.org>:
>>> LibreSSL does not yet implement these APIs yet
>>
>> Does it mean that Python 3.7 will not support OpenBSD anymore? Well,
>> it's not like OpenBSD support is perfect, but there are only few
>> issues on OpenBSD.
>>
>> Does other operating systems use LibreSSL as their system SSL library
>> (instead of OpenSSL)?
> 
> OpenBSD is still supported. But you either have to install OpenSSL, live
> without SSL support or get LibreSSL fixed. Python's test suite is
> passing without ssl available.

According to https://en.wikipedia.org/wiki/LibreSSL#Adoption Alpine
Linux, DragonFly BSD and OpenBSD are affected.
https://distrowatch.com/table.php?distribution=openbsd still suggests
that OpenBSD ships with OpenSSL 1.0.2l. Not sure if that is true, though.

All other distributions either have only OpenSSL (CentOS, Debian,
Fedora, RHEL, Ubuntu), OpenSSL as default (Gentoo, FreeBSD) or none
(Windows, macOS). NetBSD seems to support both.

Christian

From victor.stinner at gmail.com  Fri Jan 26 18:23:41 2018
From: victor.stinner at gmail.com (Victor Stinner)
Date: Sat, 27 Jan 2018 00:23:41 +0100
Subject: [python-committers] ssl module will require OpenSSL 1.0.2
In-Reply-To: <27a0c7aa-7022-05e5-bc2a-8ed6ef3a0aec@python.org>
References: <ac38f3a3-31a3-b609-ec78-f9ba2be1769d@python.org>
 <CAMpsgwZJpKfKoNpoNSJj0cCqvRPdAKkdPYnXzrDJ93L-GBTkfw@mail.gmail.com>
 <3f17dd23-5e0d-3e41-b4bb-294e3c23bb83@python.org>
 <CAMpsgwYfHkPB3jJ6+NDUU_UC1jfLfbwKS8uuNHF6Rohbd--FAw@mail.gmail.com>
 <27a0c7aa-7022-05e5-bc2a-8ed6ef3a0aec@python.org>
Message-ID: <CAMpsgwYSjuewwfxE1WbE-LpDt3jN=EwrwRBqeEKf7H=_SO9A6g@mail.gmail.com>

2018-01-26 23:25 GMT+01:00 Christian Heimes <christian at python.org>:
> We never officially supported LibreSSL, so we aren't breaking any
> promise. I supported LibreSSL as a best-effort approach.
>
> You can still have TLS support with extra packages. Python requests and
> pip can also use PyOpenSSL.

I have no opinion on OpenBSD support.

It's good to know that the pip issue can be worked around (if
PyOpenSSL can be easily installed on OpenBSD? I mean... without pip
;-))).

At least, if Python 3.7 doesn't work on OpenBSD anymore because of
this issue, maybe LibreSSL will be more motivated to fix the issue?
:-)

Victor

From brett at python.org  Fri Jan 26 20:50:09 2018
From: brett at python.org (Brett Cannon)
Date: Sat, 27 Jan 2018 01:50:09 +0000
Subject: [python-committers] trivial tag on GitHub?
In-Reply-To: <5A6B980E.7040607@stoneleaf.us>
References: <5A6ACAA9.1000603@stoneleaf.us>
 <d23bc8a5-477c-dee2-1f6b-d2eac1bee588@udel.edu>
 <5A6B3F97.5060401@stoneleaf.us>
 <CAGbohnbhkJm=TTR=zHfibehLRMv6RJpyN3pckgsEimRLGO4r0w@mail.gmail.com>
 <5A6B980E.7040607@stoneleaf.us>
Message-ID: <CAP1=2W4NqY0mY23xsd17r1AnUeufHQz3Jqv-PoJBG5eeQ8zfzQ@mail.gmail.com>

On Fri, 26 Jan 2018 at 13:04 Ethan Furman <ethan at stoneleaf.us> wrote:

> On 01/26/2018 09:28 AM, Mariatta Wijaya wrote:
>
> >     So when the original PR didn't have a news entry, what should I have
> seen to alert me to that?
> >
> > If a news entry is missing from the PR, the CI check at the bottom of
> the PR will fail.
> > You should see the following:
> >
> > bedevere/news -- No news entry in Misc/NEWS.d/next/ or "skip news" label
> found
> >
> > An example can be seen here (at least at the time I write this email)
> > https://github.com/python/cpython/pull/5347
>
> Okay, I see it in your example.  Here's the PR I'm talking about:
>
>    https://github.com/python/cpython/pull/5103
>
> I see no NEWS commit, and no "missing news" alert.  Did I misstep
> somewhere?
>

No, you just missed the news entry:
https://github.com/python/cpython/pull/5103/files#diff-b1662ec7a5e858b21ea9fe160546636f
.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180127/246fd7f8/attachment.html>

From ncoghlan at gmail.com  Sat Jan 27 00:47:15 2018
From: ncoghlan at gmail.com (Nick Coghlan)
Date: Sat, 27 Jan 2018 15:47:15 +1000
Subject: [python-committers] AppVeyor is now required to pass on PRs
In-Reply-To: <CAMpsgwYfK2icr=cuOHkTeHnvy25Y3qLCXE2F8jQWQ1ANMAAWSw@mail.gmail.com>
References: <CAP1=2W5eVY0dWNYaLkxhSF0_w9RDhtsJ8md9ePiP-nz9+DWW5w@mail.gmail.com>
 <CAMpsgwYBRkf57jsKPTnQ7-EHe2hrfN31+bH4Mgub8uRYSaTdLg@mail.gmail.com>
 <CAP1=2W48XQpn7fJU1HboB0r025PDAfsR-igchv_HbwqA=z9ODg@mail.gmail.com>
 <CAGbohnajBR4ebyH0nGhHkf-j5KbTt_BbWAmC9CGnuK2cRpUGhw@mail.gmail.com>
 <CAMpsgwYfK2icr=cuOHkTeHnvy25Y3qLCXE2F8jQWQ1ANMAAWSw@mail.gmail.com>
Message-ID: <CADiSq7c5L7jqNwtp-g9TeEVsv7jCtrpy8JVdN=1j+jc7O=UL7Q@mail.gmail.com>

On 26 January 2018 at 07:31, Victor Stinner <victor.stinner at gmail.com>
wrote:

> Each time I approve a backport PR created by miss-ilington with "LGTM,
> good bot", I hope secretly that the PR will be merged automatically
> once CI tests pass ;-)
>
> Is it possible to write a bot which merges a PR?
>

The last time we looked at this, the main technical problem was that there
wasn't a native way to pre-edit the commit message before hitting the
"Squash & Merge" button, and emulating that capability via a formatted
comment misses out on a lot of UI niceties.

So for a first pass, I think a comment from the bot saying "Approved PR
ready for merge" and mentioning the committers that left approving reviews
would be a good way to go (I know Sanyam had to ping me on a couple of
issues because I'd approved them, but switched to doing something else
because CI was still running, and then never got back to actually merge
them).

Cheers,
Nick.

-- 
Nick Coghlan   |   ncoghlan at gmail.com   |   Brisbane, Australia
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180127/f66cc5d3/attachment.html>

From ncoghlan at gmail.com  Sat Jan 27 00:50:56 2018
From: ncoghlan at gmail.com (Nick Coghlan)
Date: Sat, 27 Jan 2018 15:50:56 +1000
Subject: [python-committers] ssl module will require OpenSSL 1.0.2
In-Reply-To: <CAMpsgwYSjuewwfxE1WbE-LpDt3jN=EwrwRBqeEKf7H=_SO9A6g@mail.gmail.com>
References: <ac38f3a3-31a3-b609-ec78-f9ba2be1769d@python.org>
 <CAMpsgwZJpKfKoNpoNSJj0cCqvRPdAKkdPYnXzrDJ93L-GBTkfw@mail.gmail.com>
 <3f17dd23-5e0d-3e41-b4bb-294e3c23bb83@python.org>
 <CAMpsgwYfHkPB3jJ6+NDUU_UC1jfLfbwKS8uuNHF6Rohbd--FAw@mail.gmail.com>
 <27a0c7aa-7022-05e5-bc2a-8ed6ef3a0aec@python.org>
 <CAMpsgwYSjuewwfxE1WbE-LpDt3jN=EwrwRBqeEKf7H=_SO9A6g@mail.gmail.com>
Message-ID: <CADiSq7f3a-pF_4C_0H0irB5mJf1h7Q9WrkhSE1WwoVpODHc4sg@mail.gmail.com>

On 27 January 2018 at 09:23, Victor Stinner <victor.stinner at gmail.com>
wrote:

> At least, if Python 3.7 doesn't work on OpenBSD anymore because of
> this issue, maybe LibreSSL will be more motivated to fix the issue?
> :-)
>

Anyone using the Alpine Linux based Docker images (including Docker
themselves) will also have a fair incentive to solve the problem (although
in that case, their resolution might be "switch back to using OpenSSL given
the improvement over the past couple of years").

Cheers,
Nick.

-- 
Nick Coghlan   |   ncoghlan at gmail.com   |   Brisbane, Australia
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180127/2093cdca/attachment-0001.html>

From victor.stinner at gmail.com  Sat Jan 27 06:10:56 2018
From: victor.stinner at gmail.com (Victor Stinner)
Date: Sat, 27 Jan 2018 12:10:56 +0100
Subject: [python-committers] core developer status
In-Reply-To: <22ed7c8e-5415-c1ca-13e4-ea40dbacb54c@gmail.com>
References: <22ed7c8e-5415-c1ca-13e4-ea40dbacb54c@gmail.com>
Message-ID: <CAMpsgwbBuo0SAfc8hFLtP_weToDOGeL9jDbuXn_xkEA8uN8c6A@mail.gmail.com>

Hi Xavier,

I am really sad to read this email, but well, you have your reasons.

I wanted to thank you for your numerous contributions to pdb, Android
support, enhancement of the build system, bugfixes, etc. Thanks to you, we
are now very close to have a full support of Android, basically the last
piece is just to setup a buildbot worker.

You will always be welcome if you would like to come back. Obviously, you
can still contribute without being a core dev ;-)

Victor

Le 25 janv. 2018 13:29, "Xavier de Gaye" <xdegaye at gmail.com> a ?crit :

> I have decided for personal reasons to stop contributing to CPython as a
> core developer, that does not mean I will stop contributing to CPython. So
> please remove me from the list of core developers and revoke all my access
> rights. Thank you.
>
> Xavier
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180127/e9ff969a/attachment.html>

From nad at python.org  Sat Jan 27 14:04:34 2018
From: nad at python.org (Ned Deily)
Date: Sat, 27 Jan 2018 14:04:34 -0500
Subject: [python-committers] IMPORTANT: 3.7.0b1 and feature code cutoff
 2018-01-29
Message-ID: <44C4C57A-ABBA-4F5F-BB1E-42A46D12FF5E@python.org>

Happy mid-winter (northern hemisphere) or -summer (southern)!

The time has come to finish feature development for Python 3.7.  As
previously announced, this coming Monday marks the end of the alpha
phase of the release cycle and the beginning of the beta phase.  Up
through the alpha phase, there has been unrestricted feature
development phase; that ends as of beta 1.  All feature code for
3.7.0 must be checked in by the b1 cutoff on end-of-day Monday
(unless you have contacted me and we have agreed on an 
extension).

As was done during the 3.6 release cycle, we will create the 3.7 
branch at b1 time.  During the beta phase, the emphasis is on fixes 
for new features, fixes for all categories of bugs and regressions, 
and documentation fixes/updates.  I will send out specific information 
for core committers next week after the creation of the b1 tag and the 
3.7 branch.

Beta releases are intended to give the wider community the opportunity 
to test new features and bug fixes and to prepare their projects to 
support the new feature release.  We strongly encourage maintainers of 
third-party Python projects to test with 3.7 during the beta phase and 
report issues found to bugs.python.org as soon as possible.  While the 
release will be feature complete entering the beta phase, it is 
possible that features may be modified or, in rare cases, deleted up 
until the start of the release candidate phase.  Our goal is have no 
changes after rc1.  To achieve that, it will be extremely important to 
get as much exposure for 3.7 as possible during the beta phase.

Also, during the 3.6.0 release cycle, the question of ABI stability 
during the final (e.g. beta and release candidate) phases of the 
release came up.  Last-minute changes put a burden on our and our 
downstream users testing efforts and adds risk to the release.  
Therefore, as was proposed then, we will strive to have no ABI changes 
after beta 3.  More details forthcoming.

To recap:

2018-01-29 ~23:59 Anywhere on Earth (UTC-12:00):
    code snapshot for 3.7.0 beta 1 (feature code freeze, no new
    features)

2019-01-30:
    3.7 branch opens for 3.7.0
    feature development continues on master branch, now for 3.8.0

2018-01-30 to 2018-05-21:
    3.7.0 beta phase (bug, regression, and doc fixes, no new features)

2018-03-26:
    3.7.0 beta 3 (3.7.0 ABI freeze)

2018-05-21:
    3.7.0 release candidate 1 (3.7.0 code freeze)

2018-06-15:
    3.7.0 release (3.7.0rc1 plus, if necessary, any dire emergency
    fixes)

~2019-12 tentative (3.7.0 release + 18 months):
    3.8.0 release (details TBD)


Thank you all for your great efforts so far on 3.7; it should be
another great release!

--Ned

https://www.python.org/dev/peps/pep-0537/

--
  Ned Deily
  nad at python.org -- []


From barry at python.org  Sat Jan 27 16:02:08 2018
From: barry at python.org (Barry Warsaw)
Date: Sat, 27 Jan 2018 16:02:08 -0500
Subject: [python-committers] =?utf-8?q?Welcome_the_3=2E8_and_3=2E9_Releas?=
 =?utf-8?q?e_Manager_-_=C5=81ukasz_Langa!?=
Message-ID: <F611C1E7-5D49-4240-9F26-3E3A5A1CC9E7@python.org>

As Ned just announced, Python 3.7 is very soon to enter beta 1 and thus feature freeze.  I think we can all give Ned a huge round of applause for his amazing work as Release Manager for Python 3.6 and 3.7.  Let?s also give him all the support he needs to make 3.7 the best version yet.

As is tradition, Python release managers serve for two consecutive releases, and so with the 3.7 release branch about to be made, it?s time to announce our release manager for Python 3.8 and 3.9.

By unanimous and enthusiastic consent from the Python Secret Underground (PSU, which emphatically does not exist), the Python Cabal of Former and Current Release Managers, Cardinal Xim?nez, and of course the BDFL, please welcome your next release manager?

?ukasz Langa!

And also, happy 24th anniversary to Guido?s Python 1.0.0 announcement[1].  It?s been a fun and incredible ride, and I firmly believe that Python?s best days are ahead of us.

Enjoy,
-Barry

[1] https://groups.google.com/forum/?hl=en#!original/comp.lang.misc/_QUzdEGFwCo/KIFdu0-Dv7sJ

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180127/88d4a563/attachment.sig>

From ericsnowcurrently at gmail.com  Sat Jan 27 16:14:35 2018
From: ericsnowcurrently at gmail.com (Eric Snow)
Date: Sat, 27 Jan 2018 14:14:35 -0700
Subject: [python-committers] 
	=?utf-8?q?Welcome_the_3=2E8_and_3=2E9_Releas?=
	=?utf-8?q?e_Manager_-_=C5=81ukasz_Langa!?=
In-Reply-To: <F611C1E7-5D49-4240-9F26-3E3A5A1CC9E7@python.org>
References: <F611C1E7-5D49-4240-9F26-3E3A5A1CC9E7@python.org>
Message-ID: <CALFfu7BQ0JrcPZ1x4Jk5vZxAayHK-_SAWdOX9K_nOGQWJmX96Q@mail.gmail.com>

On Sat, Jan 27, 2018 at 2:02 PM, Barry Warsaw <barry at python.org> wrote:
> please welcome your next release manager?
>
> ?ukasz Langa!

Congrats, ?ukasz!  (or condolences? <wink>)

-eric

From eric at trueblade.com  Sat Jan 27 16:07:22 2018
From: eric at trueblade.com (Eric V. Smith)
Date: Sat, 27 Jan 2018 16:07:22 -0500
Subject: [python-committers] 
 =?utf-8?q?Welcome_the_3=2E8_and_3=2E9_Releas?=
 =?utf-8?q?e_Manager_-_=C5=81ukasz_Langa!?=
In-Reply-To: <F611C1E7-5D49-4240-9F26-3E3A5A1CC9E7@python.org>
References: <F611C1E7-5D49-4240-9F26-3E3A5A1CC9E7@python.org>
Message-ID: <a5f3b857-b8b8-e51c-558b-9831d69ce70d@trueblade.com>

That's awesome! A great choice. Congrats, ?ukasz.

Eric.

On 1/27/2018 4:02 PM, Barry Warsaw wrote:
> As Ned just announced, Python 3.7 is very soon to enter beta 1 and thus feature freeze.  I think we can all give Ned a huge round of applause for his amazing work as Release Manager for Python 3.6 and 3.7.  Let?s also give him all the support he needs to make 3.7 the best version yet.
> 
> As is tradition, Python release managers serve for two consecutive releases, and so with the 3.7 release branch about to be made, it?s time to announce our release manager for Python 3.8 and 3.9.
> 
> By unanimous and enthusiastic consent from the Python Secret Underground (PSU, which emphatically does not exist), the Python Cabal of Former and Current Release Managers, Cardinal Xim?nez, and of course the BDFL, please welcome your next release manager?
> 
> ?ukasz Langa!
> 
> And also, happy 24th anniversary to Guido?s Python 1.0.0 announcement[1].  It?s been a fun and incredible ride, and I firmly believe that Python?s best days are ahead of us.
> 
> Enjoy,
> -Barry
> 
> [1] https://groups.google.com/forum/?hl=en#!original/comp.lang.misc/_QUzdEGFwCo/KIFdu0-Dv7sJ
> 
> 
> 
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
> 


From guido at python.org  Sat Jan 27 17:04:54 2018
From: guido at python.org (Guido van Rossum)
Date: Sat, 27 Jan 2018 14:04:54 -0800
Subject: [python-committers] 
	=?utf-8?q?Welcome_the_3=2E8_and_3=2E9_Releas?=
	=?utf-8?q?e_Manager_-_=C5=81ukasz_Langa!?=
In-Reply-To: <a5f3b857-b8b8-e51c-558b-9831d69ce70d@trueblade.com>
References: <F611C1E7-5D49-4240-9F26-3E3A5A1CC9E7@python.org>
 <a5f3b857-b8b8-e51c-558b-9831d69ce70d@trueblade.com>
Message-ID: <CAP7+vJJW8aeif5sVT44WSJ2L1iEtOA=tc+sfC9=q4rigO4OiBQ@mail.gmail.com>

Hardly a surprising choice! Congrats, ?ukasz. (And never forget that at
every Mac OS X upgrade I have to install the extended keyboard just so I
can type that darn ?. :-)

On Sat, Jan 27, 2018 at 1:07 PM, Eric V. Smith <eric at trueblade.com> wrote:

> That's awesome! A great choice. Congrats, ?ukasz.
>
> Eric.
>
>
> On 1/27/2018 4:02 PM, Barry Warsaw wrote:
>
>> As Ned just announced, Python 3.7 is very soon to enter beta 1 and thus
>> feature freeze.  I think we can all give Ned a huge round of applause for
>> his amazing work as Release Manager for Python 3.6 and 3.7.  Let?s also
>> give him all the support he needs to make 3.7 the best version yet.
>>
>> As is tradition, Python release managers serve for two consecutive
>> releases, and so with the 3.7 release branch about to be made, it?s time to
>> announce our release manager for Python 3.8 and 3.9.
>>
>> By unanimous and enthusiastic consent from the Python Secret Underground
>> (PSU, which emphatically does not exist), the Python Cabal of Former and
>> Current Release Managers, Cardinal Xim?nez, and of course the BDFL, please
>> welcome your next release manager?
>>
>> ?ukasz Langa!
>>
>> And also, happy 24th anniversary to Guido?s Python 1.0.0
>> announcement[1].  It?s been a fun and incredible ride, and I firmly believe
>> that Python?s best days are ahead of us.
>>
>> Enjoy,
>> -Barry
>>
>> [1] https://groups.google.com/forum/?hl=en#!original/comp.lang.
>> misc/_QUzdEGFwCo/KIFdu0-Dv7sJ
>>
>>
>>
>> _______________________________________________
>> python-committers mailing list
>> python-committers at python.org
>> https://mail.python.org/mailman/listinfo/python-committers
>> Code of Conduct: https://www.python.org/psf/codeofconduct/
>>
>>
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>



-- 
--Guido van Rossum (python.org/~guido)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180127/6ab8c20d/attachment-0001.html>

From barry at python.org  Sat Jan 27 17:12:20 2018
From: barry at python.org (Barry Warsaw)
Date: Sat, 27 Jan 2018 17:12:20 -0500
Subject: [python-committers] 
 =?utf-8?q?Welcome_the_3=2E8_and_3=2E9_Releas?=
 =?utf-8?q?e_Manager_-_=C5=81ukasz_Langa!?=
In-Reply-To: <CAP7+vJJW8aeif5sVT44WSJ2L1iEtOA=tc+sfC9=q4rigO4OiBQ@mail.gmail.com>
References: <F611C1E7-5D49-4240-9F26-3E3A5A1CC9E7@python.org>
 <a5f3b857-b8b8-e51c-558b-9831d69ce70d@trueblade.com>
 <CAP7+vJJW8aeif5sVT44WSJ2L1iEtOA=tc+sfC9=q4rigO4OiBQ@mail.gmail.com>
Message-ID: <D114C342-7F6E-4BDD-BDF4-768A28834A3E@python.org>

On Jan 27, 2018, at 17:04, Guido van Rossum <guido at python.org <mailto:guido at python.org>> wrote:
> 
> Hardly a surprising choice! Congrats, ?ukasz. (And never forget that at every Mac OS X upgrade I have to install the extended keyboard just so I can type that darn ?. :-)

Heh, I *just* learned that, at least on macOS High Sierra (and probably going back several releases), on a US keyboard you can press and hold the ?L? (cap-L) key.  A little popup will appear like the attached image (if this doesn?t get stripped by Mailman).  Hit ?1? and the slashy-L will get entered: ?.

Cheers
-Barry
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180127/2193193a/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Screen Shot 2018-01-27 at 17.09.58.png
Type: image/png
Size: 19881 bytes
Desc: not available
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180127/2193193a/attachment-0001.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180127/2193193a/attachment-0001.sig>

From senthil at uthcode.com  Sat Jan 27 17:23:35 2018
From: senthil at uthcode.com (Senthil Kumaran)
Date: Sat, 27 Jan 2018 14:23:35 -0800
Subject: [python-committers] 
	=?utf-8?q?Welcome_the_3=2E8_and_3=2E9_Releas?=
	=?utf-8?q?e_Manager_-_=C5=81ukasz_Langa!?=
In-Reply-To: <F611C1E7-5D49-4240-9F26-3E3A5A1CC9E7@python.org>
References: <F611C1E7-5D49-4240-9F26-3E3A5A1CC9E7@python.org>
Message-ID: <CAPOVWOSD2Oh+zExLf=pGPkDYYznmpySE=ZTCvcM+6cDQvYNLxg@mail.gmail.com>

Congrats, ?ukasz.  And Thank you, Ned, for managing the 3.6 and 3.7
Releases.

-- 
Senthil


On Sat, Jan 27, 2018 at 1:02 PM, Barry Warsaw <barry at python.org> wrote:

> As Ned just announced, Python 3.7 is very soon to enter beta 1 and thus
> feature freeze.  I think we can all give Ned a huge round of applause for
> his amazing work as Release Manager for Python 3.6 and 3.7.  Let?s also
> give him all the support he needs to make 3.7 the best version yet.
>
> As is tradition, Python release managers serve for two consecutive
> releases, and so with the 3.7 release branch about to be made, it?s time to
> announce our release manager for Python 3.8 and 3.9.
>
> By unanimous and enthusiastic consent from the Python Secret Underground
> (PSU, which emphatically does not exist), the Python Cabal of Former and
> Current Release Managers, Cardinal Xim?nez, and of course the BDFL, please
> welcome your next release manager?
>
> ?ukasz Langa!
>
> And also, happy 24th anniversary to Guido?s Python 1.0.0 announcement[1].
> It?s been a fun and incredible ride, and I firmly believe that Python?s
> best days are ahead of us.
>
> Enjoy,
> -Barry
>
> [1] https://groups.google.com/forum/?hl=en#!original/comp.
> lang.misc/_QUzdEGFwCo/KIFdu0-Dv7sJ
>
>
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180127/d7469297/attachment.html>

From guido at python.org  Sat Jan 27 17:38:47 2018
From: guido at python.org (Guido van Rossum)
Date: Sat, 27 Jan 2018 14:38:47 -0800
Subject: [python-committers] 
	=?utf-8?q?Welcome_the_3=2E8_and_3=2E9_Releas?=
	=?utf-8?q?e_Manager_-_=C5=81ukasz_Langa!?=
In-Reply-To: <D114C342-7F6E-4BDD-BDF4-768A28834A3E@python.org>
References: <F611C1E7-5D49-4240-9F26-3E3A5A1CC9E7@python.org>
 <a5f3b857-b8b8-e51c-558b-9831d69ce70d@trueblade.com>
 <CAP7+vJJW8aeif5sVT44WSJ2L1iEtOA=tc+sfC9=q4rigO4OiBQ@mail.gmail.com>
 <D114C342-7F6E-4BDD-BDF4-768A28834A3E@python.org>
Message-ID: <CAP7+vJLBnj6oF92qsMKsEzVwuEyUFbyqkDqnqRoLE0VQFu8P_Q@mail.gmail.com>

Cool trick! Works on Sierra too. I guess it's all part of Apple's drive to
merge iOS and OS X...

On Sat, Jan 27, 2018 at 2:12 PM, Barry Warsaw <barry at python.org> wrote:

> On Jan 27, 2018, at 17:04, Guido van Rossum <guido at python.org> wrote:
>
>
> Hardly a surprising choice! Congrats, ?ukasz. (And never forget that at
> every Mac OS X upgrade I have to install the extended keyboard just so I
> can type that darn ?. :-)
>
>
> Heh, I *just* learned that, at least on macOS High Sierra (and probably
> going back several releases), on a US keyboard you can press and hold the
> ?L? (cap-L) key.  A little popup will appear like the attached image (if
> this doesn?t get stripped by Mailman).  Hit ?1? and the slashy-L will get
> entered: ?.
>
> Cheers
> -Barry
>



-- 
--Guido van Rossum (python.org/~guido)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180127/a5f355f3/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Screen Shot 2018-01-27 at 17.09.58.png
Type: image/png
Size: 19881 bytes
Desc: not available
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180127/a5f355f3/attachment-0001.png>

From mariatta.wijaya at gmail.com  Mon Jan 29 18:32:11 2018
From: mariatta.wijaya at gmail.com (Mariatta Wijaya)
Date: Mon, 29 Jan 2018 15:32:11 -0800
Subject: [python-committers] Adding "Co-authored-by" in commit message.
Message-ID: <CAGbohnaoXyS-a+w5eBH=Gz6auuS-GiTay96W5_RyeuOayn795A@mail.gmail.com>

I learned today that GitHub now supports multiple author info in a commit.

https://help.github.com/articles/creating-a-commit-with-multiple-authors/
and
https://github.com/blog/2496-commit-together-with-co-authors


It can be done by adding:

Co-authored-by: name <email address>

as the footer of the commit message.

I tested this in CPython:
https://github.com/python/cpython/commit/6ea75b174da0cf824e2acc5db6b53798f5f4e4f9

I suggest we start adding this where it makes sense, to give proper credit
to PR authors. What I've seen is that we've only been writing "Original
Patch by <someone else>".

One scenario is when we convert someone else's mercurial patch to GitHub
pull request. Or when someone started a patch, and another person finished
it.

The other scenario is with miss-islington's backport PRs. I will try to
find time this week so that miss-islington or cherry_picker will add the
"Co-authored-by:" automatically.


Mariatta Wijaya
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180129/f7c957ea/attachment.html>

From ericsnowcurrently at gmail.com  Mon Jan 29 20:37:56 2018
From: ericsnowcurrently at gmail.com (Eric Snow)
Date: Mon, 29 Jan 2018 18:37:56 -0700
Subject: [python-committers] [core-workflow] Adding "Co-authored-by" in
 commit message.
In-Reply-To: <CAGbohnaoXyS-a+w5eBH=Gz6auuS-GiTay96W5_RyeuOayn795A@mail.gmail.com>
References: <CAGbohnaoXyS-a+w5eBH=Gz6auuS-GiTay96W5_RyeuOayn795A@mail.gmail.com>
Message-ID: <CALFfu7BBiCOhmZLW=Xu6LBVfzp3ogqvKg6mJt_Sexq4Uj6_nqw@mail.gmail.com>

On Mon, Jan 29, 2018 at 4:32 PM, Mariatta Wijaya
<mariatta.wijaya at gmail.com> wrote:
> I suggest we start adding this where it makes sense, to give proper credit
> to PR authors.

+1

Thanks for noticing this.  I've bumped into this several times and
look forward to (more clearly) giving credit where credit is due.

-eric

From mariatta.wijaya at gmail.com  Mon Jan 29 23:30:39 2018
From: mariatta.wijaya at gmail.com (Mariatta Wijaya)
Date: Mon, 29 Jan 2018 20:30:39 -0800
Subject: [python-committers] [core-workflow] Adding "Co-authored-by" in
 commit message.
In-Reply-To: <CALFfu7BBiCOhmZLW=Xu6LBVfzp3ogqvKg6mJt_Sexq4Uj6_nqw@mail.gmail.com>
References: <CAGbohnaoXyS-a+w5eBH=Gz6auuS-GiTay96W5_RyeuOayn795A@mail.gmail.com>
 <CALFfu7BBiCOhmZLW=Xu6LBVfzp3ogqvKg6mJt_Sexq4Uj6_nqw@mail.gmail.com>
Message-ID: <CAGbohnbFgWjNRK4uF5xG_-ZAbPq4YsMuzA0W8=vvRDPdRohdrA@mail.gmail.com>

No prob :)

I've also updated cherry_picker and miss-islington, so now `Co-authored-by`
is added automatically in backport PRs.

Mariatta Wijaya

On Mon, Jan 29, 2018 at 5:37 PM, Eric Snow <ericsnowcurrently at gmail.com>
wrote:

> On Mon, Jan 29, 2018 at 4:32 PM, Mariatta Wijaya
> <mariatta.wijaya at gmail.com> wrote:
> > I suggest we start adding this where it makes sense, to give proper
> credit
> > to PR authors.
>
> +1
>
> Thanks for noticing this.  I've bumped into this several times and
> look forward to (more clearly) giving credit where credit is due.
>
> -eric
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180129/13fea1ca/attachment.html>

From nad at python.org  Wed Jan 31 03:17:47 2018
From: nad at python.org (Ned Deily)
Date: Wed, 31 Jan 2018 03:17:47 -0500
Subject: [python-committers] 3.7.0b1 status
Message-ID: <6D3EC913-65AE-478E-9201-04E7099D7F20@python.org>

Just a quick update: thanks to all of you who worked long hours to get features completed and merged in for the 3.7 feature code cutoff yesterday.  We release elves have been busy behind the scenes baking goodies.  So far everything looks OK.  But we're taking a little longer than usual: this is, in many ways, the most complicated milestone of the release cycle, since it involves creating a new release branch and other munging, and this is the first time we are doing this since we moved to our new git-based workflow last year and we want to get it right.  We will have everything done and announced in not more than 24 hours from now.  If you wish, feel free to merge new commits into the master branch for release in 3.8, with the understanding that any also destined for 3.7.0 will need to be cherrypicked after the 3.7 branch is available.  Other branches (3.6, 2.7) are unaffected.

Thanks for your patience!

--
  Ned Deily
  nad at python.org -- []


From rdmurray at bitdance.com  Wed Jan 31 16:03:14 2018
From: rdmurray at bitdance.com (R. David Murray)
Date: Wed, 31 Jan 2018 16:03:14 -0500
Subject: [python-committers] 3.7.0b1 status
In-Reply-To: <6D3EC913-65AE-478E-9201-04E7099D7F20@python.org>
References: <6D3EC913-65AE-478E-9201-04E7099D7F20@python.org>
Message-ID: <20180131210314.765911B1000D@webabinitio.net>

On Wed, 31 Jan 2018 03:17:47 -0500, Ned Deily <nad at python.org> wrote:
> in not more than 24 hours from now.  If you wish, feel free to merge
> new commits into the master branch for release in 3.8, with the
> understanding that any also destined for 3.7.0 will need to be
> cherrypicked after the 3.7 branch is available.  Other branches (3.6,
> 2.7) are unaffected.

Hmm.  I merge something and put on the backport 3.6 label and just
merged that...and I have no idea if the 3.7 merge was before or
after the b1 cutoff.  Is there some way to get git to tell us which
commits are possible candidates for cherry picking after the branch
is created so that we don't miss any?  Otherwise I fear we may
end up with some bug fixes that get in to 3.8 and 3.6 but not 3.7.

--David

From nad at python.org  Wed Jan 31 16:14:00 2018
From: nad at python.org (Ned Deily)
Date: Wed, 31 Jan 2018 16:14:00 -0500
Subject: [python-committers] 3.7.0b1 status
In-Reply-To: <20180131210314.765911B1000D@webabinitio.net>
References: <6D3EC913-65AE-478E-9201-04E7099D7F20@python.org>
 <20180131210314.765911B1000D@webabinitio.net>
Message-ID: <EED3C723-DCE9-460B-B9C0-874473982594@python.org>

On Jan 31, 2018, at 16:03, R. David Murray <rdmurray at bitdance.com> wrote:
> 
> Hmm.  I merge something and put on the backport 3.6 label and just
> merged that...and I have no idea if the 3.7 merge was before or
> after the b1 cutoff.  Is there some way to get git to tell us which
> commits are possible candidates for cherry picking after the branch
> is created so that we don't miss any?  Otherwise I fear we may
> end up with some bug fixes that get in to 3.8 and 3.6 but not 3.7.

Hang tight, I'm working on that right at this moment :)  Almost ready!

--
  Ned Deily
  nad at python.org -- []


From nad at python.org  Wed Jan 31 16:44:42 2018
From: nad at python.org (Ned Deily)
Date: Wed, 31 Jan 2018 16:44:42 -0500
Subject: [python-committers] 3.7.0b1 status
In-Reply-To: <EED3C723-DCE9-460B-B9C0-874473982594@python.org>
References: <6D3EC913-65AE-478E-9201-04E7099D7F20@python.org>
 <20180131210314.765911B1000D@webabinitio.net>
 <EED3C723-DCE9-460B-B9C0-874473982594@python.org>
Message-ID: <2D85726B-D24D-475D-ADC7-3F19960A5322@python.org>

On Jan 31, 2018, at 16:14, Ned Deily <nad at python.org> wrote:
> Hang tight, I'm working on that right at this moment :)  Almost ready!

FYI, I'm going to lock the master branch for a brief period starting right now to do the cutover to 3.8.  I'll let you know when it's unlocked.

--
  Ned Deily
  nad at python.org -- []


From mariatta.wijaya at gmail.com  Wed Jan 31 18:40:29 2018
From: mariatta.wijaya at gmail.com (Mariatta Wijaya)
Date: Wed, 31 Jan 2018 15:40:29 -0800
Subject: [python-committers] I created the "needs backport to 3.7" label on
 GitHub
In-Reply-To: <CAGbohnZM8JbQFmUwFh4PbfMz9Zs9tF6qBaa4woBXoeQJH8VsDg@mail.gmail.com>
References: <CAGbohnZM8JbQFmUwFh4PbfMz9Zs9tF6qBaa4woBXoeQJH8VsDg@mail.gmail.com>
Message-ID: <CAGbohnaCFejii1L1Dg48v=9mTddre74jXZPfjiCY4BY-cRQPag@mail.gmail.com>

I noticed that there is a 3.7 branch now.
So you can use this label if you want miss-islington to backport a PR to
3.7.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180131/65cd2028/attachment.html>

From alex.gaynor at gmail.com  Wed Jan 31 18:43:53 2018
From: alex.gaynor at gmail.com (Alex Gaynor)
Date: Wed, 31 Jan 2018 18:43:53 -0500
Subject: [python-committers] I created the "needs backport to 3.7" label
 on GitHub
In-Reply-To: <CAGbohnaCFejii1L1Dg48v=9mTddre74jXZPfjiCY4BY-cRQPag@mail.gmail.com>
References: <CAGbohnZM8JbQFmUwFh4PbfMz9Zs9tF6qBaa4woBXoeQJH8VsDg@mail.gmail.com>
 <CAGbohnaCFejii1L1Dg48v=9mTddre74jXZPfjiCY4BY-cRQPag@mail.gmail.com>
Message-ID: <CAFRnB2UKZkgH-omLOpK6NpuFMdqfdndZXiXjAUeLc4cuysjL4Q@mail.gmail.com>

Is there documentation somewhere on "how to create a release branch" that
we should add "creating a label" step to?

Alex

On Wed, Jan 31, 2018 at 6:40 PM, Mariatta Wijaya <mariatta.wijaya at gmail.com>
wrote:

> I noticed that there is a 3.7 branch now.
> So you can use this label if you want miss-islington to backport a PR to
> 3.7.
>
>
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
>


-- 
"I disapprove of what you say, but I will defend to the death your right to
say it." -- Evelyn Beatrice Hall (summarizing Voltaire)
"The people's good is the highest law." -- Cicero
GPG Key fingerprint: D1B3 ADC0 E023 8CA6
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180131/e59e6c0d/attachment.html>

From mariatta.wijaya at gmail.com  Wed Jan 31 18:58:20 2018
From: mariatta.wijaya at gmail.com (Mariatta Wijaya)
Date: Wed, 31 Jan 2018 15:58:20 -0800
Subject: [python-committers] I created the "needs backport to 3.7" label
 on GitHub
In-Reply-To: <CAFRnB2UKZkgH-omLOpK6NpuFMdqfdndZXiXjAUeLc4cuysjL4Q@mail.gmail.com>
References: <CAGbohnZM8JbQFmUwFh4PbfMz9Zs9tF6qBaa4woBXoeQJH8VsDg@mail.gmail.com>
 <CAGbohnaCFejii1L1Dg48v=9mTddre74jXZPfjiCY4BY-cRQPag@mail.gmail.com>
 <CAFRnB2UKZkgH-omLOpK6NpuFMdqfdndZXiXjAUeLc4cuysjL4Q@mail.gmail.com>
Message-ID: <CAGbohnY3tNrt0W8S2t=-VbyVxqd1wLtLmU9+4sAb3MUVmjnb3A@mail.gmail.com>

I'm not sure. Maybe the release managers know? There is PEP 101..

On Jan 31, 2018 6:43 PM, "Alex Gaynor" <alex.gaynor at gmail.com> wrote:

> Is there documentation somewhere on "how to create a release branch" that
> we should add "creating a label" step to?
>
> Alex
>
> On Wed, Jan 31, 2018 at 6:40 PM, Mariatta Wijaya <
> mariatta.wijaya at gmail.com> wrote:
>
>> I noticed that there is a 3.7 branch now.
>> So you can use this label if you want miss-islington to backport a PR to
>> 3.7.
>>
>>
>> _______________________________________________
>> python-committers mailing list
>> python-committers at python.org
>> https://mail.python.org/mailman/listinfo/python-committers
>> Code of Conduct: https://www.python.org/psf/codeofconduct/
>>
>>
>
>
> --
> "I disapprove of what you say, but I will defend to the death your right
> to say it." -- Evelyn Beatrice Hall (summarizing Voltaire)
> "The people's good is the highest law." -- Cicero
> GPG Key fingerprint: D1B3 ADC0 E023 8CA6
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180131/3402a714/attachment-0001.html>

From steve.dower at python.org  Wed Jan 31 18:59:34 2018
From: steve.dower at python.org (Steve Dower)
Date: Thu, 1 Feb 2018 10:59:34 +1100
Subject: [python-committers] I created the "needs backport to 3.7"
 labelon GitHub
In-Reply-To: <CAFRnB2UKZkgH-omLOpK6NpuFMdqfdndZXiXjAUeLc4cuysjL4Q@mail.gmail.com>
References: <CAGbohnZM8JbQFmUwFh4PbfMz9Zs9tF6qBaa4woBXoeQJH8VsDg@mail.gmail.com>
 <CAGbohnaCFejii1L1Dg48v=9mTddre74jXZPfjiCY4BY-cRQPag@mail.gmail.com>
 <CAFRnB2UKZkgH-omLOpK6NpuFMdqfdndZXiXjAUeLc4cuysjL4Q@mail.gmail.com>
Message-ID: <mailman.101.1517443178.2812.python-committers@python.org>

I?d suggest not porting anything to that branch until Ned gives the okay. Hopefully it?s locked right now anyway.

Top-posted from my Windows phone

From: Alex Gaynor
Sent: Thursday, February 1, 2018 10:44
To: Mariatta Wijaya
Cc: core-workflow; python-committers
Subject: Re: [python-committers] I created the "needs backport to 3.7" labelon GitHub

Is there documentation somewhere on "how to create a release branch" that we should add "creating a label" step to?

Alex

On Wed, Jan 31, 2018 at 6:40 PM, Mariatta Wijaya <mariatta.wijaya at gmail.com> wrote:
I noticed that there is a 3.7 branch now.
So you can use this label if you want miss-islington to backport a PR to 3.7.


_______________________________________________
python-committers mailing list
python-committers at python.org
https://mail.python.org/mailman/listinfo/python-committers
Code of Conduct: https://www.python.org/psf/codeofconduct/




-- 
"I disapprove of what you say, but I will defend to the death your right to say it." -- Evelyn Beatrice Hall (summarizing Voltaire)
"The people's good is the highest law." -- Cicero
GPG Key fingerprint:?D1B3 ADC0 E023 8CA6


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180201/2b26a128/attachment.html>

From barry at python.org  Wed Jan 31 19:03:21 2018
From: barry at python.org (Barry Warsaw)
Date: Wed, 31 Jan 2018 19:03:21 -0500
Subject: [python-committers] I created the "needs backport to 3.7" label
 on GitHub
In-Reply-To: <CAGbohnY3tNrt0W8S2t=-VbyVxqd1wLtLmU9+4sAb3MUVmjnb3A@mail.gmail.com>
References: <CAGbohnZM8JbQFmUwFh4PbfMz9Zs9tF6qBaa4woBXoeQJH8VsDg@mail.gmail.com>
 <CAGbohnaCFejii1L1Dg48v=9mTddre74jXZPfjiCY4BY-cRQPag@mail.gmail.com>
 <CAFRnB2UKZkgH-omLOpK6NpuFMdqfdndZXiXjAUeLc4cuysjL4Q@mail.gmail.com>
 <CAGbohnY3tNrt0W8S2t=-VbyVxqd1wLtLmU9+4sAb3MUVmjnb3A@mail.gmail.com>
Message-ID: <FE855FA7-5E28-4082-981A-C87BD676148D@python.org>

On Jan 31, 2018, at 18:58, Mariatta Wijaya <mariatta.wijaya at gmail.com> wrote:
> 
> I'm not sure. Maybe the release managers know? There is PEP 101..

I?ll bet Ned is either updating PEP 101 as he goes, or is keeping notes to update that PEP once things calm down.  It?s a rare enough event, and this is the first time with git, so I?m sure there was a fair bit to figure out.

$ git worktree add ../3.7 3.7  # ftw!

-Barry

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180131/3a9261d8/attachment.sig>

From mariatta.wijaya at gmail.com  Wed Jan 31 19:03:25 2018
From: mariatta.wijaya at gmail.com (Mariatta Wijaya)
Date: Wed, 31 Jan 2018 16:03:25 -0800
Subject: [python-committers] I created the "needs backport to 3.7"
 labelon GitHub
In-Reply-To: <5a725869.e1a7500a.116d2.3a42SMTPIN_ADDED_MISSING@mx.google.com>
References: <CAGbohnZM8JbQFmUwFh4PbfMz9Zs9tF6qBaa4woBXoeQJH8VsDg@mail.gmail.com>
 <CAGbohnaCFejii1L1Dg48v=9mTddre74jXZPfjiCY4BY-cRQPag@mail.gmail.com>
 <CAFRnB2UKZkgH-omLOpK6NpuFMdqfdndZXiXjAUeLc4cuysjL4Q@mail.gmail.com>
 <5a725869.e1a7500a.116d2.3a42SMTPIN_ADDED_MISSING@mx.google.com>
Message-ID: <CAGbohnZdB5a+OFxBC5wf200dhOnROZk6EGqTE4WYodztQj7ERA@mail.gmail.com>

If it's protected then backport PR can still happen, but then only Ned can
merge it, right?

On Jan 31, 2018 6:59 PM, "Steve Dower" <steve.dower at python.org> wrote:

> I?d suggest not porting anything to that branch until Ned gives the okay.
> Hopefully it?s locked right now anyway.
>
>
>
> Top-posted from my Windows phone
>
>
>
> *From: *Alex Gaynor <alex.gaynor at gmail.com>
> *Sent: *Thursday, February 1, 2018 10:44
> *To: *Mariatta Wijaya <mariatta.wijaya at gmail.com>
> *Cc: *core-workflow <core-workflow at python.org>; python-committers
> <python-committers at python.org>
> *Subject: *Re: [python-committers] I created the "needs backport to 3.7"
> labelon GitHub
>
>
>
> Is there documentation somewhere on "how to create a release branch" that
> we should add "creating a label" step to?
>
>
>
> Alex
>
>
>
> On Wed, Jan 31, 2018 at 6:40 PM, Mariatta Wijaya <
> mariatta.wijaya at gmail.com> wrote:
>
> I noticed that there is a 3.7 branch now.
>
> So you can use this label if you want miss-islington to backport a PR to
> 3.7.
>
>
>
>
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
>
>
>
>
> --
>
> "I disapprove of what you say, but I will defend to the death your right
> to say it." -- Evelyn Beatrice Hall (summarizing Voltaire)
> "The people's good is the highest law." -- Cicero
>
> GPG Key fingerprint: D1B3 ADC0 E023 8CA6
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20180131/b8a1046e/attachment.html>

From nad at python.org  Wed Jan 31 20:04:54 2018
From: nad at python.org (Ned Deily)
Date: Wed, 31 Jan 2018 20:04:54 -0500
Subject: [python-committers] [IMPORTANT] post 3.7.0b1 development now open
Message-ID: <CB6D24FA-A82E-4B7C-B4E7-EF2196794221@python.org>

Here we are: 3.7.0b1 and feature code freeze! Congratulations and
thanks to all of you who've contributed to the huge number of PEPs,
features, bug fixes, and doc changes that have gone into 3.7 since
feature development began back in September 2016, after 3.6.0b1,
3.6's feature freeze. Now that feature development for 3.7 is over,
the challenge is to put the finishing touches on the features and
documentation, squash bugs, and test test test.

In the cpython repo, there is now a 3.7 branch. Starting now, all PRs
destined for 3.7.0 should get cherry-picked from master to the 3.7
branch or just pushed to 3.7 if only applicable there. New features
should continue to be pushed to the master branch for release in 3.8;
no new features are now permitted in 3.7 unless you have contacted me
and we have agreed on an extension (and all granted extensions will
expire as of 3.7.0b2). As before, bug fixes appropriate for 3.6.x
should continue to be cherry-picked to the 3.6 branch. I've updated
the Developer's Guide to reflect the now current workflow. Let me
know if you find any bugs in it. Likewise, please contact me if you
have any questions about the workflow or about whether a change is
appropriate for 3.7 beta.

The cpython repo on Github has been updated. You should now find that
builds on the master branch produce a Python 3.8, rather than 3.7;
you may want to clean your build directory. And there is now a 3.7
branch that you will need to use for 3.7 builds and pushs. There were
several PRs that were merged to master over the last couple of days
since we started 3.7.0b1 release engineering. All but one of those
have been cherry-picked into the new 3.7 branch and you should have
seen messages for them. One was for a 3.8 feature and so was not
backported. At the moment, the new 3.7 buildbots may not be fully
operational but they should be soon. Likewise, the docs.python.org
may take up to 24 hours to reflect all the changes. Note that is the
first time we've done a feature freeze using our new git-based
workflow, so there's likely that there might be a glitch or something
overlooked. Please let us know if you suspect something or have a
question. I'll be around here and or #python-dev.

Also, don't forget to direct 3.8-related questions to ?ukasz.  Welcome
on-board!

To recap:

2018-01-31: 3.7 branch open for 3.7.0; 3.8.0 feature development begins

2018-01-31 to 2018-05-21: 3.7.0 beta phase (no new 3.7 features)
   - push PRs for new features, bugs, regressions, doc fixes to the
        master branch for release in 3.8
   - cherry-pick or push PRs for 3.7.0 (bug/regression/doc fixes) to the
        new 3.7 branch
   - cherry-pick or push select PRs for important bug/regression/doc
        fixes to 3.6 and 2.7 branches as appropriate
   - propose PRs to 3.5 and 3.4 branches for any identified security issues

2018-02-26: 3.7.0 beta 2 (next beta preview)

2018-03-26: 3.7.0 beta 3 (3.7.0 ABI freeze)

2018-04-30: 3.7.0 beta 4 (only critical and urgent fixes after this point)

2018-05-21: 3.7.0 release candidate 1 (3.7.0 code freeze, only any
            emergency fixes afer this point)

2018-06-15: 3.7.0 release

2019-10-20: 3.8.0 release (next planned feature release, see PEP 569)


Thank you all again for your great efforts so far on 3.7!

--Ned

From nad at python.org  Wed Jan 31 20:34:12 2018
From: nad at python.org (Ned Deily)
Date: Wed, 31 Jan 2018 20:34:12 -0500
Subject: [python-committers] [RELEASE] Python 3.7.0b1 is now available for
 testing
Message-ID: <9425596C-A92F-4B10-A8B7-98F4E827E8D0@python.org>

On behalf of the Python development community and the Python 3.7 release
team, I'm happy to announce the availability of Python 3.7.0b1.  b1 is
the first of four planned beta releases of Python 3.7, the next major
release of Python, and marks the end of the feature development phase
for 3.7.  You can find Python 3.7.0b1 here:

https://www.python.org/downloads/release/python-370b1/

Among the new major new features in Python 3.7 are:

* PEP 538, Coercing the legacy C locale to a UTF-8 based locale
* PEP 539, A New C-API for Thread-Local Storage in CPython
* PEP 540, UTF-8 mode
* PEP 552, Deterministic pyc
* PEP 553, Built-in breakpoint()
* PEP 557, Data Classes
* PEP 560, Core support for typing module and generic types
* PEP 562, Module __getattr__ and __dir__
* PEP 563, Postponed Evaluation of Annotations
* PEP 564, Time functions with nanosecond resolution
* PEP 565, Show DeprecationWarning in __main__
* PEP 567, Context Variables

Please see "What?s New In Python 3.7" for more information.
Additional documentation for these features and for other changes
will be provided during the beta phase.

https://docs.python.org/3.7/whatsnew/3.7.html

Beta releases are intended to give you the opportunity to test new
features and bug fixes and to prepare their projects to support the
new feature release. We strongly encourage you to test your projects
with 3.7 during the beta phase and report issues found to
https://bugs.python.org as soon as possible.

While the release is feature complete entering the beta phase, it is
possible that features may be modified or, in rare cases, deleted up
until the start of the release candidate phase (2018-05-21). Our goal
is have no ABI changes after beta 3 and no code changes after rc1.
To achieve that, it will be extremely important to get as much exposure
for 3.7 as possible during the beta phase.

Attention macOS users: with 3.7.0b1, we are providing a choice of
two binary installers.  The new variant provides a 64-bit-only
version for macOS 10.9 and later systems; this variant also now
includes its own built-in version of Tcl/Tk 8.6.  We welcome your
feedback.

Please keep in mind that this is a preview release and its use is
not recommended for production environments.

The next planned release of Python 3.7 will be 3.7.0b2, currently
scheduled for 2018-02-26. More information about the release schedule
can be found here:

https://www.python.org/dev/peps/pep-0537/

--
  Ned Deily
  nad at python.org -- []


