From vstinner at redhat.com  Fri Feb  1 10:47:45 2019
From: vstinner at redhat.com (Victor Stinner)
Date: Fri, 1 Feb 2019 16:47:45 +0100
Subject: [python-committers] Joannah Nanjekye got the bug triage permission
Message-ID: <CA+3bQGEh-xiBzYh4qWLoHkAyg+q2EfHw+0MCejR1w2Qs3N+D4g@mail.gmail.com>

Hi,

I'm mentoring Joannah Nanjekye for 3 months. She made great great
progress in learning Python workflow and so I just gave her the bug
triage permission.

For example, she implemented os.posix_spawnp() and modified subprocess
to use os.posix_spawn() internally.

I sent her instructions how to triage bug and links into the devguide.
I asked her to ask me before closing a bug.

Congrats Joannah ;-)

Victor
-- 
Night gathers, and now my watch begins. It shall not end until my death.

From vstinner at redhat.com  Fri Feb  1 11:04:38 2019
From: vstinner at redhat.com (Victor Stinner)
Date: Fri, 1 Feb 2019 17:04:38 +0100
Subject: [python-committers] Alexey Izbyshev got the bug triage permission
Message-ID: <CA+3bQGH0uZSzt97GSty7LHF6noLsei7LZFC-4LpyJUNLzUst8g@mail.gmail.com>

Hi,

Alexey Izbyshev is working hard on CPython for 1 year and got a lot of
non-trivial commits merged into master:

https://github.com/python/cpython/commits?author=izbyshev

So I just gave him the bug triage permission.

I sent him instructions how to triage bug and links into the devguide.
I asked him to ask me before closing a bug.

Congrats Alexey ;-)

Victor
-- 
Night gathers, and now my watch begins. It shall not end until my death.

From taleinat at gmail.com  Fri Feb  1 13:06:52 2019
From: taleinat at gmail.com (Tal Einat)
Date: Fri, 1 Feb 2019 20:06:52 +0200
Subject: [python-committers] Alexey Izbyshev got the bug triage
 permission
In-Reply-To: <CA+3bQGH0uZSzt97GSty7LHF6noLsei7LZFC-4LpyJUNLzUst8g@mail.gmail.com>
References: <CA+3bQGH0uZSzt97GSty7LHF6noLsei7LZFC-4LpyJUNLzUst8g@mail.gmail.com>
Message-ID: <CALWZvp5sfKWg4AZRE=rtwnU0XK+9V4A0XC+AAeJwppuxjSOWJg@mail.gmail.com>

Congrats Alexey!

I've seen some of Alexey's work over the past year and it has been of high
quality and generally showed good judgement. This is well deserved IMO.

On Fri, Feb 1, 2019, 18:04 Victor Stinner <vstinner at redhat.com wrote:

> Hi,
>
> Alexey Izbyshev is working hard on CPython for 1 year and got a lot of
> non-trivial commits merged into master:
>
> https://github.com/python/cpython/commits?author=izbyshev
>
> So I just gave him the bug triage permission.
>
> I sent him instructions how to triage bug and links into the devguide.
> I asked him to ask me before closing a bug.
>
> Congrats Alexey ;-)
>
> Victor
> --
> Night gathers, and now my watch begins. It shall not end until my death.
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190201/7ecc5ad9/attachment.html>

From antoine at python.org  Sun Feb  3 09:47:27 2019
From: antoine at python.org (Antoine Pitrou)
Date: Sun, 3 Feb 2019 15:47:27 +0100
Subject: [python-committers] Duplicate ("triplicate"?) Github notifications
 on Roundup
Message-ID: <87b95ca9-cc2f-41fc-7c67-5a27e6f4c424@python.org>


Hello,

For some time now, Github notifications on Roundup when a PR is open
arrive three times instead of one.  Is this a known issue?

Regards

Antoine.

From mariatta at python.org  Sun Feb  3 10:05:13 2019
From: mariatta at python.org (Mariatta Wijaya)
Date: Sun, 3 Feb 2019 07:05:13 -0800
Subject: [python-committers] Duplicate ("triplicate"?) Github
 notifications on Roundup
In-Reply-To: <CAGbohnb=7362b06UB+GN9c-pw_mBwQCRQJELcKas=-E3+69ocQ@mail.gmail.com>
References: <87b95ca9-cc2f-41fc-7c67-5a27e6f4c424@python.org>
 <CAGbohnb=7362b06UB+GN9c-pw_mBwQCRQJELcKas=-E3+69ocQ@mail.gmail.com>
Message-ID: <CAGbohnZsL16=Ob=H45VSsOHpCpvOYq+tst1tJBsXx9twumODzQ@mail.gmail.com>

Know issue:
https://github.com/python/bugs.python.org/issues/12#issuecomment-450681871

On Sun, Feb 3, 2019, 6:47 AM Antoine Pitrou <antoine at python.org wrote:

>
> Hello,
>
> For some time now, Github notifications on Roundup when a PR is open
> arrive three times instead of one.  Is this a known issue?
>
> Regards
>
> Antoine.
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190203/93098f5d/attachment.html>

From vstinner at redhat.com  Sun Feb  3 13:43:42 2019
From: vstinner at redhat.com (Victor Stinner)
Date: Sun, 3 Feb 2019 19:43:42 +0100
Subject: [python-committers] 2019 Steering Council Election Voting
In-Reply-To: <CA+3bQGH74CHO8si2nCq2Z1+-2qjah6uyP3OrQO4z+_XK2GiKRg@mail.gmail.com>
References: <etPan.5c45c49a.7ab18dda.47dc@python.org>
 <CA+3bQGH74CHO8si2nCq2Z1+-2qjah6uyP3OrQO4z+_XK2GiKRg@mail.gmail.com>
Message-ID: <CA+3bQGEBguWTgQaqxNeGaJR6Aj90_gdTT6s6bADA8YnSg6JTeA@mail.gmail.com>

Vote ends "tonight" (anywhere on earth):

"The voting period is: January 21, 2019 12:00 UTC through Febuary 4, 2019
12:00 UTC (The end of February 3, 2019 Anywhere on Earth)"

You can still modify your vote.

Victor

Le dimanche 27 janvier 2019, Victor Stinner <vstinner at redhat.com> a ?crit :
> Reminder: "This election is scheduled to end at Feb. 4, 2019, noon (UTC)."
>
> FYI 3 questions have been asked to candidates on the Users category of
> discuss.python.org. Some candidates replied which may help you to
> decide for who to vote.
>
> Antoine Pitrou: "If I were going to submit PEP 574 62 for
> pronouncement (not really an unlikely scenario), what detailed
> reaction or resolution would you propose as a Steering Council
> member?"
> https://discuss.python.org/t/question-for-steering-council-candidates/687
>
> Steve Dower: "What are your thoughts on a Direction Group?" (like C++
> Direction Group)
>
https://discuss.python.org/t/question-for-steering-council-candidates-physical-meetings/770
>
> Antoine Pitrou: "What is your take on project-wide decisions made at
> physical core developer meetings (such as Language Summits or Core
> Developer Sprints). Do you approve of them? Should there be a
> permanent ban on such decision-making?"
>
https://discuss.python.org/t/question-for-council-candidates-direction-group/753
>
> --
>
> See also: "My thoughts on a good composition for the steering council"
>
https://discuss.python.org/t/my-thoughts-on-a-good-composition-for-the-steering-council/755
>
> Victor
>
> Le lun. 21 janv. 2019 ? 14:09, Ernest W. Durbin III
> <ernest at python.org> a ?crit :
>>
>> Ballots have been distributed per PEP 8100 and voting is open.
>>
>> This election is scheduled to end at Feb. 4, 2019, noon (UTC).
>>
>> If you expected to receive a ballot but did not, please contact me at
ernest at python.org.
>> _______________________________________________
>> python-committers mailing list
>> python-committers at python.org
>> https://mail.python.org/mailman/listinfo/python-committers
>> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
>
>
> --
> Night gathers, and now my watch begins. It shall not end until my death.
>

-- 
Night gathers, and now my watch begins. It shall not end until my death.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190203/4597d03f/attachment.html>

From mal at egenix.com  Mon Feb  4 05:27:46 2019
From: mal at egenix.com (M.-A. Lemburg)
Date: Mon, 4 Feb 2019 11:27:46 +0100
Subject: [python-committers] Fwd: EPS: Announcing the Guido van Rossum
 Core Developer Grant
In-Reply-To: <2F4F9258-B127-42E6-B047-7467063E556C@gmail.com>
References: <4b5b919b-2471-db6c-e6ad-e30e59dea896@europython.eu>
 <45e5a1cf-5dfc-d806-e8b7-274f264f6d28@egenix.com>
 <2F4F9258-B127-42E6-B047-7467063E556C@gmail.com>
Message-ID: <5b14db53-b451-31b7-7af8-7cca56b2a248@egenix.com>

Happy to see that you like the idea. Our hope is that more conferences
will pick it up as well.


On 31.01.2019 18:41, Raymond Hettinger wrote:
> 
> 
>> On Jan 31, 2019, at 2:15 AM, M.-A. Lemburg <mal at egenix.com> wrote:
>>
>> To help with growing the team, putting it more into the spotlight and
>> give them a place to meet, demonstrate their work and a stage to
>> invite new developers, we decided to give Python Core Developers free
>> entry to future EuroPython conferences, starting with EuroPython 2019
>> in Basel, Switzerland
> 
> Thank for this.
> 
> The cumulative cost of attending conferences has been high.

-- 
Marc-Andre Lemburg
EuroPython Society Chair
http://www.europython-society.org/
http://www.malemburg.com/

From mal at egenix.com  Mon Feb  4 06:03:17 2019
From: mal at egenix.com (M.-A. Lemburg)
Date: Mon, 4 Feb 2019 12:03:17 +0100
Subject: [python-committers] Learning from PostgreSQL community: How to
 address the review bottleneck
Message-ID: <902511c6-2914-6eca-5bd5-1e98a9463681@egenix.com>

I've attended FOSDEM over the weekend, where Jon Conway (one of the
PostgreSQL committers) gave a talk about, among other things, the
PG community and how it is structured:

https://fosdem.org/2019/schedule/event/postgresql11/
(the community part starts at around 8 min into the video)

What struck me as interesting is that they have seen and addressed
the review bottleneck problem we're having in Python development
years ago.

They have a core team, which pretty much resembles the steering
committee we've just voted on, with 5 members, and a group of
28 committers. Things are much less formalized than in Python
land, but they are making great progress.

Here's their approach to solve the review bottleneck:

https://wiki.postgresql.org/wiki/PostgreSQL_8.4_Development_Plan
(they started this in 2008)

with what they call "commit fests". This is a process where people
submit patches using timed slots, each author is requested to do
at least one review of another patch of similar complexity and
the authors can fix their patches as part of the review process
to get them to a level where a core dev can than take a look.
Other people can sign up as reviewers as well.

That way the initial load of making sure the patch quality is
appropriate is scaled up a lot and their core devs only have to
deal with patches which already have passed reviews by a few
people.

The process is described in more detail in this blog post:

https://blog.2ndquadrant.com/managing-a-postgresql-commitfest/
(with the experience after doing this for 8 years)

To help them with the commit fests, they have a system in place
to manage the patches:

https://commitfest.postgresql.org/

See e.g. https://commitfest.postgresql.org/22/ for the next
upcoming commit fest.

Commit fests are done for one month each, and then leave one
month for things to settle in, get core dev responses. Patches
can be pushed back to the next commit fest in case a core dev
finds them lacking or the author doesn't respond in time.

I also talked to Magnus Hagander, one of the PG core team members,
about their core team.  They have had this since the early 2000s
and interestingly, they are mostly dealing with non-developer
questions. Their approach to decisions such as the PEP process
we have is mostly based on consensus and trust among the committers,
not formalized and thus the core team does not play into this
a lot.

https://www.postgresql.eu/events/pgdayparis2018/schedule/speaker/1-magnus-hagander/

Now, all that said, while there are many similarities between
PostgreSQL and Python in how the communities work, PG does take
a more conservative approach to things - most committers and
core team members have had that status for at least 10 years,
it typically takes several years to gain committer status and
they rarely take on new people.

Still, I think there's a lot we can learn from them and their
experience with solving the review problem.

Thanks,
-- 
Marc-Andre Lemburg
eGenix.com

Professional Python Services directly from the Experts (#1, Feb 04 2019)
>>> Python Projects, Coaching and Consulting ...  http://www.egenix.com/
>>> Python Database Interfaces ...           http://products.egenix.com/
>>> Plone/Zope Database Interfaces ...           http://zope.egenix.com/
________________________________________________________________________

::: We implement business ideas - efficiently in both time and costs :::

   eGenix.com Software, Skills and Services GmbH  Pastor-Loeh-Str.48
    D-40764 Langenfeld, Germany. CEO Dipl.-Math. Marc-Andre Lemburg
           Registered at Amtsgericht Duesseldorf: HRB 46611
               http://www.egenix.com/company/contact/
                      http://www.malemburg.com/


From antoine at python.org  Mon Feb  4 06:19:07 2019
From: antoine at python.org (Antoine Pitrou)
Date: Mon, 4 Feb 2019 12:19:07 +0100
Subject: [python-committers] Learning from PostgreSQL community: How to
 address the review bottleneck
In-Reply-To: <902511c6-2914-6eca-5bd5-1e98a9463681@egenix.com>
References: <902511c6-2914-6eca-5bd5-1e98a9463681@egenix.com>
Message-ID: <8ffc4a0b-67d3-e60a-6ad4-38b3bb89cc6f@python.org>


Hi Marc-Andr?,

I find this feedback very interesting :-)

As PG is a sophisticated piece of high-quality software, if that process
works for them, then it may deserve trying on our side as well.

Regards

Antoine.


Le 04/02/2019 ? 12:03, M.-A. Lemburg a ?crit?:
> I've attended FOSDEM over the weekend, where Jon Conway (one of the
> PostgreSQL committers) gave a talk about, among other things, the
> PG community and how it is structured:
> 
> https://fosdem.org/2019/schedule/event/postgresql11/
> (the community part starts at around 8 min into the video)
> 
> What struck me as interesting is that they have seen and addressed
> the review bottleneck problem we're having in Python development
> years ago.
> 
> They have a core team, which pretty much resembles the steering
> committee we've just voted on, with 5 members, and a group of
> 28 committers. Things are much less formalized than in Python
> land, but they are making great progress.
> 
> Here's their approach to solve the review bottleneck:
> 
> https://wiki.postgresql.org/wiki/PostgreSQL_8.4_Development_Plan
> (they started this in 2008)
> 
> with what they call "commit fests". This is a process where people
> submit patches using timed slots, each author is requested to do
> at least one review of another patch of similar complexity and
> the authors can fix their patches as part of the review process
> to get them to a level where a core dev can than take a look.
> Other people can sign up as reviewers as well.
> 
> That way the initial load of making sure the patch quality is
> appropriate is scaled up a lot and their core devs only have to
> deal with patches which already have passed reviews by a few
> people.
> 
> The process is described in more detail in this blog post:
> 
> https://blog.2ndquadrant.com/managing-a-postgresql-commitfest/
> (with the experience after doing this for 8 years)
> 
> To help them with the commit fests, they have a system in place
> to manage the patches:
> 
> https://commitfest.postgresql.org/
> 
> See e.g. https://commitfest.postgresql.org/22/ for the next
> upcoming commit fest.
> 
> Commit fests are done for one month each, and then leave one
> month for things to settle in, get core dev responses. Patches
> can be pushed back to the next commit fest in case a core dev
> finds them lacking or the author doesn't respond in time.
> 
> I also talked to Magnus Hagander, one of the PG core team members,
> about their core team.  They have had this since the early 2000s
> and interestingly, they are mostly dealing with non-developer
> questions. Their approach to decisions such as the PEP process
> we have is mostly based on consensus and trust among the committers,
> not formalized and thus the core team does not play into this
> a lot.
> 
> https://www.postgresql.eu/events/pgdayparis2018/schedule/speaker/1-magnus-hagander/
> 
> Now, all that said, while there are many similarities between
> PostgreSQL and Python in how the communities work, PG does take
> a more conservative approach to things - most committers and
> core team members have had that status for at least 10 years,
> it typically takes several years to gain committer status and
> they rarely take on new people.
> 
> Still, I think there's a lot we can learn from them and their
> experience with solving the review problem.
> 
> Thanks,
> 

From lukasz at langa.pl  Mon Feb  4 06:32:25 2019
From: lukasz at langa.pl (=?utf-8?Q?=C5=81ukasz_Langa?=)
Date: Mon, 4 Feb 2019 12:32:25 +0100
Subject: [python-committers] [RELEASE] Python 3.8.0a1 is now available for
 testing
Message-ID: <C9EA8FEA-C427-41FD-8566-0201F0AA42EA@langa.pl>

I packaged my first release. *wipes sweat off of face*

Go get it here:
https://www.python.org/downloads/release/python-380a1/

Python 3.8.0a1 is the first of four planned alpha releases of Python 3.8,
the next feature release of Python.  During the alpha phase, Python 3.8
remains under heavy development: additional features will be added
and existing features may be modified or deleted.  Please keep in mind
that this is a preview release and its use is not recommended for
production environments.  The next preview release, 3.8.0a2, is planned
for 2019-02-24.

Apart from building the Mac installers, Ned helped me a lot with the
process, thank you!  Ernest was super quick providing me with all
required access and fixing a Unicode problem I found in Salt,
thank you!

Finally, this release was made on a train to D?sseldorf. There's a PyPy
sprint there. The train is pretty cool, makes this "Wasm! Wasm!" sound.

- ?

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190204/25489a0b/attachment.sig>

From ernest at python.org  Mon Feb  4 07:11:33 2019
From: ernest at python.org (Ernest W. Durbin III)
Date: Mon, 4 Feb 2019 07:11:33 -0500
Subject: [python-committers] 2019 Steering Council Election Results
Message-ID: <etPan.5c582bf5.152d90c4.470@python.org>

Voting closed at 2019-02-04 12:00 UTC as prescribed in [PEP 8100](https://www.python.org/dev/peps/pep-8100/).

Of 96 eligible voters, 69 cast ballots.

The top five vote-getters are:

- Barry Warsaw
- Brett Cannon
- Carol Willing
- Guido van Rossum
- Nick Coghlan

No conflict of interest as defined in PEP 13 were observed.

Eligible voters have received result notification emails from helios, and may return to the system to audit/verify the results.

Thanks to all participants! It was an honor serving as the administrator for the governance votes.

-Ernest W. Durbin III
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190204/c5e79aea/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 518 bytes
Desc: Message signed with OpenPGP using AMPGpg
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190204/c5e79aea/attachment.sig>

From kushaldas at gmail.com  Mon Feb  4 07:34:24 2019
From: kushaldas at gmail.com (Kushal Das)
Date: Mon, 4 Feb 2019 18:04:24 +0530
Subject: [python-committers] 2019 Steering Council Election Results
In-Reply-To: <etPan.5c582bf5.152d90c4.470@python.org>
References: <etPan.5c582bf5.152d90c4.470@python.org>
Message-ID: <CAAzeMbwetUsUYgtOcE_TrC=o2RAZmRyvoY-dEpuxxTg3qi9Tzw@mail.gmail.com>

On Mon, Feb 4, 2019 at 5:43 PM Ernest W. Durbin III <ernest at python.org> wrote:
>
> Voting closed at 2019-02-04 12:00 UTC as prescribed in [PEP 8100](https://www.python.org/dev/peps/pep-8100/).
>
> Of 96 eligible voters, 69 cast ballots.
>
> The top five vote-getters are:
>
> - Barry Warsaw
> - Brett Cannon
> - Carol Willing
> - Guido van Rossum
> - Nick Coghlan
>
Congratulations everyone for the participation and also to the members
of the very first council.


Kushal
-- 
Staff, Freedom of the Press Foundation
CPython Core Developer
Director, Python Software Foundation
https://kushaldas.in

From ronaldoussoren at mac.com  Mon Feb  4 10:41:19 2019
From: ronaldoussoren at mac.com (Ronald Oussoren)
Date: Mon, 4 Feb 2019 16:41:19 +0100
Subject: [python-committers] 2019 Steering Council Election Results
In-Reply-To: <CAAzeMbwetUsUYgtOcE_TrC=o2RAZmRyvoY-dEpuxxTg3qi9Tzw@mail.gmail.com>
References: <etPan.5c582bf5.152d90c4.470@python.org>
 <CAAzeMbwetUsUYgtOcE_TrC=o2RAZmRyvoY-dEpuxxTg3qi9Tzw@mail.gmail.com>
Message-ID: <D2D28653-F5D2-49ED-B1FA-98B3BD2089DC@mac.com>



> On 4 Feb 2019, at 13:34, Kushal Das <kushaldas at gmail.com> wrote:
> 
> On Mon, Feb 4, 2019 at 5:43 PM Ernest W. Durbin III <ernest at python.org> wrote:
>> 
>> Voting closed at 2019-02-04 12:00 UTC as prescribed in [PEP 8100](https://www.python.org/dev/peps/pep-8100/).
>> 
>> Of 96 eligible voters, 69 cast ballots.
>> 
>> The top five vote-getters are:
>> 
>> - Barry Warsaw
>> - Brett Cannon
>> - Carol Willing
>> - Guido van Rossum
>> - Nick Coghlan
>> 
> Congratulations everyone for the participation and also to the members
> of the very first council.

Fully agreed.  

Ronald


From guido at python.org  Mon Feb  4 11:18:37 2019
From: guido at python.org (Guido van Rossum)
Date: Mon, 4 Feb 2019 08:18:37 -0800
Subject: [python-committers] 2019 Steering Council Election Results
In-Reply-To: <etPan.5c582bf5.152d90c4.470@python.org>
References: <etPan.5c582bf5.152d90c4.470@python.org>
Message-ID: <CAP7+vJK+HCQaqYCQhwP+4iMRwL4NTd9JFOvqqHQBHYFPYFUeFA@mail.gmail.com>

As a voter, I can see the full list of how many votes each candidate
received. I wonder if this should be published somewhere? There are some
interesting speculations possible about the spread of the numbers ,and they
give extra data on how the voters seem to think and which (types of)
candidates are likely to do well in future elections.

On Mon, Feb 4, 2019 at 4:13 AM Ernest W. Durbin III <ernest at python.org>
wrote:

> Voting closed at 2019-02-04 12:00 UTC as prescribed in [PEP 8100](
> https://www.python.org/dev/peps/pep-8100/).
>
> Of 96 eligible voters, 69 cast ballots.
>
> The top five vote-getters are:
>
> - Barry Warsaw
> - Brett Cannon
> - Carol Willing
> - Guido van Rossum
> - Nick Coghlan
>
> No conflict of interest as defined in PEP 13 were observed.
>
> Eligible voters have received result notification emails from helios, and
> may return to the system to audit/verify the results.
>
> Thanks to all participants! It was an honor serving as the administrator
> for the governance votes.
>
> -Ernest W. Durbin III
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>


-- 
--Guido van Rossum (python.org/~guido)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190204/9e95a900/attachment-0001.html>

From ernest at python.org  Mon Feb  4 11:20:40 2019
From: ernest at python.org (Ernest W. Durbin III)
Date: Mon, 4 Feb 2019 11:20:40 -0500
Subject: [python-committers] 2019 Steering Council Election Results
In-Reply-To: <CAP7+vJK+HCQaqYCQhwP+4iMRwL4NTd9JFOvqqHQBHYFPYFUeFA@mail.gmail.com>
References: <etPan.5c582bf5.152d90c4.470@python.org>
 <CAP7+vJK+HCQaqYCQhwP+4iMRwL4NTd9JFOvqqHQBHYFPYFUeFA@mail.gmail.com>
Message-ID: <etPan.5c586658.981e8a.470@python.org>

Antoine noted the same lack of transparency at?https://discuss.python.org/t/2019-steering-council-election-results/824/3?u=ewdurbin.

Ultimately I chose to initial publish results ASAP at the minimum granularity necessary given that there wasn?t direction on what level of detail should be published. I agree that transparency is key here, but as it wasn?t specified on in 8016/13/8100 I went with what we have.

I can open a PR to 8100 with detailed results if no objections are heard.

-Ernest W. Durbin III

On February 4, 2019 at 11:18:00 AM, Guido van Rossum (guido at python.org) wrote:

As a voter, I can see the full list of how many votes each candidate received. I wonder if this should be published somewhere? There are some interesting speculations possible about the spread of the numbers ,and they give extra data on how the voters seem to think and which (types of) candidates are likely to do well in future elections.

On Mon, Feb 4, 2019 at 4:13 AM Ernest W. Durbin III <ernest at python.org> wrote:
Voting closed at 2019-02-04 12:00 UTC as prescribed in [PEP 8100](https://www.python.org/dev/peps/pep-8100/).

Of 96 eligible voters, 69 cast ballots.

The top five vote-getters are:

- Barry Warsaw
- Brett Cannon
- Carol Willing
- Guido van Rossum
- Nick Coghlan

No conflict of interest as defined in PEP 13 were observed.

Eligible voters have received result notification emails from helios, and may return to the system to audit/verify the results.

Thanks to all participants! It was an honor serving as the administrator for the governance votes.

-Ernest W. Durbin III
_______________________________________________
python-committers mailing list
python-committers at python.org
https://mail.python.org/mailman/listinfo/python-committers
Code of Conduct: https://www.python.org/psf/codeofconduct/


--
--Guido van Rossum (python.org/~guido)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190204/7bd109cf/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 518 bytes
Desc: Message signed with OpenPGP using AMPGpg
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190204/7bd109cf/attachment.sig>

From p.f.moore at gmail.com  Mon Feb  4 11:26:12 2019
From: p.f.moore at gmail.com (Paul Moore)
Date: Mon, 4 Feb 2019 16:26:12 +0000
Subject: [python-committers] 2019 Steering Council Election Results
In-Reply-To: <etPan.5c586658.981e8a.470@python.org>
References: <etPan.5c582bf5.152d90c4.470@python.org>
 <CAP7+vJK+HCQaqYCQhwP+4iMRwL4NTd9JFOvqqHQBHYFPYFUeFA@mail.gmail.com>
 <etPan.5c586658.981e8a.470@python.org>
Message-ID: <CACac1F-YZQRjJ7SH12kKLjhGPGAqkODfedX+-X+CacS8XKGD0Q@mail.gmail.com>

On Mon, 4 Feb 2019 at 16:20, Ernest W. Durbin III <ernest at python.org> wrote:

> I can open a PR to 8100 with detailed results if no objections are heard.

+1

Paul

From tim.peters at gmail.com  Mon Feb  4 11:28:46 2019
From: tim.peters at gmail.com (Tim Peters)
Date: Mon, 4 Feb 2019 10:28:46 -0600
Subject: [python-committers] 2019 Steering Council Election Results
In-Reply-To: <etPan.5c582bf5.152d90c4.470@python.org>
References: <etPan.5c582bf5.152d90c4.470@python.org>
Message-ID: <CAExdVN=4G105AP0M18k6pRjjYGFj4Ys8L8WuVFJyANfSRS7i_g@mail.gmail.com>

[Ernest W. Durbin III <ernest at python.org>]
> Of 96 eligible voters, 69 cast ballots.

FYI, the total number of votes Helios showed me summed to 340.  At 5
approvals per ballot, I'd expect to see 5 * 69 = 345 for 69 ballots.
Are we missing a ballot?

From donald at stufft.io  Mon Feb  4 11:30:11 2019
From: donald at stufft.io (Donald Stufft)
Date: Mon, 4 Feb 2019 11:30:11 -0500
Subject: [python-committers] 2019 Steering Council Election Results
In-Reply-To: <CAExdVN=4G105AP0M18k6pRjjYGFj4Ys8L8WuVFJyANfSRS7i_g@mail.gmail.com>
References: <etPan.5c582bf5.152d90c4.470@python.org>
 <CAExdVN=4G105AP0M18k6pRjjYGFj4Ys8L8WuVFJyANfSRS7i_g@mail.gmail.com>
Message-ID: <DFECC4DC-C884-45CB-B80D-174853EB5F0F@stufft.io>

Did voting require you to select 5 candidates? Or was it up to 5? I don?t recall, but if it was the latter that could explain it.

> On Feb 4, 2019, at 11:28 AM, Tim Peters <tim.peters at gmail.com> wrote:
> 
> [Ernest W. Durbin III <ernest at python.org>]
>> Of 96 eligible voters, 69 cast ballots.
> 
> FYI, the total number of votes Helios showed me summed to 340.  At 5
> approvals per ballot, I'd expect to see 5 * 69 = 345 for 69 ballots.
> Are we missing a ballot?
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/


From guido at python.org  Mon Feb  4 11:33:29 2019
From: guido at python.org (Guido van Rossum)
Date: Mon, 4 Feb 2019 08:33:29 -0800
Subject: [python-committers] 2019 Steering Council Election Results
In-Reply-To: <etPan.5c586658.981e8a.470@python.org>
References: <etPan.5c582bf5.152d90c4.470@python.org>
 <CAP7+vJK+HCQaqYCQhwP+4iMRwL4NTd9JFOvqqHQBHYFPYFUeFA@mail.gmail.com>
 <etPan.5c586658.981e8a.470@python.org>
Message-ID: <CAP7+vJK0W37ib5dDUWreptNYXgGzR4VWq3ovYJHv5DDzXzKCiw@mail.gmail.com>

On Mon, Feb 4, 2019 at 8:20 AM Ernest W. Durbin III <ernest at python.org>
wrote:

> Antoine noted the same lack of transparency at
> https://discuss.python.org/t/2019-steering-council-election-results/824/3?u=ewdurbin
> .
>
> Ultimately I chose to initial publish results ASAP at the minimum
> granularity necessary given that there wasn?t direction on what level of
> detail should be published. I agree that transparency is key here, but as
> it wasn?t specified on in 8016/13/8100 I went with what we have.
>
> I can open a PR to 8100 with detailed results if no objections are heard.
>

I would wait until you have explicit permission from every candidate. (You
probably will have to reach out to some.) I hereby grant you mine.

-- 
--Guido van Rossum (python.org/~guido)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190204/5719c9d2/attachment-0001.html>

From ernest at python.org  Mon Feb  4 11:34:17 2019
From: ernest at python.org (Ernest W. Durbin III)
Date: Mon, 4 Feb 2019 11:34:17 -0500
Subject: [python-committers] 2019 Steering Council Election Results
In-Reply-To: <DFECC4DC-C884-45CB-B80D-174853EB5F0F@stufft.io>
References: <etPan.5c582bf5.152d90c4.470@python.org>
 <CAExdVN=4G105AP0M18k6pRjjYGFj4Ys8L8WuVFJyANfSRS7i_g@mail.gmail.com>
 <DFECC4DC-C884-45CB-B80D-174853EB5F0F@stufft.io>
Message-ID: <etPan.5c586989.9fca228.470@python.org>

On February 4, 2019 at 11:30:13 AM, Donald Stufft (donald at stufft.io) wrote:
Did voting require you to select 5 candidates? Or was it up to 5? I don?t recall, but if it was the latter that could explain it.?

It did not. Voting was "Up To Five" per PEP 13 and PEP 8100
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190204/8fada33a/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 518 bytes
Desc: Message signed with OpenPGP using AMPGpg
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190204/8fada33a/attachment.sig>

From tim.peters at gmail.com  Mon Feb  4 11:57:38 2019
From: tim.peters at gmail.com (Tim Peters)
Date: Mon, 4 Feb 2019 10:57:38 -0600
Subject: [python-committers] 2019 Steering Council Election Results
In-Reply-To: <CAP7+vJK+HCQaqYCQhwP+4iMRwL4NTd9JFOvqqHQBHYFPYFUeFA@mail.gmail.com>
References: <etPan.5c582bf5.152d90c4.470@python.org>
 <CAP7+vJK+HCQaqYCQhwP+4iMRwL4NTd9JFOvqqHQBHYFPYFUeFA@mail.gmail.com>
Message-ID: <CAExdVN=FfOOah5GHgUb79TVT=z5ZcvTVnHmM_HGGJ7Opeh+vNA@mail.gmail.com>

[Guido]
> There are some interesting speculations possible about the spread of
> the numbers ,and they give extra data on how the voters seem to think
> and which (types of) candidates are likely to do well in future elections.

Ir was already speculated about before the election ;-)  As predicted
by a brief article I linked to on Discourse, limiting the number of
approvals to 5 favored a landslide victory of the best-known
candidates.  Except for Nick, the weakest "winner" got 50% more
approvals than the strongest "loser". So "landslide" for 4.

In pure Approval voting (which we've used for PSF Board elections),
there is no limit, and then you get a clear picture of approval
levels.  The "losers" here should realize their relatively low
approval levels _may_ be an artifact of the voting process.  Like in
"first past the post" plurality elections, with a limit there's
pressure for voters to betray their actual favorite(s) if they _think_
they can't win, to avoid "wasting their vote".  Without a limit,
there's never a reason (regardless of whether a voter is 100% honest
or 100% tactical) not to approve of your true favorites.

In the Discourse discussion, there _seemed_ to be consensus that
limiting to 5 was probably a mistake, but it would require a change to
some PEP to remove the limit, and the issue didn't come up before it
was too late.

Beyond that, pure Approval is just unsuitable _if_ there's some goal
to achieve some level of "diversity", in an extremely broad sense.
While we don't have political parties, we are developing factions,
like "old-timer vs new-comer", "conservative vs aggressive" wrt
language changes, and so on.  Some form of "proportional
representation" voting is needed _if_ we want to cater to that (and,
yes, there are _variations_ of Approval voting that address such
concerns - but they're all more complicated and I doubt Helios
supports them).

From raymond.hettinger at gmail.com  Mon Feb  4 15:02:42 2019
From: raymond.hettinger at gmail.com (Raymond Hettinger)
Date: Mon, 4 Feb 2019 12:02:42 -0800
Subject: [python-committers] 2019 Steering Council Election Results
In-Reply-To: <etPan.5c582bf5.152d90c4.470@python.org>
References: <etPan.5c582bf5.152d90c4.470@python.org>
Message-ID: <9BA2462E-E48A-4853-BA65-53C19E5F8533@gmail.com>


> On Feb 4, 2019, at 4:11 AM, Ernest W. Durbin III <ernest at python.org> wrote:
> 
> The top five vote-getters are:
> 
> - Barry Warsaw
> - Brett Cannon
> - Carol Willing
> - Guido van Rossum
> - Nick Coghlan

Congratulations to the new council members!  I wish you all the best.

Thank you to everyone else on the ticket as well.  A new council is elected after each feature release, so your time may yet come.


Raymond




From vstinner at redhat.com  Mon Feb 11 12:07:56 2019
From: vstinner at redhat.com (Victor Stinner)
Date: Mon, 11 Feb 2019 18:07:56 +0100
Subject: [python-committers] "Vote to promote Cheryl Sabella as a core
 developer" on discuss.python.org
Message-ID: <CA+3bQGGkvmvhp94wnkQTtuD0MqXE8ogwCd90FC6M_o_=v=oMEg@mail.gmail.com>

Hi,

The PEP 13 doesn't specify when the vote to promote a contributor as a
core developer should happen nor how the vote is organized, so I chose
to organize the vote at:

https://discuss.python.org/t/vote-to-promote-cheryl-sabella-as-a-core-developer/862

Victor
-- 
Night gathers, and now my watch begins. It shall not end until my death.

From vstinner at redhat.com  Mon Feb 11 12:48:16 2019
From: vstinner at redhat.com (Victor Stinner)
Date: Mon, 11 Feb 2019 18:48:16 +0100
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
Message-ID: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>

Hi,

tl; dr How can we decide if we should stop using mailing list or if we
should stop using discuss.python.org?


https://discuss.python.org/ is getting more and more categories:
packaging, users, ideas, committers, core workflow, etc. Slowly, more
and more existing mailing lists get their category on
discuss.python.org.

Problem: Nobody decided if a topic should always be started on
discuss.python.org or the "related" mailing list. I just started "Vote
to promote Cheryl Sabella as a core developer" thread on the
Committers category of discuss.python.org. I'm not sure that everybody
"migrated" to discuss.python.org, so sometimes I like to send an email
"hey, by the way, have a look at this thread on discuss.python.org:
(...)" to ensure that everybody will see my message. For a vote to
promote a contributor it's important that everybody is aware that a
vote is open (but everyone is free to decide to vote or to abstain).

There is also a high risk of having a topic discussed twice on mailing
list and discuss.python.org. I will happen on controversal changes
(PEPs), trust me :-)

More generally, I dislike having too many communication channels for
the same thing :-( (I'm not talking about Zulip/IRC vs mail/Discourse,
Zulip/IRC is a different way to discuss, and ways are useful/needed.)

"PEP 8100 -- January 2019 steering council election" says "Of the 96
eligible voters, 69 cast ballots." The Python core developers group of
GitHub has currently 96 members:

   https://github.com/orgs/python/teams/python-core/members

But I only count 72 members on discuss.python.org:

   https://discuss.python.org/groups/committers

I count 27 core devs who didn't vote for PEP 8100 and 24 who are not
on discuss.python.org yet.


I see the following options:

(A) Close the mailing list: make it read-only, but keep archives. Ask
all mailing of the mailing list to move to discuss.python.org.

(B) Close discuss.python.org. Ok, it was nice, but it's time to move
back to mailing list. discuss.python.org becomes read-only.

(C) Do nothing: keep mailing list and discuss.python.org

We can make the same choice for all "categories" / "mailing lists", or
we can have a different choice (ML vs Discourse) per category /
mailing list.

Please, don't start a long serie of "+1" or "-1". My question here is:
how can we take a decision? Should we ask the fresh Steering Committee
to take a definitive decision?

Please don't start a thread about the advantages and disavantages of
mailing lists and Discourse. It has been discussed multiple times.
There is a dedicated section on discuss.python.org!

   https://discuss.python.org/c/site-feedback

IMHO we had enough time to "experiment" Discourse. The 10 governance
PEPs have been mostly discussed there: PEP 8000, 8001, 8010, 8011,
8012, 8013, 8014, 8015, 8016, 8100. We saw many threads with more than
50 messages. Search for threads about voting methods for example :-)
We had enough time to see advantages and drawbacks of Discourse. We
started to see "real" moderation (handle trolls / CoC incidents). I
also saw the nice Discourse feature "start a new thread": move some
messages into a new topic.

Right now, I mostly care about python-committers mailing list vs
Committers category on discuss.python.org. But we will quickly have a
similar question for python-dev mailing list vs <whatever on
discuss.python.org> (I asked to create a new category, it's not
created yet).

It's not easy for me to not give my opinion on the topic :-) But
again, my only question here is: how can we take a decision? Who will
take the decision?

Victor
-- 
Night gathers, and now my watch begins. It shall not end until my death.

From willingc at gmail.com  Mon Feb 11 12:58:46 2019
From: willingc at gmail.com (Carol Willing)
Date: Mon, 11 Feb 2019 12:58:46 -0500
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
Message-ID: <033B09BE-0F2D-4809-8D43-E0EB8C9874EB@gmail.com>



> On Feb 11, 2019, at 12:48 PM, Victor Stinner <vstinner at redhat.com> wrote:
> 
> Should we ask the fresh Steering Committee
> to take a definitive decision?

I think that it makes sense for the Steering Committee to discuss and determine next step or resolution.

Thanks for raising the question Victor.

PS Copying the steering council in case someone has a different view.


From vstinner at redhat.com  Mon Feb 11 13:25:52 2019
From: vstinner at redhat.com (Victor Stinner)
Date: Mon, 11 Feb 2019 19:25:52 +0100
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <033B09BE-0F2D-4809-8D43-E0EB8C9874EB@gmail.com>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <033B09BE-0F2D-4809-8D43-E0EB8C9874EB@gmail.com>
Message-ID: <CA+3bQGEJnVveBK8MthyJ+Xj=JBr2dq0c4HmSrySDPeqJSbjJAA@mail.gmail.com>

Le lun. 11 f?vr. 2019 ? 18:58, Carol Willing <willingc at gmail.com> a ?crit :
> PS Copying the steering council in case someone has a different view.

So you chose a mailing list and not Discourse? Interesting ;-)

More seriously, what is steering-council at python.org? A mailing list
with 5 subscribers: the members of the steering committee?

Victor
-- 
Night gathers, and now my watch begins. It shall not end until my death.

From willingc at gmail.com  Mon Feb 11 13:54:23 2019
From: willingc at gmail.com (Carol Willing)
Date: Mon, 11 Feb 2019 13:54:23 -0500
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <CA+3bQGEJnVveBK8MthyJ+Xj=JBr2dq0c4HmSrySDPeqJSbjJAA@mail.gmail.com>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <033B09BE-0F2D-4809-8D43-E0EB8C9874EB@gmail.com>
 <CA+3bQGEJnVveBK8MthyJ+Xj=JBr2dq0c4HmSrySDPeqJSbjJAA@mail.gmail.com>
Message-ID: <CAM3VvhzOqdJbx3+QvTn1-2eFRmDT9BwHah61HwmTQBDHx4mOvQ@mail.gmail.com>

Yes. steering-council at python.org is the steering council members.

On Mon, Feb 11, 2019, 1:26 PM Victor Stinner <vstinner at redhat.com wrote:

> Le lun. 11 f?vr. 2019 ? 18:58, Carol Willing <willingc at gmail.com> a ?crit
> :
> > PS Copying the steering council in case someone has a different view.
>
> So you chose a mailing list and not Discourse? Interesting ;-)
>
> More seriously, what is steering-council at python.org? A mailing list
> with 5 subscribers: the members of the steering committee?
>
> Victor
> --
> Night gathers, and now my watch begins. It shall not end until my death.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190211/a23679f8/attachment.html>

From barry at python.org  Mon Feb 11 14:00:48 2019
From: barry at python.org (Barry Warsaw)
Date: Mon, 11 Feb 2019 11:00:48 -0800
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
Message-ID: <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>

On Feb 11, 2019, at 09:48, Victor Stinner <vstinner at redhat.com> wrote:
> 
> tl; dr How can we decide if we should stop using mailing list or if we
> should stop using discuss.python.org?

Point of order: I think we need a PEP for this decision.  Such a PEP would organize and consolidate the arguments both pro and con of the three choices.  It should also cover whether the current Discourse experiment translates to larger mailing lists like python-dev, -ideas, and -list (for which I personally have uncertainty about).

Once that PEP is written, the SC is the proper forum for deciding the next steps, IMHO.

-Barry


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190211/da18ce4b/attachment-0001.sig>

From tjreedy at udel.edu  Mon Feb 11 14:54:34 2019
From: tjreedy at udel.edu (Terry Reedy)
Date: Mon, 11 Feb 2019 14:54:34 -0500
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
Message-ID: <d533531b-ea73-9d61-61c1-18dae6b2f3be@udel.edu>

On 2/11/2019 12:48 PM, Victor Stinner wrote:
> Hi,
> 
> tl; dr How can we decide if we should stop using mailing list or if we
> should stop using discuss.python.org?

If 'mailing list' == 'all lists', neither.  It should be a list-by-list 
decision.

If 'mailing list == 'python-committers', neither, at least at present. 
I think discussing and voting on a proposed committer works better on 
discuss -- note least because you could edit.  But because you *pushed* 
a notice of the discuss committer vote topic on this list, there have 
been 15 votes in 5 hours, which I think is good.  Otherwise, we would 
depend on people happening to drop by and notice the vote.

If 'mailing list' == 'idle-dev', neither for a different reason, unless 
discuss has changed.  When I asked, 3-4 months ago, whether I could be 
an admin for an 'IDLE' category, the answer was no.  'There can only be 
overall admins and a very limited number of those.'

> Problem: Nobody decided if a topic should always be started on
> discuss.python.org or the "related" mailing list. I just started "Vote
> to promote Cheryl Sabella as a core developer" thread on the
> Committers category of discuss.python.org. I'm not sure that everybody
> "migrated" to discuss.python.org, so sometimes I like to send an email
> "hey, by the way, have a look at this thread on discuss.python.org:
> (...)" to ensure that everybody will see my message. For a vote to
> promote a contributor it's important that everybody is aware that a
> vote is open (but everyone is free to decide to vote or to abstain).

Right, and it worked.

> There is also a high risk of having a topic discussed twice on mailing
> list and discuss.python.org. I will happen on controversal changes
> (PEPs), trust me :-)

I am not convinced.  The steering council discussion pretty much stayed 
on discuss.  And I like the fact that when I was ready to vote, I could 
read 100-200 posts on 20+ topics in 2 different categores, without 
having to clutter my inbox with 100-200 unsorted emails or having to 
manually create multiple temporary boxes to sort them into.

So far, all replies to 'Vote to promote ...' were made on discuss, not 
here, by clicking the link you gave.

From brett at python.org  Mon Feb 11 16:17:55 2019
From: brett at python.org (Brett Cannon)
Date: Mon, 11 Feb 2019 13:17:55 -0800
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <CA+3bQGEJnVveBK8MthyJ+Xj=JBr2dq0c4HmSrySDPeqJSbjJAA@mail.gmail.com>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <033B09BE-0F2D-4809-8D43-E0EB8C9874EB@gmail.com>
 <CA+3bQGEJnVveBK8MthyJ+Xj=JBr2dq0c4HmSrySDPeqJSbjJAA@mail.gmail.com>
Message-ID: <CAP1=2W6bEGK=UFBa7o8U3K=DQdSK8p97D1ufH-zZ1U6++67_EQ@mail.gmail.com>

On Mon, Feb 11, 2019 at 10:26 AM Victor Stinner <vstinner at redhat.com> wrote:

> Le lun. 11 f?vr. 2019 ? 18:58, Carol Willing <willingc at gmail.com> a ?crit
> :
> > PS Copying the steering council in case someone has a different view.
>
> So you chose a mailing list and not Discourse? Interesting ;-)
>

Don't read into that too much. With discuss.python.org not settled yet it
made a mailing list non-controversial for setting up on day 1.

-Brett


>
> More seriously, what is steering-council at python.org? A mailing list
> with 5 subscribers: the members of the steering committee?
>
> Victor
> --
> Night gathers, and now my watch begins. It shall not end until my death.
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190211/fa0b28b3/attachment.html>

From ncoghlan at gmail.com  Tue Feb 12 07:38:32 2019
From: ncoghlan at gmail.com (Nick Coghlan)
Date: Tue, 12 Feb 2019 22:38:32 +1000
Subject: [python-committers] [Steering-council] Re: Can we choose
 between mailing list and discuss.python.org?
In-Reply-To: <CAP1=2W6bEGK=UFBa7o8U3K=DQdSK8p97D1ufH-zZ1U6++67_EQ@mail.gmail.com>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <033B09BE-0F2D-4809-8D43-E0EB8C9874EB@gmail.com>
 <CA+3bQGEJnVveBK8MthyJ+Xj=JBr2dq0c4HmSrySDPeqJSbjJAA@mail.gmail.com>
 <CAP1=2W6bEGK=UFBa7o8U3K=DQdSK8p97D1ufH-zZ1U6++67_EQ@mail.gmail.com>
Message-ID: <CADiSq7dxR93VwE3gLbY25fPw5RX5SACPd5mWrqGNKW7DgHOMYQ@mail.gmail.com>

On Tue., 12 Feb. 2019, 7:18 am Brett Cannon <brett at python.org wrote:

>
>
> On Mon, Feb 11, 2019 at 10:26 AM Victor Stinner <vstinner at redhat.com>
> wrote:
>
>> Le lun. 11 f?vr. 2019 ? 18:58, Carol Willing <willingc at gmail.com> a
>> ?crit :
>> > PS Copying the steering council in case someone has a different view.
>>
>> So you chose a mailing list and not Discourse? Interesting ;-)
>>
>
> Don't read into that too much. With discuss.python.org not settled yet it
> made a mailing list non-controversial for setting up on day 1.
>

It also solves "How to contact the Steering Council?" problem, similar to
the way that python-committers makes it easier to contact all the core
developers in a way we're likely to see.

On Victor's original question, the Discourse experiment has been successful
enough that I don't see a problem with the committers mailing list going
essentially "announce only". I agree with Barry that going further than
that would require a PEP, but Discourse is bad enough for announcements
that I don't see much reason to do that.

Cheers,
Nick.



> -Brett
>
>
>>
>> More seriously, what is steering-council at python.org? A mailing list
>> with 5 subscribers: the members of the steering committee?
>>
>> Victor
>> --
>> Night gathers, and now my watch begins. It shall not end until my death.
>> _______________________________________________
>> python-committers mailing list
>> python-committers at python.org
>> https://mail.python.org/mailman/listinfo/python-committers
>> Code of Conduct: https://www.python.org/psf/codeofconduct/
>>
> _______________________________________________
> Steering-council mailing list -- steering-council at python.org
> To unsubscribe send an email to steering-council-leave at python.org
> https://mail.python.org/mailman3/lists/steering-council.python.org/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190212/9282fe7c/attachment.html>

From p.f.moore at gmail.com  Tue Feb 12 08:49:50 2019
From: p.f.moore at gmail.com (Paul Moore)
Date: Tue, 12 Feb 2019 13:49:50 +0000
Subject: [python-committers] [Steering-council] Re: Can we choose
 between mailing list and discuss.python.org?
In-Reply-To: <CADiSq7dxR93VwE3gLbY25fPw5RX5SACPd5mWrqGNKW7DgHOMYQ@mail.gmail.com>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <033B09BE-0F2D-4809-8D43-E0EB8C9874EB@gmail.com>
 <CA+3bQGEJnVveBK8MthyJ+Xj=JBr2dq0c4HmSrySDPeqJSbjJAA@mail.gmail.com>
 <CAP1=2W6bEGK=UFBa7o8U3K=DQdSK8p97D1ufH-zZ1U6++67_EQ@mail.gmail.com>
 <CADiSq7dxR93VwE3gLbY25fPw5RX5SACPd5mWrqGNKW7DgHOMYQ@mail.gmail.com>
Message-ID: <CACac1F-cHYi6AkTSckos_0xJ1VyQoEMYfJnA+1n2YSirt_8HkQ@mail.gmail.com>

On Tue, 12 Feb 2019 at 12:38, Nick Coghlan <ncoghlan at gmail.com> wrote:
>
> On Victor's original question, the Discourse experiment has been successful enough that I don't see a problem with the committers mailing list going essentially "announce only". I agree with Barry that going further than that would require a PEP, but Discourse is bad enough for announcements that I don't see much reason to do that.

My feeling is that the pace of discussions is slightly different than
on the list. See Terry's comment "Otherwise, we would depend on people
happening to drop by and notice the vote" - this is another aspect of
the "bad for announcements" aspect of Discourse, things can often sit
unnoticed for a while due to the fact that Discourse is less of "push"
medium and more of a "pull" one (notifications notwithstanding).

I think people still need a little time to get used to that change of
pace, so discussions don't get assumed to be concluded too soon. But
otherwise, yes, for python-committers I think it's worked out well. I
do *not* think we know yet whether that will be the same for other
groups, and I am worried that monitoring things on a per-category
basis may be both necessary and uncomfortably difficult once there's
more traffic.

Paul

From g.rodola at gmail.com  Tue Feb 12 09:07:12 2019
From: g.rodola at gmail.com (Giampaolo Rodola')
Date: Tue, 12 Feb 2019 15:07:12 +0100
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
Message-ID: <CAFYqXL-yxU5UsUMnYGfbL_BEbD8XXt324HC_1MyEkfkbFmM3hQ@mail.gmail.com>

On Mon, Feb 11, 2019 at 6:48 PM Victor Stinner <vstinner at redhat.com> wrote:

> Hi,
>
> tl; dr How can we decide if we should stop using mailing list or if we
> should stop using discuss.python.org?
>
>
> https://discuss.python.org/ is getting more and more categories:
> packaging, users, ideas, committers, core workflow, etc. Slowly, more
> and more existing mailing lists get their category on
> discuss.python.org.
>
> Problem: Nobody decided if a topic should always be started on
> discuss.python.org or the "related" mailing list. I just started "Vote
> to promote Cheryl Sabella as a core developer" thread on the
> Committers category of discuss.python.org. I'm not sure that everybody
> "migrated" to discuss.python.org, so sometimes I like to send an email
> "hey, by the way, have a look at this thread on discuss.python.org:
> (...)" to ensure that everybody will see my message. For a vote to
> promote a contributor it's important that everybody is aware that a
> vote is open (but everyone is free to decide to vote or to abstain).
>
> There is also a high risk of having a topic discussed twice on mailing
> list and discuss.python.org. I will happen on controversal changes
> (PEPs), trust me :-)
>
> More generally, I dislike having too many communication channels for
> the same thing :-( (I'm not talking about Zulip/IRC vs mail/Discourse,
> Zulip/IRC is a different way to discuss, and ways are useful/needed.)
>
> "PEP 8100 -- January 2019 steering council election" says "Of the 96
> eligible voters, 69 cast ballots." The Python core developers group of
> GitHub has currently 96 members:
>
>    https://github.com/orgs/python/teams/python-core/members
>
> But I only count 72 members on discuss.python.org:
>
>    https://discuss.python.org/groups/committers
>
> I count 27 core devs who didn't vote for PEP 8100 and 24 who are not
> on discuss.python.org yet.
>
>
> I see the following options:
>
> (A) Close the mailing list: make it read-only, but keep archives. Ask
> all mailing of the mailing list to move to discuss.python.org.
>
> (B) Close discuss.python.org. Ok, it was nice, but it's time to move
> back to mailing list. discuss.python.org becomes read-only.
>
> (C) Do nothing: keep mailing list and discuss.python.org
>
> We can make the same choice for all "categories" / "mailing lists", or
> we can have a different choice (ML vs Discourse) per category /
> mailing list.
>
> Please, don't start a long serie of "+1" or "-1". My question here is:
> how can we take a decision? Should we ask the fresh Steering Committee
> to take a definitive decision?
>
> Please don't start a thread about the advantages and disavantages of
> mailing lists and Discourse. It has been discussed multiple times.
> There is a dedicated section on discuss.python.org!
>
>    https://discuss.python.org/c/site-feedback
>
> IMHO we had enough time to "experiment" Discourse. The 10 governance
> PEPs have been mostly discussed there: PEP 8000, 8001, 8010, 8011,
> 8012, 8013, 8014, 8015, 8016, 8100. We saw many threads with more than
> 50 messages. Search for threads about voting methods for example :-)
> We had enough time to see advantages and drawbacks of Discourse. We
> started to see "real" moderation (handle trolls / CoC incidents). I
> also saw the nice Discourse feature "start a new thread": move some
> messages into a new topic.
>
> Right now, I mostly care about python-committers mailing list vs
> Committers category on discuss.python.org. But we will quickly have a
> similar question for python-dev mailing list vs <whatever on
> discuss.python.org> (I asked to create a new category, it's not
> created yet).
>
> It's not easy for me to not give my opinion on the topic :-) But
> again, my only question here is: how can we take a decision? Who will
> take the decision?
>

IMO since the people who are gonna use these communication channels are
mostly gonna be core developers (or is Users category also included in the
migration plan?) I think the council should take into account how core-devs
feel about this first. Opinions may have changed over the course of the
last 3 months, but there was a poll back in November showing how many of us
were not happy to abandon the mailing lists:
https://discuss.python.org/t/how-do-you-find-discourse-so-far/429
...and that does not include the 24 core devs who never joined discuss. So
at the very least I would appreciate having a new poll to understand
whether/how things changed in the meantime. FWIW my main concern about
discuss remains the long term archival topic described here:
https://discuss.python.org/t/discourse-archive-and-backup/637

-- 
Giampaolo - http://grodola.blogspot.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190212/e127a9a9/attachment.html>

From vstinner at redhat.com  Tue Feb 12 09:53:21 2019
From: vstinner at redhat.com (Victor Stinner)
Date: Tue, 12 Feb 2019 15:53:21 +0100
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <CAFYqXL-yxU5UsUMnYGfbL_BEbD8XXt324HC_1MyEkfkbFmM3hQ@mail.gmail.com>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <CAFYqXL-yxU5UsUMnYGfbL_BEbD8XXt324HC_1MyEkfkbFmM3hQ@mail.gmail.com>
Message-ID: <CA+3bQGF9zrjBo5BsooYUTcZqH81W1aY6YgjKsYdb3M=BdHrzVw@mail.gmail.com>

Le mar. 12 f?vr. 2019 ? 15:07, Giampaolo Rodola' <g.rodola at gmail.com> a ?crit :
> IMO since the people who are gonna use these communication channels are mostly gonna be core developers (or is Users category also included in the migration plan?) I think the council should take into account how core-devs feel about this first. Opinions may have changed over the course of the last 3 months, but there was a poll back in November showing how many of us were not happy to abandon the mailing lists:
> https://discuss.python.org/t/how-do-you-find-discourse-so-far/429
> ...and that does not include the 24 core devs who never joined discuss. So at the very least I would appreciate having a new poll to understand whether/how things changed in the meantime. FWIW my main concern about discuss remains the long term archival topic described here:
> https://discuss.python.org/t/discourse-archive-and-backup/637

I like Barry's idea of a PEP since the points that you listed here
have already been discussed multiple times. We need a document (a PEP)
which summarize these discussions and maybe list things that you
should fixed between we can abandon a mailing list for
python-committers (for example).

I'm not volunteer to write such PEP. Maybe early supporters of
Discourse like Lukasz, Pablo and Yury are more interested to write
such PEP? Anyone else?

Note: I changed my mind on Discourse since discuss.python.org has been
created :-) It took me time to be used to it. First, I was opposed
since I'm always opposed to changes by default :-)

Victor
-- 
Night gathers, and now my watch begins. It shall not end until my death.

From willingc at gmail.com  Tue Feb 12 14:02:01 2019
From: willingc at gmail.com (Carol Willing)
Date: Tue, 12 Feb 2019 14:02:01 -0500
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <CA+3bQGF9zrjBo5BsooYUTcZqH81W1aY6YgjKsYdb3M=BdHrzVw@mail.gmail.com>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <CAFYqXL-yxU5UsUMnYGfbL_BEbD8XXt324HC_1MyEkfkbFmM3hQ@mail.gmail.com>
 <CA+3bQGF9zrjBo5BsooYUTcZqH81W1aY6YgjKsYdb3M=BdHrzVw@mail.gmail.com>
Message-ID: <CAM3Vvhxz9nwxvFY=JEKamR+z_q+ARr5zDUxmVST0fjzx0OurLw@mail.gmail.com>

Hi folks, I had mentioned to Barry yesterday to author or co-author a PEP
re: communication channels. If anyone would like to co-author, please let
me know.

On Tue, Feb 12, 2019, 9:53 AM Victor Stinner <vstinner at redhat.com wrote:

> Le mar. 12 f?vr. 2019 ? 15:07, Giampaolo Rodola' <g.rodola at gmail.com> a
> ?crit :
> > IMO since the people who are gonna use these communication channels are
> mostly gonna be core developers (or is Users category also included in the
> migration plan?) I think the council should take into account how core-devs
> feel about this first. Opinions may have changed over the course of the
> last 3 months, but there was a poll back in November showing how many of us
> were not happy to abandon the mailing lists:
> > https://discuss.python.org/t/how-do-you-find-discourse-so-far/429
> > ...and that does not include the 24 core devs who never joined discuss.
> So at the very least I would appreciate having a new poll to understand
> whether/how things changed in the meantime. FWIW my main concern about
> discuss remains the long term archival topic described here:
> > https://discuss.python.org/t/discourse-archive-and-backup/637
>
> I like Barry's idea of a PEP since the points that you listed here
> have already been discussed multiple times. We need a document (a PEP)
> which summarize these discussions and maybe list things that you
> should fixed between we can abandon a mailing list for
> python-committers (for example).
>
> I'm not volunteer to write such PEP. Maybe early supporters of
> Discourse like Lukasz, Pablo and Yury are more interested to write
> such PEP? Anyone else?
>
> Note: I changed my mind on Discourse since discuss.python.org has been
> created :-) It took me time to be used to it. First, I was opposed
> since I'm always opposed to changes by default :-)
>
> Victor
> --
> Night gathers, and now my watch begins. It shall not end until my death.
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190212/0a253374/attachment.html>

From vstinner at redhat.com  Tue Feb 12 15:44:24 2019
From: vstinner at redhat.com (Victor Stinner)
Date: Tue, 12 Feb 2019 21:44:24 +0100
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <CAM3Vvhxz9nwxvFY=JEKamR+z_q+ARr5zDUxmVST0fjzx0OurLw@mail.gmail.com>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <CAFYqXL-yxU5UsUMnYGfbL_BEbD8XXt324HC_1MyEkfkbFmM3hQ@mail.gmail.com>
 <CA+3bQGF9zrjBo5BsooYUTcZqH81W1aY6YgjKsYdb3M=BdHrzVw@mail.gmail.com>
 <CAM3Vvhxz9nwxvFY=JEKamR+z_q+ARr5zDUxmVST0fjzx0OurLw@mail.gmail.com>
Message-ID: <CA+3bQGGZ10hqbt2hE=+cR=yhd6BhZf1yd9i_Kx8E3f2Nc8We9A@mail.gmail.com>

Since there are more and more communication channels, I wrote
https://pythondev.readthedocs.io/communication.html to list all of
them :-)

Sometimes, I completely forget Zulip :-)

Victor

Le mar. 12 f?vr. 2019 ? 20:02, Carol Willing <willingc at gmail.com> a ?crit :
>
> Hi folks, I had mentioned to Barry yesterday to author or co-author a PEP re: communication channels. If anyone would like to co-author, please let me know.
>
> On Tue, Feb 12, 2019, 9:53 AM Victor Stinner <vstinner at redhat.com wrote:
>>
>> Le mar. 12 f?vr. 2019 ? 15:07, Giampaolo Rodola' <g.rodola at gmail.com> a ?crit :
>> > IMO since the people who are gonna use these communication channels are mostly gonna be core developers (or is Users category also included in the migration plan?) I think the council should take into account how core-devs feel about this first. Opinions may have changed over the course of the last 3 months, but there was a poll back in November showing how many of us were not happy to abandon the mailing lists:
>> > https://discuss.python.org/t/how-do-you-find-discourse-so-far/429
>> > ...and that does not include the 24 core devs who never joined discuss. So at the very least I would appreciate having a new poll to understand whether/how things changed in the meantime. FWIW my main concern about discuss remains the long term archival topic described here:
>> > https://discuss.python.org/t/discourse-archive-and-backup/637
>>
>> I like Barry's idea of a PEP since the points that you listed here
>> have already been discussed multiple times. We need a document (a PEP)
>> which summarize these discussions and maybe list things that you
>> should fixed between we can abandon a mailing list for
>> python-committers (for example).
>>
>> I'm not volunteer to write such PEP. Maybe early supporters of
>> Discourse like Lukasz, Pablo and Yury are more interested to write
>> such PEP? Anyone else?
>>
>> Note: I changed my mind on Discourse since discuss.python.org has been
>> created :-) It took me time to be used to it. First, I was opposed
>> since I'm always opposed to changes by default :-)
>>
>> Victor
>> --
>> Night gathers, and now my watch begins. It shall not end until my death.
>> _______________________________________________
>> python-committers mailing list
>> python-committers at python.org
>> https://mail.python.org/mailman/listinfo/python-committers
>> Code of Conduct: https://www.python.org/psf/codeofconduct/



-- 
Night gathers, and now my watch begins. It shall not end until my death.

From antoine at python.org  Tue Feb 12 16:59:52 2019
From: antoine at python.org (Antoine Pitrou)
Date: Tue, 12 Feb 2019 22:59:52 +0100
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
Message-ID: <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>


Le 11/02/2019 ? 20:00, Barry Warsaw a ?crit?:
> On Feb 11, 2019, at 09:48, Victor Stinner <vstinner at redhat.com> wrote:
>>
>> tl; dr How can we decide if we should stop using mailing list or if we
>> should stop using discuss.python.org?
> 
> Point of order: I think we need a PEP for this decision.  Such a PEP would organize and consolidate the arguments both pro and con of the three choices.  It should also cover whether the current Discourse experiment translates to larger mailing lists like python-dev, -ideas, and -list (for which I personally have uncertainty about).

Same uncertainty here.  I don't think Discourse works well for long threads.

Here is a 161-message Discourse thread (at the time of this writing):
https://discuss.python.org/t/pep-517-backend-bootstrapping/789

I know I can browse easily through a 161-message mailing-list or
newsgroup thread using a traditional threaded view, read what I want,
come back later to read the rest, etc.  But Discourse's linear
presentation pretty much kills that ability.  It doesn't even allow
*seeing* the structure of the discussion.

Regards

Antoine.

From steve at pearwood.info  Tue Feb 12 20:21:53 2019
From: steve at pearwood.info (Steven D'Aprano)
Date: Wed, 13 Feb 2019 12:21:53 +1100
Subject: [python-committers] [Steering-council] Re: Can we choose
 between mailing list and discuss.python.org?
In-Reply-To: <CADiSq7dxR93VwE3gLbY25fPw5RX5SACPd5mWrqGNKW7DgHOMYQ@mail.gmail.com>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <033B09BE-0F2D-4809-8D43-E0EB8C9874EB@gmail.com>
 <CA+3bQGEJnVveBK8MthyJ+Xj=JBr2dq0c4HmSrySDPeqJSbjJAA@mail.gmail.com>
 <CAP1=2W6bEGK=UFBa7o8U3K=DQdSK8p97D1ufH-zZ1U6++67_EQ@mail.gmail.com>
 <CADiSq7dxR93VwE3gLbY25fPw5RX5SACPd5mWrqGNKW7DgHOMYQ@mail.gmail.com>
Message-ID: <20190213012153.GU1834@ando.pearwood.info>

On Tue, Feb 12, 2019 at 10:38:32PM +1000, Nick Coghlan wrote:
[...]
> On Victor's original question, the Discourse experiment has been successful
> enough that I don't see a problem with the committers mailing list going
> essentially "announce only". I agree with Barry that going further than
> that would require a PEP, but Discourse is bad enough for announcements
> that I don't see much reason to do that.

I know that Discource users have a "mailing list mode". Wouldn't that 
allow us to solve the problem of splitting discussions by setting up a 
Discourse to Mailman bridge similar to the way python-list mailing list 
is mirrored to comp.lang.python?

- Set up a user on Discourse in email mode, with address set to 
  python-committers; hence comments on Discourse will be sent here.

- Set up a user in mailman that sends to Discourse; responses made
  here will be sent to that user, which in turn will be sent to 
  Discourse.

Some cleverness will be needed to prevent loops of course. I think 
mailman supports a mode of "Don't send me copies of my own posts", 
which may be sufficient.

But at worst we ought to be able to easily mirror the discourse 
discussions here as a read-only archive.

If we're going to do anything clever like this, we ought to get some 
experience with it on a low-volume mailing list like this before 
somebody proposes it for Python-Ideas or Python-List.


-- 
Steven

From barry at python.org  Tue Feb 12 20:36:33 2019
From: barry at python.org (Barry Warsaw)
Date: Tue, 12 Feb 2019 17:36:33 -0800
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
 <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
Message-ID: <44395311-CC7A-47F5-8636-7A9960F6D810@python.org>

On Feb 12, 2019, at 13:59, Antoine Pitrou <antoine at python.org> wrote:

> I know I can browse easily through a 161-message mailing-list or
> newsgroup thread using a traditional threaded view, read what I want,
> come back later to read the rest, etc.  But Discourse's linear
> presentation pretty much kills that ability.  It doesn't even allow
> *seeing* the structure of the discussion.

That?s pretty much my same, biggest gripe about long GitHub issues and PRs. ;)

-Barry

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190212/2a13f0c7/attachment.sig>

From nad at python.org  Tue Feb 12 21:01:21 2019
From: nad at python.org (Ned Deily)
Date: Tue, 12 Feb 2019 21:01:21 -0500
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <44395311-CC7A-47F5-8636-7A9960F6D810@python.org>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
 <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
 <44395311-CC7A-47F5-8636-7A9960F6D810@python.org>
Message-ID: <A2277D8D-10DC-4F3B-9D25-85EC9BA37EDC@python.org>

On Feb 12, 2019, at 20:36, Barry Warsaw <barry at python.org> wrote:
>> On Feb 12, 2019, at 13:59, Antoine Pitrou <antoine at python.org> wrote:
>> I know I can browse easily through a 161-message mailing-list or
>> newsgroup thread using a traditional threaded view, read what I want,
>> come back later to read the rest, etc.  But Discourse's linear
>> presentation pretty much kills that ability.  It doesn't even allow
>> *seeing* the structure of the discussion.
> That?s pretty much my same, biggest gripe about long GitHub issues and PRs. ;)

But you realize that this a feature, not a bug? :)

https://blog.codinghorror.com/web-discussions-flat-by-design/

  --
    Ned Deily
    nad at python.org -- []
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190212/b972ba35/attachment.html>

From guido at python.org  Tue Feb 12 21:52:03 2019
From: guido at python.org (Guido van Rossum)
Date: Tue, 12 Feb 2019 18:52:03 -0800
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <A2277D8D-10DC-4F3B-9D25-85EC9BA37EDC@python.org>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
 <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
 <44395311-CC7A-47F5-8636-7A9960F6D810@python.org>
 <A2277D8D-10DC-4F3B-9D25-85EC9BA37EDC@python.org>
Message-ID: <CAP7+vJLY9PhDWUbvvOW3Jznb5qdj15TF9s_CTQGiDhK6kQ998Q@mail.gmail.com>

On Tue, Feb 12, 2019 at 6:01 PM Ned Deily <nad at python.org> wrote:

> On Feb 12, 2019, at 20:36, Barry Warsaw <barry at python.org> wrote:
>
> On Feb 12, 2019, at 13:59, Antoine Pitrou <antoine at python.org> wrote:
> I know I can browse easily through a 161-message mailing-list or
>
> newsgroup thread using a traditional threaded view, read what I want,
>
> come back later to read the rest, etc.  But Discourse's linear
>
> presentation pretty much kills that ability.  It doesn't even allow
>
> *seeing* the structure of the discussion.
>
> That?s pretty much my same, biggest gripe about long GitHub issues and
> PRs. ;)
>
>
> But you realize that this a feature, not a bug? :)
>
> https://blog.codinghorror.com/web-discussions-flat-by-design/
>

Thanks for the link. I'm convinced. (No sarcasm.)

-- 
--Guido van Rossum (python.org/~guido)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190212/cef09d3e/attachment.html>

From g.rodola at gmail.com  Wed Feb 13 05:01:50 2019
From: g.rodola at gmail.com (Giampaolo Rodola')
Date: Wed, 13 Feb 2019 11:01:50 +0100
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
 <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
Message-ID: <CAFYqXL9tW+hw7WfhSFnraZg8yT2_NkPwCLBkKnXdm+7oTtEMkg@mail.gmail.com>

On Tue, Feb 12, 2019 at 10:59 PM Antoine Pitrou <antoine at python.org> wrote:

>
> Le 11/02/2019 ? 20:00, Barry Warsaw a ?crit :
> > On Feb 11, 2019, at 09:48, Victor Stinner <vstinner at redhat.com> wrote:
> >>
> >> tl; dr How can we decide if we should stop using mailing list or if we
> >> should stop using discuss.python.org?
> >
> > Point of order: I think we need a PEP for this decision.  Such a PEP
> would organize and consolidate the arguments both pro and con of the three
> choices.  It should also cover whether the current Discourse experiment
> translates to larger mailing lists like python-dev, -ideas, and -list (for
> which I personally have uncertainty about).
>
> Same uncertainty here.  I don't think Discourse works well for long
> threads.
>
> Here is a 161-message Discourse thread (at the time of this writing):
> https://discuss.python.org/t/pep-517-backend-bootstrapping/789
>
> I know I can browse easily through a 161-message mailing-list or
> newsgroup thread using a traditional threaded view, read what I want,
> come back later to read the rest, etc.  But Discourse's linear
> presentation pretty much kills that ability.  It doesn't even allow
> *seeing* the structure of the discussion.
>

What bothers me about medium/long threads (say > 20 messages) is an "expand
all" button, showing the full conversation (upon which I may then want to
use CTRL+F). The only way to do that is by scrolling the page all the way
up or down, and in a long discussion like that one it takes a long time. If
you start at the middle of the discussion, say here:
https://discuss.python.org/t/pep-517-backend-bootstrapping/789/80
...you have to do both (scroll up, reach the top, scroll down, reach the
bottom - only then you'll have the full thread).

-- 
Giampaolo - http://grodola.blogspot.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190213/e4559d5f/attachment-0001.html>

From g.rodola at gmail.com  Wed Feb 13 05:03:43 2019
From: g.rodola at gmail.com (Giampaolo Rodola')
Date: Wed, 13 Feb 2019 11:03:43 +0100
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <CAFYqXL9tW+hw7WfhSFnraZg8yT2_NkPwCLBkKnXdm+7oTtEMkg@mail.gmail.com>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
 <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
 <CAFYqXL9tW+hw7WfhSFnraZg8yT2_NkPwCLBkKnXdm+7oTtEMkg@mail.gmail.com>
Message-ID: <CAFYqXL9iwOAtziB9g6Sxr4KY+Xus8e5uHWh0in=0gV1odz3P4w@mail.gmail.com>

On Wed, Feb 13, 2019 at 11:01 AM Giampaolo Rodola' <g.rodola at gmail.com>
wrote:

>
>
> On Tue, Feb 12, 2019 at 10:59 PM Antoine Pitrou <antoine at python.org>
> wrote:
>
>>
>> Le 11/02/2019 ? 20:00, Barry Warsaw a ?crit :
>> > On Feb 11, 2019, at 09:48, Victor Stinner <vstinner at redhat.com> wrote:
>> >>
>> >> tl; dr How can we decide if we should stop using mailing list or if we
>> >> should stop using discuss.python.org?
>> >
>> > Point of order: I think we need a PEP for this decision.  Such a PEP
>> would organize and consolidate the arguments both pro and con of the three
>> choices.  It should also cover whether the current Discourse experiment
>> translates to larger mailing lists like python-dev, -ideas, and -list (for
>> which I personally have uncertainty about).
>>
>> Same uncertainty here.  I don't think Discourse works well for long
>> threads.
>>
>> Here is a 161-message Discourse thread (at the time of this writing):
>> https://discuss.python.org/t/pep-517-backend-bootstrapping/789
>>
>> I know I can browse easily through a 161-message mailing-list or
>> newsgroup thread using a traditional threaded view, read what I want,
>> come back later to read the rest, etc.  But Discourse's linear
>> presentation pretty much kills that ability.  It doesn't even allow
>> *seeing* the structure of the discussion.
>>
>
> What bothers me about medium/long threads (say > 20 messages) is an
> "expand all" button
>

I meant "[the lack of] an "expand all" button (sorry).

Giampaolo - http://grodola.blogspot.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190213/27d055a9/attachment.html>

From p.f.moore at gmail.com  Wed Feb 13 05:55:18 2019
From: p.f.moore at gmail.com (Paul Moore)
Date: Wed, 13 Feb 2019 10:55:18 +0000
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
 <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
Message-ID: <CACac1F8mRSX_VP3ZDnBdrgoiCkK30u7SKy=2Vci2Q3Et-2o=cQ@mail.gmail.com>

On Tue, 12 Feb 2019 at 22:00, Antoine Pitrou <antoine at python.org> wrote:
> Here is a 161-message Discourse thread (at the time of this writing):
> https://discuss.python.org/t/pep-517-backend-bootstrapping/789

As someone directly involved in that discussion, with a strong need to
understand all of the points being made, that's a great example of
both the benefits and the flaws of the discourse model.

> I know I can browse easily through a 161-message mailing-list or
> newsgroup thread using a traditional threaded view, read what I want,
> come back later to read the rest, etc.  But Discourse's linear
> presentation pretty much kills that ability.  It doesn't even allow
> *seeing* the structure of the discussion.

I don't use a threaded mail client (I use gmail's web interface) so I
don't get any of the benefits of threading from a mailing list. So to
that extent, Discourse's lack of threading is no different for me, and
shouldn't affect my ability to follow the discussion. But it *does*,
and in practice, it's substantially worse than a traditional mailing
list. (Note: this is only a comment about long, complex discussions
like this one, for shorter threads the Discourse view is fine).

The problem isn't, IMO, so much the lack of threading as the lack of
*context*. We're all used to (and frustrated by) mailing list threads
that are 90% quoted text. But Discourse goes to the other extreme, of
having very *little* context - no thread structure, a tendency towards
minimal quoting, and an *extremely* non-obvious "reply" UI (you can
"reply" to any message, or to the thread as a whole, but the
distinction is almost invisible, and doesn't support "replying to"
*part* of a long comment.

Also, the lack of any "mark unread" functionality makes it easy to
lose track of where you're up to - I popped into that discussion to
check some facts for this post, and found myself needing to read a
number of quite detailed messages, as otherwise they would no longer
show as "unread" for me, and I'd risk losing my place in the
discussion. I know there are bookmarks, but they don't match my mental
model which is "I saw these posts, but haven't *read* them".

Anyway, I remain generally happy with Discourse for lower-traffic
lists that have relatively short threads. Medium sized ones (like
packaging replacing distutils-sig) I'm not certain about yet, but I
think "probably no worse" is as far as I'd go right now. For groups
like python-dev or (worse still) python-ideas I feel like they would
be a terrible fit. There's also the interaction effect - high traffic
in one category pushes out information about what's new in *other*
categories, and there's no "list of categories with a count of unread
messages" view to mitigate it.

tl;dr; I don't think discourse scales particularly well to long,
complex discussions, but I think it's less about threading than about
other aspects of the UI. At the end of the day, managing long, complex
discussions is *hard* and I think Discourse is optimised for different
parts of the spectrum than mailing lists. But while the day to day
volume of traffic might be shorter threads, the massive, complex,
rambling threads are the lifeblood of Python development (much as we
might all hate them ;-)) and we need to be cautious about making
decisions for those cases based on evidence from other, simpler,
situations.

Paul

From brett at python.org  Wed Feb 13 14:12:02 2019
From: brett at python.org (Brett Cannon)
Date: Wed, 13 Feb 2019 11:12:02 -0800
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <CACac1F8mRSX_VP3ZDnBdrgoiCkK30u7SKy=2Vci2Q3Et-2o=cQ@mail.gmail.com>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
 <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
 <CACac1F8mRSX_VP3ZDnBdrgoiCkK30u7SKy=2Vci2Q3Et-2o=cQ@mail.gmail.com>
Message-ID: <CAP1=2W7rpXEDAW-U5+qLCgZ15rMv5kbXhSk9Yfgc2yVWZ38q3w@mail.gmail.com>

On Wed, Feb 13, 2019 at 2:55 AM Paul Moore <p.f.moore at gmail.com> wrote:

> On Tue, 12 Feb 2019 at 22:00, Antoine Pitrou <antoine at python.org> wrote:
> > Here is a 161-message Discourse thread (at the time of this writing):
> > https://discuss.python.org/t/pep-517-backend-bootstrapping/789
>
> As someone directly involved in that discussion, with a strong need to
> understand all of the points being made, that's a great example of
> both the benefits and the flaws of the discourse model.
>

Can I ask if that entire thread is on topic, or is there a reasonable point
in that discussion where side conversations could have been broken off into
a separate topic(s)? When email threads tend to reach that length there
have been side discussions that could have become their own topic if
someone thought to change the subject and Discourse allows for having an
admin break posts off at any point and I'm curious if it would have been
helpful and people simply didn't think about it (I know I don't always
think of it immediately yet).

-Brett


>
> > I know I can browse easily through a 161-message mailing-list or
> > newsgroup thread using a traditional threaded view, read what I want,
> > come back later to read the rest, etc.  But Discourse's linear
> > presentation pretty much kills that ability.  It doesn't even allow
> > *seeing* the structure of the discussion.
>
> I don't use a threaded mail client (I use gmail's web interface) so I
> don't get any of the benefits of threading from a mailing list. So to
> that extent, Discourse's lack of threading is no different for me, and
> shouldn't affect my ability to follow the discussion. But it *does*,
> and in practice, it's substantially worse than a traditional mailing
> list. (Note: this is only a comment about long, complex discussions
> like this one, for shorter threads the Discourse view is fine).
>
> The problem isn't, IMO, so much the lack of threading as the lack of
> *context*. We're all used to (and frustrated by) mailing list threads
> that are 90% quoted text. But Discourse goes to the other extreme, of
> having very *little* context - no thread structure, a tendency towards
> minimal quoting, and an *extremely* non-obvious "reply" UI (you can
> "reply" to any message, or to the thread as a whole, but the
> distinction is almost invisible, and doesn't support "replying to"
> *part* of a long comment.
>
> Also, the lack of any "mark unread" functionality makes it easy to
> lose track of where you're up to - I popped into that discussion to
> check some facts for this post, and found myself needing to read a
> number of quite detailed messages, as otherwise they would no longer
> show as "unread" for me, and I'd risk losing my place in the
> discussion. I know there are bookmarks, but they don't match my mental
> model which is "I saw these posts, but haven't *read* them".
>
> Anyway, I remain generally happy with Discourse for lower-traffic
> lists that have relatively short threads. Medium sized ones (like
> packaging replacing distutils-sig) I'm not certain about yet, but I
> think "probably no worse" is as far as I'd go right now. For groups
> like python-dev or (worse still) python-ideas I feel like they would
> be a terrible fit. There's also the interaction effect - high traffic
> in one category pushes out information about what's new in *other*
> categories, and there's no "list of categories with a count of unread
> messages" view to mitigate it.
>
> tl;dr; I don't think discourse scales particularly well to long,
> complex discussions, but I think it's less about threading than about
> other aspects of the UI. At the end of the day, managing long, complex
> discussions is *hard* and I think Discourse is optimised for different
> parts of the spectrum than mailing lists. But while the day to day
> volume of traffic might be shorter threads, the massive, complex,
> rambling threads are the lifeblood of Python development (much as we
> might all hate them ;-)) and we need to be cautious about making
> decisions for those cases based on evidence from other, simpler,
> situations.
>
> Paul
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190213/03cdaf5f/attachment.html>

From antoine at python.org  Wed Feb 13 14:19:25 2019
From: antoine at python.org (Antoine Pitrou)
Date: Wed, 13 Feb 2019 20:19:25 +0100
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <CAP1=2W7rpXEDAW-U5+qLCgZ15rMv5kbXhSk9Yfgc2yVWZ38q3w@mail.gmail.com>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
 <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
 <CACac1F8mRSX_VP3ZDnBdrgoiCkK30u7SKy=2Vci2Q3Et-2o=cQ@mail.gmail.com>
 <CAP1=2W7rpXEDAW-U5+qLCgZ15rMv5kbXhSk9Yfgc2yVWZ38q3w@mail.gmail.com>
Message-ID: <c3fda7be-5498-cac5-f8c0-ec281549b0a8@python.org>


Le 13/02/2019 ? 20:12, Brett Cannon a ?crit?:
> 
> 
> On Wed, Feb 13, 2019 at 2:55 AM Paul Moore <p.f.moore at gmail.com
> <mailto:p.f.moore at gmail.com>> wrote:
> 
>     On Tue, 12 Feb 2019 at 22:00, Antoine Pitrou <antoine at python.org
>     <mailto:antoine at python.org>> wrote:
>     > Here is a 161-message Discourse thread (at the time of this writing):
>     > https://discuss.python.org/t/pep-517-backend-bootstrapping/789
> 
>     As someone directly involved in that discussion, with a strong need to
>     understand all of the points being made, that's a great example of
>     both the benefits and the flaws of the discourse model.
> 
> 
> Can I ask if that entire thread is on topic, or is there a reasonable
> point in that discussion where side conversations could have been broken
> off into a separate topic(s)?

Well, you can legitimately ask but I'm entirely unable to answer, for
the simple reason that Discourse doesn't allow me to visually recognize
discussion branches and therefore potential "side conversations" ;-)

(also the fact that such breaking off requires on manual moderator labor
makes it potentially less efficient, but YMMV)

Regards

Antoine.

From steve.dower at python.org  Wed Feb 13 14:56:35 2019
From: steve.dower at python.org (Steve Dower)
Date: Wed, 13 Feb 2019 11:56:35 -0800
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <CAP1=2W7rpXEDAW-U5+qLCgZ15rMv5kbXhSk9Yfgc2yVWZ38q3w@mail.gmail.com>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
 <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
 <CACac1F8mRSX_VP3ZDnBdrgoiCkK30u7SKy=2Vci2Q3Et-2o=cQ@mail.gmail.com>
 <CAP1=2W7rpXEDAW-U5+qLCgZ15rMv5kbXhSk9Yfgc2yVWZ38q3w@mail.gmail.com>
Message-ID: <04a14491-51ae-724d-1eb4-708876089d7e@python.org>

On 13Feb2019 1112, Brett Cannon wrote:
> 
> 
> On Wed, Feb 13, 2019 at 2:55 AM Paul Moore <p.f.moore at gmail.com 
> <mailto:p.f.moore at gmail.com>> wrote:
> 
>     On Tue, 12 Feb 2019 at 22:00, Antoine Pitrou <antoine at python.org
>     <mailto:antoine at python.org>> wrote:
>      > Here is a 161-message Discourse thread (at the time of this writing):
>      > https://discuss.python.org/t/pep-517-backend-bootstrapping/789
> 
>     As someone directly involved in that discussion, with a strong need to
>     understand all of the points being made, that's a great example of
>     both the benefits and the flaws of the discourse model.
> 
> 
> Can I ask if that entire thread is on topic, or is there a reasonable 
> point in that discussion where side conversations could have been broken 
> off into a separate topic(s)? When email threads tend to reach that 
> length there have been side discussions that could have become their own 
> topic if someone thought to change the subject and Discourse allows for 
> having an admin break posts off at any point and I'm curious if it would 
> have been helpful and people simply didn't think about it (I know I 
> don't always think of it immediately yet).

My feeling (as I followed the entire discussion from the start) is that 
the side discussions all tied back, rather than diverging permanently. 
So at best it would be "you 2-3 go and discuss this part separately and 
come back when you agree", which as we know is often followed up by "you 
other 2-3 re-discuss everything they already discussed since you weren't 
part of the side discussion".

So in this case, I don't think it would have benefited from being split 
out. In fact, I think it worked best in the linear form because when 
someone (typically either Paul or Thomas) declared a summary, it 
basically forced all the branches to converge.

It's a long discussion because it has no clear answer and the concerns 
are on the level of "what weird things will the entire world do if we 
offer this", which can't be tested. As far as asynchronous, online-only 
options go, I'm not convinced that any other approach would have worked 
better.

Cheers,
Steve

From p.f.moore at gmail.com  Wed Feb 13 15:17:03 2019
From: p.f.moore at gmail.com (Paul Moore)
Date: Wed, 13 Feb 2019 20:17:03 +0000
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <04a14491-51ae-724d-1eb4-708876089d7e@python.org>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
 <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
 <CACac1F8mRSX_VP3ZDnBdrgoiCkK30u7SKy=2Vci2Q3Et-2o=cQ@mail.gmail.com>
 <CAP1=2W7rpXEDAW-U5+qLCgZ15rMv5kbXhSk9Yfgc2yVWZ38q3w@mail.gmail.com>
 <04a14491-51ae-724d-1eb4-708876089d7e@python.org>
Message-ID: <CACac1F-viEjuhu6WD9x-s61oaHFBs7TkEJ0k=oLCRfD-3QKO7w@mail.gmail.com>

On Wed, 13 Feb 2019 at 19:56, Steve Dower <steve.dower at python.org> wrote:
>
> On 13Feb2019 1112, Brett Cannon wrote:
> >
> >
> > On Wed, Feb 13, 2019 at 2:55 AM Paul Moore <p.f.moore at gmail.com
> > <mailto:p.f.moore at gmail.com>> wrote:
> >
> >     On Tue, 12 Feb 2019 at 22:00, Antoine Pitrou <antoine at python.org
> >     <mailto:antoine at python.org>> wrote:
> >      > Here is a 161-message Discourse thread (at the time of this writing):
> >      > https://discuss.python.org/t/pep-517-backend-bootstrapping/789
> >
> >     As someone directly involved in that discussion, with a strong need to
> >     understand all of the points being made, that's a great example of
> >     both the benefits and the flaws of the discourse model.
> >
> >
> > Can I ask if that entire thread is on topic, or is there a reasonable
> > point in that discussion where side conversations could have been broken
> > off into a separate topic(s)? When email threads tend to reach that
> > length there have been side discussions that could have become their own
> > topic if someone thought to change the subject and Discourse allows for
> > having an admin break posts off at any point and I'm curious if it would
> > have been helpful and people simply didn't think about it (I know I
> > don't always think of it immediately yet).
>
> My feeling (as I followed the entire discussion from the start) is that
> the side discussions all tied back, rather than diverging permanently.
> So at best it would be "you 2-3 go and discuss this part separately and
> come back when you agree", which as we know is often followed up by "you
> other 2-3 re-discuss everything they already discussed since you weren't
> part of the side discussion".

Precisely this. I don't know *how* I would have split off a separate
sub-thread in Discourse if needed (it's easy enough in email by
changing the subject, I presume it's not much harder in Discourse?)
but I don't think there was any obvious point at which that would have
helped rather than hindering. And as the goal of the whole thread was
to reach a consensus on a change to PEP 517, if we *had* split things
up, there would have been the problem of pulling the subthreads
together again later.

> So in this case, I don't think it would have benefited from being split
> out. In fact, I think it worked best in the linear form because when
> someone (typically either Paul or Thomas) declared a summary, it
> basically forced all the branches to converge.

I can't speak for Thomas, but I think I would have done exactly the
same in mailing list form. As I said elsewhere, I don't think the
difficulties are particularly about linear vs threaded forms.

> It's a long discussion because it has no clear answer and the concerns
> are on the level of "what weird things will the entire world do if we
> offer this", which can't be tested. As far as asynchronous, online-only
> options go, I'm not convinced that any other approach would have worked
> better.

When trying to do those summaries, and trying to catch up now (I've
been unable to follow the discussion closely for a week or two) I'd
say the Discourse format made it a bit harder. But that's *not* linear
vs threaded, it's more about things like how quoting works and how
comments are linked back to what they are referring to. (On the other
hand, rich text, and not having to deal with email mangling of quoting
structure, help a lot).

Big discussions like this one are hard *whatever* medium is used. I
don't think Discourse is *bad*, I just don't think it's noticeably
*better* than email. And my major concern is that I don't think
Discourse will scale well to high-traffic categories with substantial
numbers of this sort of discussion (and worse, I think the existence
of high-traffic categories could have a detrimental effect on more
moderately-sized ones). But I think it's too early to tell for sure.

Back to the original question, about the committers list:

1. I think the committers traffic is the right sort of size for
Discourse, and works OK.
2. I think Discourse is bad for "quick turnaround" things like votes,
because it's too easy for people not to see the discussion until it's
too late (and no, I don't think formally posted voting periods will
help much there). It *may* be possible to alter people's expectations
to make the slower turnaround acceptable - it's not like (say) a core
developer vote has to be resolved particularly quickly, after all.
3. I don't think any conclusions we draw based on the committers
category should be assumed to scale to larger lists (whether in terms
of number of messages, number of participants, length or complexity of
threads, or anything else).

Paul

From greg at krypto.org  Wed Feb 13 15:31:35 2019
From: greg at krypto.org (Gregory P. Smith)
Date: Wed, 13 Feb 2019 12:31:35 -0800
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
 <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
Message-ID: <CAGE7PN+ttgKU5WEyA3AjuBXW002S6DgbfE7yR4UxtrbfR69BNg@mail.gmail.com>

On Tue, Feb 12, 2019 at 1:59 PM Antoine Pitrou <antoine at python.org> wrote:

>
> Le 11/02/2019 ? 20:00, Barry Warsaw a ?crit :
> > On Feb 11, 2019, at 09:48, Victor Stinner <vstinner at redhat.com> wrote:
> >>
> >> tl; dr How can we decide if we should stop using mailing list or if we
> >> should stop using discuss.python.org?
> >
> > Point of order: I think we need a PEP for this decision.  Such a PEP
> would organize and consolidate the arguments both pro and con of the three
> choices.  It should also cover whether the current Discourse experiment
> translates to larger mailing lists like python-dev, -ideas, and -list (for
> which I personally have uncertainty about).
>
> Same uncertainty here.  I don't think Discourse works well for long
> threads.
>
> Here is a 161-message Discourse thread (at the time of this writing):
> https://discuss.python.org/t/pep-517-backend-bootstrapping/789
>
> I know I can browse easily through a 161-message mailing-list or
> newsgroup thread using a traditional threaded view, read what I want,
> come back later to read the rest, etc.  But Discourse's linear
> presentation pretty much kills that ability.  It doesn't even allow
> *seeing* the structure of the discussion.
>

Neither does my email client.  It never will, nor can we require mailing
list participants to use any specific type of email client.

If we want to enforce an *interface* on people, IMNSHO that is what
something like Discourse is for.  It levels the playing field and provides
modern features way beyond 1900s style email listserv communication while
still allowing interaction via email.

To wit, I also agree with the flat-by-design link posted further down
thread.  Scrollwheel skimming further it looks like what I've said
reinforces points already made by Paul and others.

I don't personally find that _anything_ works well for long threads.  I'm
not convinced that problem is solvable for more than a minority fraction of
participants.  So lets not try ourselves, but lets not reject change
because it doesn't solve that problem.  Look at the existing problems it
_does_ solve and seek to address and understand new problems it creates.
That'd all be part of a Discourse related PEP.

Remember, we could still be using cvs.  Lets not be that project.

-gps
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190213/dc8401d5/attachment.html>

From barry at python.org  Wed Feb 13 15:33:22 2019
From: barry at python.org (Barry Warsaw)
Date: Wed, 13 Feb 2019 12:33:22 -0800
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <A2277D8D-10DC-4F3B-9D25-85EC9BA37EDC@python.org>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
 <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
 <44395311-CC7A-47F5-8636-7A9960F6D810@python.org>
 <A2277D8D-10DC-4F3B-9D25-85EC9BA37EDC@python.org>
Message-ID: <9E198009-7E47-4537-AFC2-7B8296686616@python.org>

On Feb 12, 2019, at 18:01, Ned Deily <nad at python.org> wrote:
> 
> On Feb 12, 2019, at 20:36, Barry Warsaw <barry at python.org> wrote:
>> On Feb 12, 2019, at 13:59, Antoine Pitrou <antoine at python.org> wrote:
>> I know I can browse easily through a 161-message mailing-list or
>>> newsgroup thread using a traditional threaded view, read what I want,
>>> come back later to read the rest, etc.  But Discourse's linear
>>> presentation pretty much kills that ability.  It doesn't even allow
>>> *seeing* the structure of the discussion.
>> That?s pretty much my same, biggest gripe about long GitHub issues and PRs. ;)
> 
> But you realize that this a feature, not a bug? :)
> 
> https://blog.codinghorror.com/web-discussions-flat-by-design/

Unfortunately, that post doesn?t talk about all the problems with flat discussions, and there are many.  So if we have to, we can agree that both have advantages and disadvantages, both have their proponents and detractors, and very likely both are appropriate to some forums and discussions and inappropriate (or ineffective) for others.  Or maybe more succinctly: both are terrible. ;)

That tells me either that the problem is fundamentally unsolvable due to the nature of online discussions, or we?re asking the wrong questions.

As far as software darwinism is concerned, we can also admit that top posting has won, but not necessarily because it?s superior (in fact, IMHO it?s not).  It?s just that mobile and webmail has taken over and either because of laziness or U/I difficulties, inline replies are too difficult.

We live with plenty of inferior technology for reasons that aren?t entirely based on actual efficiency and ease of use.  Techmology! (with apologies to Ali G).

-Barry

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190213/0b566780/attachment.sig>

From antoine at python.org  Wed Feb 13 15:50:07 2019
From: antoine at python.org (Antoine Pitrou)
Date: Wed, 13 Feb 2019 21:50:07 +0100
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <CAGE7PN+ttgKU5WEyA3AjuBXW002S6DgbfE7yR4UxtrbfR69BNg@mail.gmail.com>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
 <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
 <CAGE7PN+ttgKU5WEyA3AjuBXW002S6DgbfE7yR4UxtrbfR69BNg@mail.gmail.com>
Message-ID: <5621dd82-df82-ec01-9f12-1a7509904360@python.org>


Le 13/02/2019 ? 21:31, Gregory P. Smith a ?crit?:
> 
>     I know I can browse easily through a 161-message mailing-list or
>     newsgroup thread using a traditional threaded view, read what I want,
>     come back later to read the rest, etc.? But Discourse's linear
>     presentation pretty much kills that ability.? It doesn't even allow
>     *seeing* the structure of the discussion.
> 
> Neither does my email client.? It never will, nor can we require mailing
> list participants to use any specific type of email client.

Apparently you're saying that just because you can't/don't want to use a
more appropriate tool, other people shouldn't be able too.  That sounds
ridiculous to me.  Use an inferior tool if you want, but don't force
other people to.

> Remember, we could still be using cvs.? Lets not be that project.

Well, you're the one using an inferior e-mail client while better
options are available, IIUC.  Perhaps you are part of those CVS-liking
people? ;-)

Regards

Antoine.

From greg at krypto.org  Wed Feb 13 17:07:42 2019
From: greg at krypto.org (Gregory P. Smith)
Date: Wed, 13 Feb 2019 14:07:42 -0800
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <5621dd82-df82-ec01-9f12-1a7509904360@python.org>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
 <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
 <CAGE7PN+ttgKU5WEyA3AjuBXW002S6DgbfE7yR4UxtrbfR69BNg@mail.gmail.com>
 <5621dd82-df82-ec01-9f12-1a7509904360@python.org>
Message-ID: <CAGE7PNKFWOU-qwDgdafvU64jaPHyfbbbHG=6cZiZRxAEEjZ7qQ@mail.gmail.com>

On Wed, Feb 13, 2019 at 12:50 PM Antoine Pitrou <antoine at python.org> wrote:

>
> Le 13/02/2019 ? 21:31, Gregory P. Smith a ?crit :
> >
> >     I know I can browse easily through a 161-message mailing-list or
> >     newsgroup thread using a traditional threaded view, read what I want,
> >     come back later to read the rest, etc.  But Discourse's linear
> >     presentation pretty much kills that ability.  It doesn't even allow
> >     *seeing* the structure of the discussion.
> >
> > Neither does my email client.  It never will, nor can we require mailing
> > list participants to use any specific type of email client.
>
> Apparently you're saying that just because you can't/don't want to use a
> more appropriate tool, other people shouldn't be able too.  That sounds
> ridiculous to me.  Use an inferior tool if you want, but don't force
> other people to.
>

I also use vi (vim, not nvi, i'm not *that* level of cool). ;)

-gps
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190213/f4b4b88b/attachment-0001.html>

From p.f.moore at gmail.com  Wed Feb 13 17:56:02 2019
From: p.f.moore at gmail.com (Paul Moore)
Date: Wed, 13 Feb 2019 22:56:02 +0000
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <5621dd82-df82-ec01-9f12-1a7509904360@python.org>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
 <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
 <CAGE7PN+ttgKU5WEyA3AjuBXW002S6DgbfE7yR4UxtrbfR69BNg@mail.gmail.com>
 <5621dd82-df82-ec01-9f12-1a7509904360@python.org>
Message-ID: <CACac1F-e5M_iN_Z6JtLVXp5uAOsQCVDToVfArLF-ZiPk7Sq4JA@mail.gmail.com>

On Wed, 13 Feb 2019 at 20:50, Antoine Pitrou <antoine at python.org> wrote:
> Apparently you're saying that just because you can't/don't want to use a
> more appropriate tool, other people shouldn't be able too.  That sounds
> ridiculous to me.  Use an inferior tool if you want, but don't force
> other people to.

That;'s a common complaint in these discussions and it has some merit.
However, Gregory also said (in a very relevant comment that you
unfortunately omitted):

>> If we want to enforce an interface on people, IMNSHO that is what something like Discourse is for

The question here is fundamentally, whether we do want to enforce an
interface on people. If we do, then there will be some losers (people
with effective and highly tuned email workflows, like yourself) and
some winners (for example, people like me who cannot in practical
terms use anything other than a web interface). The judgement is
whether the benefit to, and number of, the winners outweighs the
disadvantages to, and the numbers of, the losers. (And the more
abstract question of whether restricting users' choice is a good or a
bad thing, but I'm going to pass on that).

I don't know the answer. As a "winner", my feeling is that the
advantage to me is marginal for longer more complex discussions, and
reasonable for shorter discussions. So I don't feel that I'm much of a
data point.

Paul

From vstinner at redhat.com  Wed Feb 13 18:13:35 2019
From: vstinner at redhat.com (Victor Stinner)
Date: Thu, 14 Feb 2019 00:13:35 +0100
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <9E198009-7E47-4537-AFC2-7B8296686616@python.org>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
 <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
 <44395311-CC7A-47F5-8636-7A9960F6D810@python.org>
 <A2277D8D-10DC-4F3B-9D25-85EC9BA37EDC@python.org>
 <9E198009-7E47-4537-AFC2-7B8296686616@python.org>
Message-ID: <CA+3bQGFjVtVhKzDTHtbMD38hs9RmbghCXhSudM69udS3FJYqyg@mail.gmail.com>

Can the mailing list admin please move this sub-discussion about
thread vs flat into a new thread? I explicitly asked to please not
discuss advantages and disadvantages of mailing list vs Discourse
here:

"Please don't start a thread about the advantages and disavantages of
mailing lists and Discourse. It has been discussed multiple times.
There is a dedicated section on discuss.python.org!"

I only asked *how can we take a decision*?

:wink:

Victor

Le mer. 13 f?vr. 2019 ? 21:33, Barry Warsaw <barry at python.org> a ?crit :
>
> On Feb 12, 2019, at 18:01, Ned Deily <nad at python.org> wrote:
> >
> > On Feb 12, 2019, at 20:36, Barry Warsaw <barry at python.org> wrote:
> >> On Feb 12, 2019, at 13:59, Antoine Pitrou <antoine at python.org> wrote:
> >> I know I can browse easily through a 161-message mailing-list or
> >>> newsgroup thread using a traditional threaded view, read what I want,
> >>> come back later to read the rest, etc.  But Discourse's linear
> >>> presentation pretty much kills that ability.  It doesn't even allow
> >>> *seeing* the structure of the discussion.
> >> That?s pretty much my same, biggest gripe about long GitHub issues and PRs. ;)
> >
> > But you realize that this a feature, not a bug? :)
> >
> > https://blog.codinghorror.com/web-discussions-flat-by-design/
>
> Unfortunately, that post doesn?t talk about all the problems with flat discussions, and there are many.  So if we have to, we can agree that both have advantages and disadvantages, both have their proponents and detractors, and very likely both are appropriate to some forums and discussions and inappropriate (or ineffective) for others.  Or maybe more succinctly: both are terrible. ;)
>
> That tells me either that the problem is fundamentally unsolvable due to the nature of online discussions, or we?re asking the wrong questions.
>
> As far as software darwinism is concerned, we can also admit that top posting has won, but not necessarily because it?s superior (in fact, IMHO it?s not).  It?s just that mobile and webmail has taken over and either because of laziness or U/I difficulties, inline replies are too difficult.
>
> We live with plenty of inferior technology for reasons that aren?t entirely based on actual efficiency and ease of use.  Techmology! (with apologies to Ali G).
>
> -Barry
>
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/



-- 
Night gathers, and now my watch begins. It shall not end until my death.

From barry at python.org  Wed Feb 13 18:29:10 2019
From: barry at python.org (Barry Warsaw)
Date: Wed, 13 Feb 2019 15:29:10 -0800
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <CA+3bQGFjVtVhKzDTHtbMD38hs9RmbghCXhSudM69udS3FJYqyg@mail.gmail.com>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
 <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
 <44395311-CC7A-47F5-8636-7A9960F6D810@python.org>
 <A2277D8D-10DC-4F3B-9D25-85EC9BA37EDC@python.org>
 <9E198009-7E47-4537-AFC2-7B8296686616@python.org>
 <CA+3bQGFjVtVhKzDTHtbMD38hs9RmbghCXhSudM69udS3FJYqyg@mail.gmail.com>
Message-ID: <D5BB6BA4-AE60-4AE2-AC26-CA5E7D41062F@python.org>

On Feb 13, 2019, at 15:13, Victor Stinner <vstinner at redhat.com> wrote:
> 
> I only asked *how can we take a decision*?

We start with a PEP, then the SC will make a determination based on this PEP 13 Mandate:

"Establish appropriate decision-making processes for PEPs?

which is still a work in progress.  I think for the short term, we just continue the status quo.  It?s not ideal to have two forums for the same community, but it?s not such a burden that it needs immediate resolution, IMHO.

-Barry

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190213/b72872f1/attachment.sig>

From steve at pearwood.info  Wed Feb 13 19:25:28 2019
From: steve at pearwood.info (Steven D'Aprano)
Date: Thu, 14 Feb 2019 11:25:28 +1100
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <CA+3bQGFjVtVhKzDTHtbMD38hs9RmbghCXhSudM69udS3FJYqyg@mail.gmail.com>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
 <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
 <44395311-CC7A-47F5-8636-7A9960F6D810@python.org>
 <A2277D8D-10DC-4F3B-9D25-85EC9BA37EDC@python.org>
 <9E198009-7E47-4537-AFC2-7B8296686616@python.org>
 <CA+3bQGFjVtVhKzDTHtbMD38hs9RmbghCXhSudM69udS3FJYqyg@mail.gmail.com>
Message-ID: <20190214002528.GW1834@ando.pearwood.info>

On Thu, Feb 14, 2019 at 12:13:35AM +0100, Victor Stinner wrote:
> Can the mailing list admin please move this sub-discussion about
> thread vs flat into a new thread? I explicitly asked to please not
> discuss advantages and disadvantages of mailing list vs Discourse
> here:

Sadly, when you start a public discussion, you cannot control the 
direction that others take that discussion. You can only go with the 
flow, or resist, with as much grace as you can manage.


> "Please don't start a thread about the advantages and disavantages of
> mailing lists and Discourse. It has been discussed multiple times.
> There is a dedicated section on discuss.python.org!"

So, only those using Discourse are allowed to discuss the pros and cons 
of using Discourse? That might be a bit biased.


> I only asked *how can we take a decision*?

The more important question is "is now the right time to make a 
decision?"



-- 
Steven

From vstinner at redhat.com  Wed Feb 13 19:37:59 2019
From: vstinner at redhat.com (Victor Stinner)
Date: Thu, 14 Feb 2019 01:37:59 +0100
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <20190214002528.GW1834@ando.pearwood.info>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
 <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
 <44395311-CC7A-47F5-8636-7A9960F6D810@python.org>
 <A2277D8D-10DC-4F3B-9D25-85EC9BA37EDC@python.org>
 <9E198009-7E47-4537-AFC2-7B8296686616@python.org>
 <CA+3bQGFjVtVhKzDTHtbMD38hs9RmbghCXhSudM69udS3FJYqyg@mail.gmail.com>
 <20190214002528.GW1834@ando.pearwood.info>
Message-ID: <CA+3bQGFDsxqyAdn7Xjpfz6Nmr2W7BY1w49AJYsnmDq5auGoD_A@mail.gmail.com>

Le jeu. 14 f?vr. 2019 ? 01:25, Steven D'Aprano <steve at pearwood.info> a ?crit :
> On Thu, Feb 14, 2019 at 12:13:35AM +0100, Victor Stinner wrote:
> > Can the mailing list admin please move this sub-discussion about
> > thread vs flat into a new thread? I explicitly asked to please not
> > discuss advantages and disadvantages of mailing list vs Discourse
> > here:
>
> Sadly, when you start a public discussion, you cannot control the
> direction that others take that discussion. You can only go with the
> flow, or resist, with as much grace as you can manage.

Sorry, I was joking ;-) I perfectly know that people cannot resist to
share their opinion about mailing lists and Discourse. I just wanted
to troll because Discourse admins allows to move a part of a
discussion into a new topic, thing not possible in a mailing list.

Victor

From vstinner at redhat.com  Thu Feb 14 11:27:51 2019
From: vstinner at redhat.com (Victor Stinner)
Date: Thu, 14 Feb 2019 17:27:51 +0100
Subject: [python-committers] Paul Ganssle got the bug triage permission
Message-ID: <CA+3bQGGXNrFnEmQqp7yS-=+yezwj5g8hQEd4VOYREABYvAz79Q@mail.gmail.com>

Hi,

Paul Ganssle just asked me to close a bug which he fixed. Instead, I
just gave him the bug triage permission :-)

Paul is the author of dateutil:
https://github.com/dateutil/dateutil

He is fixing more and more datetime issues for longer than 1 year,
including some tricky and very old issues:
https://github.com/python/cpython/commits?author=pganssle

For example, he implemented .fromisoformat() which was a long awaited feature:
https://docs.python.org/dev/library/datetime.html#datetime.date.fromisoformat

Recently, he got the approval to change how datetime subclasses are
handled, feature very useful for third-party libraries written on top
of datetime:
https://github.com/python/cpython/commit/89427cd0feae25bbc8693abdccfa6a8c81a2689c

I'm happy to see him helping Alexander Belopopsky (current datetime
maintainer), on maintaining datime, who is more busy these days. By
the way, they met each other ;-)

I sent Paul instructions how to triage bug and links into the devguide.
I asked him to ask me before closing a bug.

Congrats Paul ;-)

Victor
-- 
Night gathers, and now my watch begins. It shall not end until my death.

From vstinner at redhat.com  Thu Feb 14 11:45:07 2019
From: vstinner at redhat.com (Victor Stinner)
Date: Thu, 14 Feb 2019 17:45:07 +0100
Subject: [python-committers] Paul Ganssle got the bug triage permission
In-Reply-To: <CA+3bQGGXNrFnEmQqp7yS-=+yezwj5g8hQEd4VOYREABYvAz79Q@mail.gmail.com>
References: <CA+3bQGGXNrFnEmQqp7yS-=+yezwj5g8hQEd4VOYREABYvAz79Q@mail.gmail.com>
Message-ID: <CA+3bQGH1k5axmeoq8NOJq25mU2c8V89sy0zZunjyf9ukU=ha-A@mail.gmail.com>

Le jeu. 14 f?vr. 2019 ? 17:27, Victor Stinner <vstinner at redhat.com> a ?crit :
> Paul is the author of dateutil:
> https://github.com/dateutil/dateutil

Correction: Gustavo Niemeyer is the dateutil original author, Paul is
the current maintainer.

Victor

From willingc at gmail.com  Thu Feb 14 12:02:47 2019
From: willingc at gmail.com (Carol Willing)
Date: Thu, 14 Feb 2019 09:02:47 -0800
Subject: [python-committers] Paul Ganssle got the bug triage permission
In-Reply-To: <CA+3bQGGXNrFnEmQqp7yS-=+yezwj5g8hQEd4VOYREABYvAz79Q@mail.gmail.com>
References: <CA+3bQGGXNrFnEmQqp7yS-=+yezwj5g8hQEd4VOYREABYvAz79Q@mail.gmail.com>
Message-ID: <E66D4D29-DAD7-44E5-AF82-694526764EDA@gmail.com>

Welcome Paul :D

Looking forward to working with you more.

> On Feb 14, 2019, at 8:27 AM, Victor Stinner <vstinner at redhat.com> wrote:
> 
> Hi,
> 
> Paul Ganssle just asked me to close a bug which he fixed. Instead, I
> just gave him the bug triage permission :-)
> 
> Paul is the author of dateutil:
> https://github.com/dateutil/dateutil
> 
> He is fixing more and more datetime issues for longer than 1 year,
> including some tricky and very old issues:
> https://github.com/python/cpython/commits?author=pganssle
> 
> For example, he implemented .fromisoformat() which was a long awaited feature:
> https://docs.python.org/dev/library/datetime.html#datetime.date.fromisoformat
> 
> Recently, he got the approval to change how datetime subclasses are
> handled, feature very useful for third-party libraries written on top
> of datetime:
> https://github.com/python/cpython/commit/89427cd0feae25bbc8693abdccfa6a8c81a2689c
> 
> I'm happy to see him helping Alexander Belopopsky (current datetime
> maintainer), on maintaining datime, who is more busy these days. By
> the way, they met each other ;-)
> 
> I sent Paul instructions how to triage bug and links into the devguide.
> I asked him to ask me before closing a bug.
> 
> Congrats Paul ;-)
> 
> Victor
> -- 
> Night gathers, and now my watch begins. It shall not end until my death.
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/


From p.f.moore at gmail.com  Thu Feb 14 12:11:15 2019
From: p.f.moore at gmail.com (Paul Moore)
Date: Thu, 14 Feb 2019 17:11:15 +0000
Subject: [python-committers] Paul Ganssle got the bug triage permission
In-Reply-To: <E66D4D29-DAD7-44E5-AF82-694526764EDA@gmail.com>
References: <CA+3bQGGXNrFnEmQqp7yS-=+yezwj5g8hQEd4VOYREABYvAz79Q@mail.gmail.com>
 <E66D4D29-DAD7-44E5-AF82-694526764EDA@gmail.com>
Message-ID: <CACac1F_AzU8FPcYaVt4D4w39QJAsWXxH21MYu4eDjANDZWCX7A@mail.gmail.com>

Congratulations, Paul, and welcome. Glad to have your help!
Paul

On Thu, 14 Feb 2019 at 17:04, Carol Willing <willingc at gmail.com> wrote:
>
> Welcome Paul :D
>
> Looking forward to working with you more.
>
> > On Feb 14, 2019, at 8:27 AM, Victor Stinner <vstinner at redhat.com> wrote:
> >
> > Hi,
> >
> > Paul Ganssle just asked me to close a bug which he fixed. Instead, I
> > just gave him the bug triage permission :-)
> >
> > Paul is the author of dateutil:
> > https://github.com/dateutil/dateutil
> >
> > He is fixing more and more datetime issues for longer than 1 year,
> > including some tricky and very old issues:
> > https://github.com/python/cpython/commits?author=pganssle
> >
> > For example, he implemented .fromisoformat() which was a long awaited feature:
> > https://docs.python.org/dev/library/datetime.html#datetime.date.fromisoformat
> >
> > Recently, he got the approval to change how datetime subclasses are
> > handled, feature very useful for third-party libraries written on top
> > of datetime:
> > https://github.com/python/cpython/commit/89427cd0feae25bbc8693abdccfa6a8c81a2689c
> >
> > I'm happy to see him helping Alexander Belopopsky (current datetime
> > maintainer), on maintaining datime, who is more busy these days. By
> > the way, they met each other ;-)
> >
> > I sent Paul instructions how to triage bug and links into the devguide.
> > I asked him to ask me before closing a bug.
> >
> > Congrats Paul ;-)
> >
> > Victor
> > --
> > Night gathers, and now my watch begins. It shall not end until my death.
> > _______________________________________________
> > python-committers mailing list
> > python-committers at python.org
> > https://mail.python.org/mailman/listinfo/python-committers
> > Code of Conduct: https://www.python.org/psf/codeofconduct/
>
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/

From brett at python.org  Thu Feb 14 12:38:29 2019
From: brett at python.org (Brett Cannon)
Date: Thu, 14 Feb 2019 09:38:29 -0800
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <CACac1F-viEjuhu6WD9x-s61oaHFBs7TkEJ0k=oLCRfD-3QKO7w@mail.gmail.com>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
 <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
 <CACac1F8mRSX_VP3ZDnBdrgoiCkK30u7SKy=2Vci2Q3Et-2o=cQ@mail.gmail.com>
 <CAP1=2W7rpXEDAW-U5+qLCgZ15rMv5kbXhSk9Yfgc2yVWZ38q3w@mail.gmail.com>
 <04a14491-51ae-724d-1eb4-708876089d7e@python.org>
 <CACac1F-viEjuhu6WD9x-s61oaHFBs7TkEJ0k=oLCRfD-3QKO7w@mail.gmail.com>
Message-ID: <CAP1=2W5wqdA_CxZTzr4xu3ZjMbVH2HV4sKSJKr_4qBCiT6SYSA@mail.gmail.com>

On Wed, Feb 13, 2019 at 12:17 PM Paul Moore <p.f.moore at gmail.com> wrote:

> On Wed, 13 Feb 2019 at 19:56, Steve Dower <steve.dower at python.org> wrote:
> >
> > On 13Feb2019 1112, Brett Cannon wrote:
> > >
> > >
> > > On Wed, Feb 13, 2019 at 2:55 AM Paul Moore <p.f.moore at gmail.com
> > > <mailto:p.f.moore at gmail.com>> wrote:
> > >
> > >     On Tue, 12 Feb 2019 at 22:00, Antoine Pitrou <antoine at python.org
> > >     <mailto:antoine at python.org>> wrote:
> > >      > Here is a 161-message Discourse thread (at the time of this
> writing):
> > >      > https://discuss.python.org/t/pep-517-backend-bootstrapping/789
> > >
> > >     As someone directly involved in that discussion, with a strong
> need to
> > >     understand all of the points being made, that's a great example of
> > >     both the benefits and the flaws of the discourse model.
> > >
> > >
> > > Can I ask if that entire thread is on topic, or is there a reasonable
> > > point in that discussion where side conversations could have been
> broken
> > > off into a separate topic(s)? When email threads tend to reach that
> > > length there have been side discussions that could have become their
> own
> > > topic if someone thought to change the subject and Discourse allows for
> > > having an admin break posts off at any point and I'm curious if it
> would
> > > have been helpful and people simply didn't think about it (I know I
> > > don't always think of it immediately yet).
> >
> > My feeling (as I followed the entire discussion from the start) is that
> > the side discussions all tied back, rather than diverging permanently.
> > So at best it would be "you 2-3 go and discuss this part separately and
> > come back when you agree", which as we know is often followed up by "you
> > other 2-3 re-discuss everything they already discussed since you weren't
> > part of the side discussion".
>
> Precisely this. I don't know *how* I would have split off a separate
> sub-thread in Discourse if needed (it's easy enough in email by
> changing the subject, I presume it's not much harder in Discourse?)
>

Nope, it's not hard. The process is:

   1. An admin notices/is asked to split a topic that has diverged
   2. The admin clicks the wrench icon and chooses to Select Posts
   3. You select posts either manually, post + all following, or post + all
   replies
   4. You then have the option to create a new topic for the selected
   posts, specifying category, title, labels, etc.

The pro to this compared to subject changing in an ML is it's retroactive.
The con is an admin needs to to it, but you can always @ mention 'admins'
-- maybe 'staff' group has the same abilities? -- to bring a thread to
their attention that needs splitting.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190214/cc9cd77c/attachment.html>

From njs at pobox.com  Thu Feb 14 17:20:44 2019
From: njs at pobox.com (Nathaniel Smith)
Date: Thu, 14 Feb 2019 14:20:44 -0800
Subject: [python-committers] Can we choose between mailing list and
 discuss.python.org?
In-Reply-To: <CAP1=2W5wqdA_CxZTzr4xu3ZjMbVH2HV4sKSJKr_4qBCiT6SYSA@mail.gmail.com>
References: <CA+3bQGFsRGK9tV65JVEezHyNuSaVFsAe6mPQBApdr_VQMYesUg@mail.gmail.com>
 <4F8F749B-DB89-42C8-95CE-E2BBE3283866@python.org>
 <fd3eebd8-9364-516b-45c6-0e576318d7cf@python.org>
 <CACac1F8mRSX_VP3ZDnBdrgoiCkK30u7SKy=2Vci2Q3Et-2o=cQ@mail.gmail.com>
 <CAP1=2W7rpXEDAW-U5+qLCgZ15rMv5kbXhSk9Yfgc2yVWZ38q3w@mail.gmail.com>
 <04a14491-51ae-724d-1eb4-708876089d7e@python.org>
 <CACac1F-viEjuhu6WD9x-s61oaHFBs7TkEJ0k=oLCRfD-3QKO7w@mail.gmail.com>
 <CAP1=2W5wqdA_CxZTzr4xu3ZjMbVH2HV4sKSJKr_4qBCiT6SYSA@mail.gmail.com>
Message-ID: <CAPJVwB==seKhjq372GKa_5_BW+LnAKU+LQEO7NnVtf=gU5C2Xg@mail.gmail.com>

On Thu, Feb 14, 2019, 09:39 Brett Cannon <brett at python.org wrote:

>
>
> On Wed, Feb 13, 2019 at 12:17 PM Paul Moore <p.f.moore at gmail.com> wrote:
>
>> On Wed, 13 Feb 2019 at 19:56, Steve Dower <steve.dower at python.org> wrote:
>> >
>> > On 13Feb2019 1112, Brett Cannon wrote:
>> > >
>> > >
>> > > On Wed, Feb 13, 2019 at 2:55 AM Paul Moore <p.f.moore at gmail.com
>> > > <mailto:p.f.moore at gmail.com>> wrote:
>> > >
>> > >     On Tue, 12 Feb 2019 at 22:00, Antoine Pitrou <antoine at python.org
>> > >     <mailto:antoine at python.org>> wrote:
>> > >      > Here is a 161-message Discourse thread (at the time of this
>> writing):
>> > >      > https://discuss.python.org/t/pep-517-backend-bootstrapping/789
>> > >
>> > >     As someone directly involved in that discussion, with a strong
>> need to
>> > >     understand all of the points being made, that's a great example of
>> > >     both the benefits and the flaws of the discourse model.
>> > >
>> > >
>> > > Can I ask if that entire thread is on topic, or is there a reasonable
>> > > point in that discussion where side conversations could have been
>> broken
>> > > off into a separate topic(s)? When email threads tend to reach that
>> > > length there have been side discussions that could have become their
>> own
>> > > topic if someone thought to change the subject and Discourse allows
>> for
>> > > having an admin break posts off at any point and I'm curious if it
>> would
>> > > have been helpful and people simply didn't think about it (I know I
>> > > don't always think of it immediately yet).
>> >
>> > My feeling (as I followed the entire discussion from the start) is that
>> > the side discussions all tied back, rather than diverging permanently.
>> > So at best it would be "you 2-3 go and discuss this part separately and
>> > come back when you agree", which as we know is often followed up by "you
>> > other 2-3 re-discuss everything they already discussed since you weren't
>> > part of the side discussion".
>>
>> Precisely this. I don't know *how* I would have split off a separate
>> sub-thread in Discourse if needed (it's easy enough in email by
>> changing the subject, I presume it's not much harder in Discourse?)
>>
>
> Nope, it's not hard. The process is:
>
>    1. An admin notices/is asked to split a topic that has diverged
>    2. The admin clicks the wrench icon and chooses to Select Posts
>    3. You select posts either manually, post + all following, or post +
>    all replies
>    4. You then have the option to create a new topic for the selected
>    posts, specifying category, title, labels, etc.
>
> The pro to this compared to subject changing in an ML is it's retroactive.
> The con is an admin needs to to it, but you can always @ mention 'admins'
> -- maybe 'staff' group has the same abilities? -- to bring a thread to
> their attention that needs splitting.
>

Apparently you don't actually need an admin to do this ? any user with
"trust level 4" can do it:
https://blog.discourse.org/2018/06/understanding-discourse-trust-levels/

That includes admins and moderators, but we can also promote as many people
as we want to that level, and they don't have to sign up for moderator work
or count against our staff account cap.

-n

>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190214/7fa53e20/attachment-0001.html>

From larry at hastings.org  Thu Feb 14 21:29:32 2019
From: larry at hastings.org (Larry Hastings)
Date: Thu, 14 Feb 2019 18:29:32 -0800
Subject: [python-committers] Proposed dates for Python 3.4.10 and Python
 3.5.7
Message-ID: <ad821da8-a8f3-0ff8-6366-b24c0209d3c3@hastings.org>


Howdy howdy!? It's time to make the next bugfix release of 3.5--and the 
/final/ release /ever/ of Python 3.4. Here's the schedule I propose:

    3.4.10rc1 and 3.5.7rc1 - Saturday March 2 2019
    3.4.10 final and 3.5.7 final - Saturday March 16 2019


What's going in these releases?? Not much.? I have two outstanding PRs 
against 3.5:

    bpo-33127 GH-10994: Compatibility patch for LibreSSL 2.7.0
    bpo-34623 GH-9933: XML_SetHashSalt in _elementtree

and one PR against 3.4:

    bpo-34623 GH-9953: Use XML_SetHashSalt in _elementtree

I expect to merge all three of those, I just need to get around to it.? 
There's one more recent security fix (bpo-35746, GH-11569) that? I want 
in these releases that still needs backporting.


And that's the entire list.? bpo-34623 is the only current release 
blocker for either 3.4 or 3.5--I'm not aware of anything else in the 
pipeline.? If you have anything you think needs to go into the next 3.5, 
or the final 3.4, and it's /not/ listed above, please either file a 
GitHub PR, file a release-blocker bug on bpo, or email me directly.


Good night sweet Python 3.4, and flights of angels sing thee to thy rest!


//arry/

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190214/329387b4/attachment.html>

From taleinat at gmail.com  Fri Feb 15 03:42:54 2019
From: taleinat at gmail.com (Tal Einat)
Date: Fri, 15 Feb 2019 10:42:54 +0200
Subject: [python-committers] Paul Ganssle got the bug triage permission
In-Reply-To: <CA+3bQGGXNrFnEmQqp7yS-=+yezwj5g8hQEd4VOYREABYvAz79Q@mail.gmail.com>
References: <CA+3bQGGXNrFnEmQqp7yS-=+yezwj5g8hQEd4VOYREABYvAz79Q@mail.gmail.com>
Message-ID: <CALWZvp76+X0abMT_3qCKo5p1hDPmSEaGZKJHAFe7=3RTDEGRLg@mail.gmail.com>

I've seen some great work from Paul Ganssle in the past year or so;
definitely well-deserved.

Congrats Paul!

On Thu, Feb 14, 2019 at 6:28 PM Victor Stinner <vstinner at redhat.com> wrote:

> Hi,
>
> Paul Ganssle just asked me to close a bug which he fixed. Instead, I
> just gave him the bug triage permission :-)
>
> Paul is the author of dateutil:
> https://github.com/dateutil/dateutil
>
> He is fixing more and more datetime issues for longer than 1 year,
> including some tricky and very old issues:
> https://github.com/python/cpython/commits?author=pganssle
>
> For example, he implemented .fromisoformat() which was a long awaited
> feature:
>
> https://docs.python.org/dev/library/datetime.html#datetime.date.fromisoformat
>
> Recently, he got the approval to change how datetime subclasses are
> handled, feature very useful for third-party libraries written on top
> of datetime:
>
> https://github.com/python/cpython/commit/89427cd0feae25bbc8693abdccfa6a8c81a2689c
>
> I'm happy to see him helping Alexander Belopopsky (current datetime
> maintainer), on maintaining datime, who is more busy these days. By
> the way, they met each other ;-)
>
> I sent Paul instructions how to triage bug and links into the devguide.
> I asked him to ask me before closing a bug.
>
> Congrats Paul ;-)
>
> Victor
> --
> Night gathers, and now my watch begins. It shall not end until my death.
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190215/184ed39c/attachment.html>

From vstinner at redhat.com  Tue Feb 19 12:19:32 2019
From: vstinner at redhat.com (Victor Stinner)
Date: Tue, 19 Feb 2019 18:19:32 +0100
Subject: [python-committers] Cheryl Sabella promoted as core dev
Message-ID: <CA+3bQGHTS06__NTTvv_vzwK-+XArZRvoPU5DBEzz6=rTuHqPRQ@mail.gmail.com>

Hi,

I opened a vote during 1 week to promote Cheryl Sabella. She got the
excellent score of 21 ?+1? vs 0 ?-1? with very encouraging comments.
Moreover, the Steering Council accepted the vote.
https://discuss.python.org/t/vote-to-promote-cheryl-sabella-as-a-core-developer/862

Welcome aboard Cheryl!

I offered to mentor her for one month to guide her in her new
responsibilities. For example, I asked her to ask me before merging a
pull request.

Cheryl: Would you like to introduce yourself shortly?

--

I sent an email to GitHub admins to add her to the GitHub python-core
team and to subscribe her to the python-committers mailing list. In
the meanwhile, I added her in copy of this email.

Ah, I already added her to
https://discuss.python.org/groups/committers and switcher the
"committer" bit in her https://bugs.python.org/user25861 account :-)

Victor
-- 
Night gathers, and now my watch begins. It shall not end until my death.

From mariatta at python.org  Tue Feb 19 12:45:32 2019
From: mariatta at python.org (Mariatta Wijaya)
Date: Tue, 19 Feb 2019 09:45:32 -0800
Subject: [python-committers] Cheryl Sabella promoted as core dev
In-Reply-To: <CA+3bQGHTS06__NTTvv_vzwK-+XArZRvoPU5DBEzz6=rTuHqPRQ@mail.gmail.com>
References: <CA+3bQGHTS06__NTTvv_vzwK-+XArZRvoPU5DBEzz6=rTuHqPRQ@mail.gmail.com>
Message-ID: <CAGbohna9vfqT569VKqZ7q2JyTsO3a4mM=zkZYgAy=bto05-EvA@mail.gmail.com>

Congrats, Cheryl.

Thank you for all your contributions so far. Glad to have you on the team.
?

On Tue, Feb 19, 2019 at 9:19 AM Victor Stinner <vstinner at redhat.com> wrote:

> Hi,
>
> I opened a vote during 1 week to promote Cheryl Sabella. She got the
> excellent score of 21 ?+1? vs 0 ?-1? with very encouraging comments.
> Moreover, the Steering Council accepted the vote.
>
> https://discuss.python.org/t/vote-to-promote-cheryl-sabella-as-a-core-developer/862
>
> Welcome aboard Cheryl!
>
> I offered to mentor her for one month to guide her in her new
> responsibilities. For example, I asked her to ask me before merging a
> pull request.
>
> Cheryl: Would you like to introduce yourself shortly?
>
> --
>
> I sent an email to GitHub admins to add her to the GitHub python-core
> team and to subscribe her to the python-committers mailing list. In
> the meanwhile, I added her in copy of this email.
>
> Ah, I already added her to
> https://discuss.python.org/groups/committers and switcher the
> "committer" bit in her https://bugs.python.org/user25861 account :-)
>
> Victor
> --
> Night gathers, and now my watch begins. It shall not end until my death.
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190219/841a693e/attachment.html>

From willingc at gmail.com  Tue Feb 19 12:51:12 2019
From: willingc at gmail.com (Carol Willing)
Date: Tue, 19 Feb 2019 09:51:12 -0800
Subject: [python-committers] Cheryl Sabella promoted as core dev
In-Reply-To: <CAGbohna9vfqT569VKqZ7q2JyTsO3a4mM=zkZYgAy=bto05-EvA@mail.gmail.com>
References: <CAGbohna9vfqT569VKqZ7q2JyTsO3a4mM=zkZYgAy=bto05-EvA@mail.gmail.com>
Message-ID: <1550598389.local-538a314f-dc46-v1.5.6-4cb1851b@getmailspring.com>

Congrats, Cheryl :D

I'm so happy to have you as a Core Developer. Thank you for the many thoughtful messages while triaging and fixing issues.
Warmly,
Carol
P.S. Thanks again for Terry, Cheryl, and Victor for demonstrating the benefits of mentoring. Great job!
On Feb 19 2019, at 9:45 am, Mariatta Wijaya <mariatta at python.org> wrote:
> Congrats, Cheryl.
>
> Thank you for all your contributions so far. Glad to have you on the team.
> ?
>
> On Tue, Feb 19, 2019 at 9:19 AM Victor Stinner <vstinner at redhat.com (mailto:vstinner at redhat.com)> wrote:
> > Hi,
> >
> > I opened a vote during 1 week to promote Cheryl Sabella. She got the
> > excellent score of 21 ?+1? vs 0 ?-1? with very encouraging comments.
> > Moreover, the Steering Council accepted the vote.
> > https://discuss.python.org/t/vote-to-promote-cheryl-sabella-as-a-core-developer/862
> >
> > Welcome aboard Cheryl!
> > I offered to mentor her for one month to guide her in her new
> > responsibilities. For example, I asked her to ask me before merging a
> > pull request.
> >
> > Cheryl: Would you like to introduce yourself shortly?
> > --
> > I sent an email to GitHub admins to add her to the GitHub python-core
> > team and to subscribe her to the python-committers mailing list. In
> > the meanwhile, I added her in copy of this email.
> >
> > Ah, I already added her to
> > https://discuss.python.org/groups/committers and switcher the
> > "committer" bit in her https://bugs.python.org/user25861 account :-)
> >
> > Victor
> > --
> > Night gathers, and now my watch begins. It shall not end until my death.
> > _______________________________________________
> > python-committers mailing list
> > python-committers at python.org (mailto:python-committers at python.org)
> > https://mail.python.org/mailman/listinfo/python-committers
> > Code of Conduct: https://www.python.org/psf/codeofconduct/
>
>
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190219/1fcce901/attachment.html>

From cheryl.sabella at gmail.com  Tue Feb 19 18:05:28 2019
From: cheryl.sabella at gmail.com (Cheryl Sabella)
Date: Tue, 19 Feb 2019 18:05:28 -0500
Subject: [python-committers] Hello!
Message-ID: <CABcGAgCQRj+mQ13jdWP=Lf26bZOoWA3cVG21C-F08OMq5O99DQ@mail.gmail.com>

Hello everyone!

Thank you for allowing me to join you.   All of your kind and encouraging
words on my nomination is quite overwhelming.  My goal when I started
contributing was to learn and to try to help out and that's what I hope to
continue to do.  Being recognized and appreciated for my contributions is
icing on the cake.  :-)

And thank you to Victor and Terry for mentoring and guiding me!  I hope you
both know how much I appreciate it.


Cheryl
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190219/b9a3cf7c/attachment-0001.html>

From antoine at python.org  Wed Feb 20 10:59:31 2019
From: antoine at python.org (Antoine Pitrou)
Date: Wed, 20 Feb 2019 16:59:31 +0100
Subject: [python-committers] Hello!
In-Reply-To: <CABcGAgCQRj+mQ13jdWP=Lf26bZOoWA3cVG21C-F08OMq5O99DQ@mail.gmail.com>
References: <CABcGAgCQRj+mQ13jdWP=Lf26bZOoWA3cVG21C-F08OMq5O99DQ@mail.gmail.com>
Message-ID: <936bc4ce-7651-59ba-698b-dfdb49683fdd@python.org>


Welcome on board Cheryl!

Regards

Antoine.


Le 20/02/2019 ? 00:05, Cheryl Sabella a ?crit?:
> Hello everyone!
> 
> Thank you for allowing me to join you. ? All of your kind and
> encouraging words on my nomination is quite overwhelming.? My goal when
> I started contributing was to learn and to try to help out and that's
> what I hope to continue to do.? Being recognized and appreciated for my
> contributions is icing on the cake.? :-)
> 
> And thank you to Victor and Terry for mentoring and guiding me!? I hope
> you both know how much I appreciate it.
> 
> 
> Cheryl
> 
> 
> 
> 
> 
> 
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
> 

From brett at python.org  Wed Feb 20 13:57:47 2019
From: brett at python.org (Brett Cannon)
Date: Wed, 20 Feb 2019 10:57:47 -0800
Subject: [python-committers] Hello!
In-Reply-To: <CABcGAgCQRj+mQ13jdWP=Lf26bZOoWA3cVG21C-F08OMq5O99DQ@mail.gmail.com>
References: <CABcGAgCQRj+mQ13jdWP=Lf26bZOoWA3cVG21C-F08OMq5O99DQ@mail.gmail.com>
Message-ID: <CAP1=2W5mvyqZTsbNL2WsRwGvJ-Vt0Z_9xfwSs66qbPenEVpNAQ@mail.gmail.com>

Welcome! Looking forward to hopefully meeting you in person at the language
summit at PyCon US and/or the dev sprints in September in London, UK!

On Tue, Feb 19, 2019 at 3:05 PM Cheryl Sabella <cheryl.sabella at gmail.com>
wrote:

> Hello everyone!
>
> Thank you for allowing me to join you.   All of your kind and encouraging
> words on my nomination is quite overwhelming.  My goal when I started
> contributing was to learn and to try to help out and that's what I hope to
> continue to do.  Being recognized and appreciated for my contributions is
> icing on the cake.  :-)
>
> And thank you to Victor and Terry for mentoring and guiding me!  I hope
> you both know how much I appreciate it.
>
>
> Cheryl
>
>
>
>
>
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190220/d6bfce2d/attachment.html>

From storchaka at gmail.com  Thu Feb 21 02:46:09 2019
From: storchaka at gmail.com (Serhiy Storchaka)
Date: Thu, 21 Feb 2019 09:46:09 +0200
Subject: [python-committers] New core developers
Message-ID: <32f203b6-0ae3-24b2-a989-000cd929867c@gmail.com>

What do you think about making Zackery Spytz, Andre Delfino and Alexey 
Izbyshev core developers?


Zackery Spytz contributed a lot of bugfixes, mostly for reference leaks 
and possible crashes. Some of them are trivial (but hard to discover), 
others are nontrivial, but all are qualified.

https://github.com/python/cpython/pulls?utf8=%E2%9C%93&q=is%3Apr+author%3AZackerySpytz


Andre Delfino contributed an enormous number of docfixes.

https://github.com/python/cpython/pulls?utf8=%E2%9C%93&q=is%3Apr+author%3Aandresdelfino


Alexey Izbyshev is not so active as the above two monsters, but his code 
and comments on the bug tracker look qualified.

https://github.com/python/cpython/pulls?utf8=%E2%9C%93&q=is%3Apr+author%3Aizbyshev


Could anybody please ask them whether they want to be core developers? I 
afraid that I may not have time for this, and in any case my English is 
not good. You have my voice for all of them. I think they could be core 
developers months ago, but I waited for the end of the Steering Council 
election.


From andrew.svetlov at gmail.com  Thu Feb 21 03:19:16 2019
From: andrew.svetlov at gmail.com (Andrew Svetlov)
Date: Thu, 21 Feb 2019 10:19:16 +0200
Subject: [python-committers] New core developers
In-Reply-To: <32f203b6-0ae3-24b2-a989-000cd929867c@gmail.com>
References: <32f203b6-0ae3-24b2-a989-000cd929867c@gmail.com>
Message-ID: <CAL3CFcX87+cdF=hA04yo8T7hzg4nFQyWBc_ZA0Exf7SJxAQ0mw@mail.gmail.com>

Agree with all three candidates.

On Thu, Feb 21, 2019 at 9:46 AM Serhiy Storchaka <storchaka at gmail.com> wrote:
>
> What do you think about making Zackery Spytz, Andre Delfino and Alexey
> Izbyshev core developers?
>
>
> Zackery Spytz contributed a lot of bugfixes, mostly for reference leaks
> and possible crashes. Some of them are trivial (but hard to discover),
> others are nontrivial, but all are qualified.
>
> https://github.com/python/cpython/pulls?utf8=%E2%9C%93&q=is%3Apr+author%3AZackerySpytz
>
>
> Andre Delfino contributed an enormous number of docfixes.
>
> https://github.com/python/cpython/pulls?utf8=%E2%9C%93&q=is%3Apr+author%3Aandresdelfino
>
>
> Alexey Izbyshev is not so active as the above two monsters, but his code
> and comments on the bug tracker look qualified.
>
> https://github.com/python/cpython/pulls?utf8=%E2%9C%93&q=is%3Apr+author%3Aizbyshev
>
>
> Could anybody please ask them whether they want to be core developers? I
> afraid that I may not have time for this, and in any case my English is
> not good. You have my voice for all of them. I think they could be core
> developers months ago, but I waited for the end of the Steering Council
> election.
>
> _______________________________________________
> python-committers mailing list
> python-committers at python.org
> https://mail.python.org/mailman/listinfo/python-committers
> Code of Conduct: https://www.python.org/psf/codeofconduct/



-- 
Thanks,
Andrew Svetlov

From vstinner at redhat.com  Thu Feb 21 05:35:39 2019
From: vstinner at redhat.com (Victor Stinner)
Date: Thu, 21 Feb 2019 11:35:39 +0100
Subject: [python-committers] New core developers
In-Reply-To: <32f203b6-0ae3-24b2-a989-000cd929867c@gmail.com>
References: <32f203b6-0ae3-24b2-a989-000cd929867c@gmail.com>
Message-ID: <CA+3bQGEk+v1cT65X2QKsko7s3hHw_zfxpWEHayQznADLXbiO1Q@mail.gmail.com>

Le jeu. 21 f?vr. 2019 ? 08:46, Serhiy Storchaka <storchaka at gmail.com> a ?crit :
> Alexey Izbyshev is not so active as the above two monsters, but his code
> and comments on the bug tracker look qualified.
>
> https://github.com/python/cpython/pulls?utf8=%E2%9C%93&q=is%3Apr+author%3Aizbyshev

I'm in touch with him. That's why I gave him the bug triage permission:
https://mail.python.org/pipermail/python-committers/2019-February/006511.html

We are working together on subprocess, vfork() and
os.posix_spawn/os.posix_spawnp.

My process is first to contact a contributor, offer to mentor them,
give them the bug triage permission, follow their work.

It's still unclear to me to decide how a candidate is ready or not. My
rule is to make sure that a candidate knows how to:

* accept review and rework their solution
* find the best solution for an issue
* know the Python coding style (Python: PEP 8, C: PEP 7)
* remember to write tests
* write a NEWS entry
* update "What's New in Python 3.x?" document
* understand backward compatibility rules

Checking all these items require to work closely with a contributor.
It's not easy to check everything from a single PR for example.

My criteria are mostly about "coding skills", other core devs may have
coding skills.

Coding skills are not the only required skills IMHO. For me, what
matters the most is if the contributor accepts criticism, like accept
to attempt a different approach, understand that they didn't fix the
root issue. I'm not sure how to explain that. I estimate the ability
of a candidate to work as a team. I'm not interested by "rock stars"
or "ninja devs" who are unable to work as a team.

I also try to remind basic principles of the Python Code of Conduct
like being respectful.

Right now, I didn't check all checkboxes in my head for Alexey
Izbyshev, but I also would like to promote him, at least in the long
term.

--

I also noticed Zackery Spytz and Andre Delfino contributions. If
someone wants to start the process to train them as core dev, I
propose to:

* mentor them
* give them the bug triage permission
* follow more closely their work

I'm already mentoring 4 persons. I prefer to not mentor too many
people in parallel.

--

I dislike talking about potential candidates in public. Usually, I
prefer to talk in private. I don't want to put pressure on a
candidate. For example, it's not because I mentor someone, that I will
force the mentoree to become a core dev. Anyone is free to do what
they want :-) Becoming a core dev is a slow process which requires a
lot of free time, especially at the beginning. Everybody is busy.

I decided to reply because I like the 3 names that you gave ;-)

Victor

From vstinner at redhat.com  Thu Feb 21 05:38:36 2019
From: vstinner at redhat.com (Victor Stinner)
Date: Thu, 21 Feb 2019 11:38:36 +0100
Subject: [python-committers] Date for the Language Summit?
Message-ID: <CA+3bQGFWWZP4LOxzqdTGYBfcXOdYZzTqK4ZA7t4_m16gy2fEHQ@mail.gmail.com>

Hi,

What will be the date of the Language Summit? I had to organize myself
very soon to get cheap flight and hotel, so I already booked
everything for Pycon US :-)

Who will be allowed to attend? Will we have enough seats for all
CPython core devs?

Mariatta, Lukasz: do you plan to invite people from other popular
Python projects or other Python implementations?

Victor
-- 
Night gathers, and now my watch begins. It shall not end until my death.

From doko at ubuntu.com  Thu Feb 21 05:44:40 2019
From: doko at ubuntu.com (Matthias Klose)
Date: Thu, 21 Feb 2019 11:44:40 +0100
Subject: [python-committers] Date for the Language Summit?
In-Reply-To: <CA+3bQGFWWZP4LOxzqdTGYBfcXOdYZzTqK4ZA7t4_m16gy2fEHQ@mail.gmail.com>
References: <CA+3bQGFWWZP4LOxzqdTGYBfcXOdYZzTqK4ZA7t4_m16gy2fEHQ@mail.gmail.com>
Message-ID: <d161232d-152c-6095-aa48-bccaf264e18f@ubuntu.com>

On 21.02.19 11:38, Victor Stinner wrote:
> Hi,
> 
> What will be the date of the Language Summit? I had to organize myself
> very soon to get cheap flight and hotel, so I already booked
> everything for Pycon US :-)

+1

> Who will be allowed to attend? Will we have enough seats for all
> CPython core devs?
> 
> Mariatta, Lukasz: do you plan to invite people from other popular
> Python projects or other Python implementations?

I would like to see some presence of setuptools/pip maintainers. I think that
was missed at last PyCon by Conda developers, and distro packagers from RedHat
and Debian/Ubuntu.

Matthias

From mariatta at python.org  Thu Feb 21 08:23:10 2019
From: mariatta at python.org (Mariatta)
Date: Thu, 21 Feb 2019 05:23:10 -0800
Subject: [python-committers] Date for the Language Summit?
In-Reply-To: <CAGbohnZgeDHDZcZYNUM-kWpMoWCp=KLGMCP_Qc8C9DcUTkvDpg@mail.gmail.com>
References: <CA+3bQGFWWZP4LOxzqdTGYBfcXOdYZzTqK4ZA7t4_m16gy2fEHQ@mail.gmail.com>
 <d161232d-152c-6095-aa48-bccaf264e18f@ubuntu.com>
 <CAGbohnZgeDHDZcZYNUM-kWpMoWCp=KLGMCP_Qc8C9DcUTkvDpg@mail.gmail.com>
Message-ID: <CAGbohnZ+yKJvu7Uv3maSCXqt8H1Zzr0Nwperw09AA1azXc=RCw@mail.gmail.com>

Date is listed here. More info will be added here too.
https://us.pycon.org/2019/events/language-summit/
Process will be slightly different this year. Sorry, I'm busy with
PyCascades this week. Next time I'll have more time to devote to this.

On Thu, Feb 21, 2019, 5:21 AM Mariatta <mariatta.wijaya at gmail.com> wrote:

> Date is listed here. More info will be added here too.
> https://us.pycon.org/2019/events/language-summit/
> Process will be slightly different this year. Sorry, I'm busy with
> PyCascades this week. Next time I'll have more time to devote to this.
>
> On Thu, Feb 21, 2019, 2:45 AM Matthias Klose <doko at ubuntu.com> wrote:
>
>> On 21.02.19 11:38, Victor Stinner wrote:
>> > Hi,
>> >
>> > What will be the date of the Language Summit? I had to organize myself
>> > very soon to get cheap flight and hotel, so I already booked
>> > everything for Pycon US :-)
>>
>> +1
>>
>> > Who will be allowed to attend? Will we have enough seats for all
>> > CPython core devs?
>> >
>> > Mariatta, Lukasz: do you plan to invite people from other popular
>> > Python projects or other Python implementations?
>>
>> I would like to see some presence of setuptools/pip maintainers. I think
>> that
>> was missed at last PyCon by Conda developers, and distro packagers from
>> RedHat
>> and Debian/Ubuntu.
>>
>> Matthias
>> _______________________________________________
>> python-committers mailing list
>> python-committers at python.org
>> https://mail.python.org/mailman/listinfo/python-committers
>> Code of Conduct: https://www.python.org/psf/codeofconduct/
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190221/a3f75450/attachment.html>

From vstinner at redhat.com  Thu Feb 21 09:12:36 2019
From: vstinner at redhat.com (Victor Stinner)
Date: Thu, 21 Feb 2019 15:12:36 +0100
Subject: [python-committers] Date for the Language Summit?
In-Reply-To: <CAGbohnZ+yKJvu7Uv3maSCXqt8H1Zzr0Nwperw09AA1azXc=RCw@mail.gmail.com>
References: <CA+3bQGFWWZP4LOxzqdTGYBfcXOdYZzTqK4ZA7t4_m16gy2fEHQ@mail.gmail.com>
 <d161232d-152c-6095-aa48-bccaf264e18f@ubuntu.com>
 <CAGbohnZgeDHDZcZYNUM-kWpMoWCp=KLGMCP_Qc8C9DcUTkvDpg@mail.gmail.com>
 <CAGbohnZ+yKJvu7Uv3maSCXqt8H1Zzr0Nwperw09AA1azXc=RCw@mail.gmail.com>
Message-ID: <CA+3bQGGuy58DAAV_HoSR1xZnoNeLTAReYcXp2XT3SoRLG6m=9w@mail.gmail.com>

Le jeu. 21 f?vr. 2019 ? 14:23, Mariatta <mariatta at python.org> a ?crit :
> Date is listed here. More info will be added here too.
> https://us.pycon.org/2019/events/language-summit/

"When: Wednesday, May 1, 2019, 10am?4pm"

Ok, thanks :-) I should be able to attend (if I'm invited ;-)), except
if Air France decide to organize a new strike (at they did last year
just before the Language Summit) ;-)

Victor
-- 
Night gathers, and now my watch begins. It shall not end until my death.

From vstinner at redhat.com  Fri Feb 22 08:30:02 2019
From: vstinner at redhat.com (Victor Stinner)
Date: Fri, 22 Feb 2019 14:30:02 +0100
Subject: [python-committers] =?utf-8?q?Andr=C3=A9s_Delfino_got_the_bug_tr?=
 =?utf-8?q?iage_permission?=
Message-ID: <CA+3bQGEfcLrAWGMC=GoYoxm=LQJaSnKnZy986M89z8C1riyGZg@mail.gmail.com>

Hi,

As Serhiy Storchaka noticed, Andr?s Delfino is very active in Python
since April 2018. He got
not less than 79 commits merged into mater:
https://github.com/python/cpython/pulls?utf8=%E2%9C%93&q=is%3Apr+author%3Aandresdelfino

$ git log --author=adelfino at gmail.com|grep ^commit -c
79

Andr?s Delfino enhanced a lot the documentation, but also stdlib modules:
---
commit b2043bbe6034b53f5ad337887f4741b74b70b00d
Author: Andr?s Delfino <adelfino at gmail.com>
Date:   Sat May 5 13:07:32 2018 -0300

    bpo-33422: Fix quotation marks getting deleted when looking up
byte/string literals on pydoc. (GH-6701)

commit c3b7a6dfb9c7e69093c9fe78ab587e14743e5152
Author: Andr?s Delfino <adelfino at gmail.com>
Date:   Mon Apr 30 13:30:53 2018 -0300

    bpo-33352: Skip test_regrtest test if rt.bat does not exist (GH-6654)

commit a6dc531063efe3a8d47ff4639729060c72a3688c
Author: Andr?s Delfino <adelfino at gmail.com>
Date:   Fri Oct 26 11:56:57 2018 -0300

    bpo-34789: make xml.sax.make_parser accept iterables of all types (GH-9576)
---

I decided to give him the bug triage permission.

I sent Andr?s instructions how to triage bug and links into the
devguide. I asked him to ask me before closing a bug.

Congrats Andr?s ;-)

Victor
-- 
Night gathers, and now my watch begins. It shall not end until my death.

From lukasz at langa.pl  Mon Feb 25 15:05:41 2019
From: lukasz at langa.pl (=?utf-8?Q?=C5=81ukasz_Langa?=)
Date: Mon, 25 Feb 2019 21:05:41 +0100
Subject: [python-committers] [RELEASE] Python 3.8.0a1 is now available for
 testing
Message-ID: <8AFF29B7-D3DB-4DE1-BAF7-CAE6F4017378@langa.pl>

I packaged another release. Go get it here:
https://www.python.org/downloads/release/python-380a2/

Python 3.8.0a2 is the second of four planned alpha releases of Python 3.8,
the next feature release of Python.  During the alpha phase, Python 3.8
remains under heavy development: additional features will be added
and existing features may be modified or deleted.  Please keep in mind
that this is a preview release and its use is not recommended for
production environments.  The next preview release, 3.8.0a3, is planned
for 2019-03-25.

This time around the stable buildbots were a bit less green than they should have. This early in the cycle, I didn't postpone the release and I didn't use the revert hammer. But soon enough, I will. Let's make sure future changes keep the buildbots happy.

- ?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190225/1c3870f5/attachment.sig>

From vstinner at redhat.com  Tue Feb 26 18:34:48 2019
From: vstinner at redhat.com (Victor Stinner)
Date: Wed, 27 Feb 2019 00:34:48 +0100
Subject: [python-committers] OpenMandriva and Fedora abandoned Discourse for
 development discussions
Message-ID: <CA+3bQGF2Jo7q5uJB7bPZPMifgSWjFDKfZ9FDH8dPUFuocE9JFQ@mail.gmail.com>

Hi,

Follow-up of the previous "Can we choose between mailing list and
discuss.python.org?" thread.

Python isn't the first project who "experimented" Discourse to replace
mailing lists. It seems like Fedora and OpenMandriva are coming back
to mailing lists, at least for "development discussions":

https://lists.fedoraproject.org/archives/list/council-discuss at lists.fedoraproject.org/message/XQLY3MRJLC4CFMIRSYU5LRQSOPFF532X/

Fedora uses Mailman 3:
https://lists.fedoraproject.org/archives/

and Discourse:
https://discussion.fedoraproject.org/

Victor who is more and more confused by these topics...
-- 
Night gathers, and now my watch begins. It shall not end until my death.

From lukasz at langa.pl  Wed Feb 27 08:22:51 2019
From: lukasz at langa.pl (=?utf-8?Q?=C5=81ukasz_Langa?=)
Date: Wed, 27 Feb 2019 14:22:51 +0100
Subject: [python-committers] Announcing: signups are open for the 2019
 Python Language Summit
Message-ID: <DB43E0A7-81A2-4576-B92B-2A9CFE6E6865@langa.pl>

The Python Language Summit is an event for the developers of Python
implementations (CPython, PyPy, Jython, and so on) to share information,
discuss our shared problems, and ? hopefully ? solve them.

These issues might be related to the language itself, the standard
library, the development process, status of Python 3.8 (or plans for
3.9), the documentation, packaging, the website, et cetera. The Summit
focuses on discussion more than on presentations.

If you?d like to attend **and actively participate** in the discussions
during the Language Summit, please fill in this form by March 21st 2019:

https://goo.gl/forms/pexfOGDjpV0BWMer2

We will be evaluating all applications and confirm your attendance by
April 15th. Note: **your attendance is not confirmed** until you heard
back from us.  You don't need to be registered for PyCon in order to
attend the summit.

One of the goals of the Language Summit is to speed up the discussions
and decision making process. Communication over Discourse (or mailing
lists!) is generally more time consuming. As part of efforts to make
this event more open and less mysterious, we are not requiring
invitations by core developers anymore.

However, please understand that we will have to be selective as space
and time are limited. In particular, we are prioritizing active core
contributors, as well as those who we believe will be able to improve
the quality of the discussions at the event and bring a more diverse
perspective to core Python developers.

As for other changes this year, A. Jesse Jiryu Davis will be covering
the event and will post a detailed write up on the official blog of the
PSF shortly after the conference.

We hope to see you at the Summit!
- Mariatta and ?ukasz

PS. If you have any questions, the Users section of our Discourse
instance (https://discuss.python.org/c/users) is the best place to ask.
For private communication, write to mariatta at python.org and/or
lukasz at python.org.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190227/0d383607/attachment.sig>

From lukasz at langa.pl  Wed Feb 27 08:37:04 2019
From: lukasz at langa.pl (=?utf-8?Q?=C5=81ukasz_Langa?=)
Date: Wed, 27 Feb 2019 14:37:04 +0100
Subject: [python-committers] Announcing: signups are open for the 2019
 Python Language Summit
In-Reply-To: <DB43E0A7-81A2-4576-B92B-2A9CFE6E6865@langa.pl>
References: <DB43E0A7-81A2-4576-B92B-2A9CFE6E6865@langa.pl>
Message-ID: <6EA254C2-B893-48D8-9FE7-7BF73012E392@langa.pl>


> On 27 Feb 2019, at 14:22, ?ukasz Langa <lukasz at langa.pl> wrote:
> 
> The Python Language Summit is an event for the developers of Python
> implementations (CPython, PyPy, Jython, and so on) to share information,
> discuss our shared problems, and ? hopefully ? solve them.

Oh, you'd also like to know *when* and *where* it is? Fine.

- When: Wednesday, May 1st 2019
- Where: 0Huntington Convention Center in Cleveland, Ohio

Sorry for missing this in the original e-mail,
?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: Message signed with OpenPGP
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190227/b923854c/attachment.sig>

From brett at python.org  Wed Feb 27 16:11:38 2019
From: brett at python.org (Brett Cannon)
Date: Wed, 27 Feb 2019 13:11:38 -0800
Subject: [python-committers] OpenMandriva and Fedora abandoned Discourse
 for development discussions
In-Reply-To: <CA+3bQGF2Jo7q5uJB7bPZPMifgSWjFDKfZ9FDH8dPUFuocE9JFQ@mail.gmail.com>
References: <CA+3bQGF2Jo7q5uJB7bPZPMifgSWjFDKfZ9FDH8dPUFuocE9JFQ@mail.gmail.com>
Message-ID: <CAP1=2W4gPtNYh+SRbBtEio9KmLTuoKybeQq_Wk-XmagqPo-TwQ@mail.gmail.com>

On Tue, Feb 26, 2019 at 3:40 PM Victor Stinner <vstinner at redhat.com> wrote:

> Hi,
>
> Follow-up of the previous "Can we choose between mailing list and
> discuss.python.org?" thread.
>
> Python isn't the first project who "experimented" Discourse to replace
> mailing lists. It seems like Fedora and OpenMandriva are coming back
> to mailing lists, at least for "development discussions":
>
>
> https://lists.fedoraproject.org/archives/list/council-discuss at lists.fedoraproject.org/message/XQLY3MRJLC4CFMIRSYU5LRQSOPFF532X/
>

It sounds like their overall team is much larger than ours based on the
tone of that email (is that true?). We have also talked about having both
Discourse and python-committers for announcements which would partially
alleviate some of their concerns.

I also think it's telling that their decision to do this was done on IRC
which is not a primary communication platform for all of us and suggests
that it's possible the desires/needs/expectations of those participating
are different.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190227/a5893b0a/attachment.html>

From doko at ubuntu.com  Wed Feb 27 16:21:02 2019
From: doko at ubuntu.com (Matthias Klose)
Date: Wed, 27 Feb 2019 22:21:02 +0100
Subject: [python-committers] OpenMandriva and Fedora abandoned Discourse
 for development discussions
In-Reply-To: <CAP1=2W4gPtNYh+SRbBtEio9KmLTuoKybeQq_Wk-XmagqPo-TwQ@mail.gmail.com>
References: <CA+3bQGF2Jo7q5uJB7bPZPMifgSWjFDKfZ9FDH8dPUFuocE9JFQ@mail.gmail.com>
 <CAP1=2W4gPtNYh+SRbBtEio9KmLTuoKybeQq_Wk-XmagqPo-TwQ@mail.gmail.com>
Message-ID: <171d3936-0782-fa05-e398-8fb65b5f7539@ubuntu.com>

On 27.02.19 22:11, Brett Cannon wrote:
> On Tue, Feb 26, 2019 at 3:40 PM Victor Stinner <vstinner at redhat.com> wrote:
> 
>> Hi,
>>
>> Follow-up of the previous "Can we choose between mailing list and
>> discuss.python.org?" thread.
>>
>> Python isn't the first project who "experimented" Discourse to replace
>> mailing lists. It seems like Fedora and OpenMandriva are coming back
>> to mailing lists, at least for "development discussions":
>>
>>
>> https://lists.fedoraproject.org/archives/list/council-discuss at lists.fedoraproject.org/message/XQLY3MRJLC4CFMIRSYU5LRQSOPFF532X/
>>
> 
> It sounds like their overall team is much larger than ours based on the
> tone of that email (is that true?). We have also talked about having both
> Discourse and python-committers for announcements which would partially
> alleviate some of their concerns.
> 
> I also think it's telling that their decision to do this was done on IRC
> which is not a primary communication platform for all of us and suggests
> that it's possible the desires/needs/expectations of those participating
> are different.

well, #python-dev is another topic.  It now gets spammed by many bots, and human
chats are lost in the noise.  That used to be better.

Matthias

From larry at hastings.org  Wed Feb 27 20:52:03 2019
From: larry at hastings.org (Larry Hastings)
Date: Wed, 27 Feb 2019 17:52:03 -0800
Subject: [python-committers] Proposed dates for Python 3.4.10 and Python
 3.5.7
In-Reply-To: <ad821da8-a8f3-0ff8-6366-b24c0209d3c3@hastings.org>
References: <ad821da8-a8f3-0ff8-6366-b24c0209d3c3@hastings.org>
Message-ID: <fcc0df98-5deb-64db-ab93-a3ad55b62fa8@hastings.org>


My thanks to Miro and (especially!) Victor for quickly putting together 
those lovely PRs.? I've now merged everything outstanding for 3.4 and 
3.5 except this:

    https://github.com/python/cpython/pull/10994

It's a backport of LibreSSL 2.7.0 support for 3.5.? This is something I 
believe Christian Heimes wanted.? As it stands, the issue needs a 
reviewer; I've contacted Christian but received no reply.? I'm happy to 
merge the PR as long as some security-aware core dev approves it.

FWIW, there doesn't appear to be a backport of this patch for 3.4.? I 
don't know if 3.4 should get this backport or not, and there's no 
discussion of 3.4 on the bpo issue:

    https://bugs.python.org/issue33127

Anyway, I'm hoping either to merge or reject this PR before Saturday, so 
there's no huge rush.? Still I'd appreciate it if someone could at least 
tag themselves as a reviewer in the next day or so.


Putting 3.4 to bed,


//arry/

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://mail.python.org/pipermail/python-committers/attachments/20190227/07828f38/attachment.html>

